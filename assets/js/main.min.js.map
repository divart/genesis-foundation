{"version":3,"sources":["foundation.js","what-input.js"],"names":["_classCallCheck","instance","Constructor","TypeError","$","functionName","fn","undefined","Function","prototype","name","funcNameRegex","results","exec","toString","length","trim","constructor","parseValue","str","test","isNaN","parseFloat","hyphenate","replace","toLowerCase","FOUNDATION_VERSION","Foundation","version","_plugins","_uuids","rtl","attr","plugin","className","attrName","this","registerPlugin","pluginName","uuid","GetYoDigits","$element","data","trigger","push","unregisterPlugin","splice","indexOf","removeAttr","removeData","prop","reInit","plugins","isJQ","each","_init","type","_this","fns","object","plgs","forEach","p","foundation","string","Object","keys","err","console","error","namespace","Math","round","pow","random","slice","reflow","elem","i","$elem","find","addBack","$el","opts","warn","split","e","opt","map","el","er","getFnName","transitionend","end","transitions","transition","WebkitTransition","MozTransition","OTransition","document","createElement","t","style","setTimeout","triggerHandler","util","throttle","func","delay","timer","context","args","arguments","apply","method","$meta","$noJS","appendTo","head","removeClass","MediaQuery","Array","call","plugClass","ReferenceError","window","Date","now","getTime","vendors","requestAnimationFrame","vp","cancelAnimationFrame","navigator","userAgent","lastTime","callback","nextTime","max","clearTimeout","performance","start","bind","oThis","aArgs","fToBind","fNOP","fBound","concat","jQuery","ImNotTouchingYou","element","parent","lrOnly","tbOnly","top","bottom","left","right","eleDims","GetDimensions","parDims","offset","height","width","windowDims","allDirs","Error","rect","getBoundingClientRect","parRect","parentNode","winRect","body","winY","pageYOffset","winX","pageXOffset","parentDims","GetOffsets","anchor","position","vOffset","hOffset","isOverflow","$eleDims","$anchorDims","Box","getKeyCodes","kcs","k","kc","keyCodes","9","13","27","32","37","38","39","40","commands","Keyboard","parseKey","event","key","which","keyCode","String","fromCharCode","toUpperCase","shiftKey","ctrlKey","altKey","handleKey","component","functions","cmds","command","commandList","ltr","extend","returnValue","handled","unhandled","findFocusable","filter","is","register","componentName","parseStyleToObject","styleObject","reduce","ret","param","parts","val","decodeURIComponent","hasOwnProperty","isArray","queries","current","namedQueries","self","extractedStyles","css","value","_getCurrentSize","_watcher","atLeast","size","query","get","matchMedia","matches","matched","on","newSize","currentSize","styleMedia","media","script","getElementsByTagName","info","id","insertBefore","getComputedStyle","currentStyle","matchMedium","text","styleSheet","cssText","textContent","Move","duration","move","ts","prog","anim","animate","isIn","animation","cb","finish","hide","reset","transitionDuration","initClass","activeClass","eq","initClasses","activeClasses","addClass","show","offsetWidth","one","Motion","animateIn","animateOut","Nest","Feather","menu","items","role","subMenuClass","subItemClass","hasSubClass","$item","$sub","children","aria-haspopup","aria-expanded","aria-label","data-submenu","aria-hidden","Burn","Timer","options","nameSpace","remain","isPaused","restart","infinite","pause","onImagesLoaded","images","singleImageLoaded","unloaded","complete","naturalWidth","onTouchEnd","removeEventListener","onTouchMove","isMoving","spotSwipe","preventDefault","dir","x","touches","pageX","dx","pageY","startPosX","elapsedTime","startTime","abs","moveThreshold","timeThreshold","onTouchStart","startPosY","addEventListener","init","enabled","documentElement","special","swipe","setup","noop","addTouch","handleTouch","simulatedEvent","changedTouches","first","eventTypes","touchstart","touchmove","touchend","MouseEvent","bubbles","cancelable","screenX","screenY","clientX","clientY","createEvent","initMouseEvent","target","dispatchEvent","checkListeners","eventsListener","resizeListener","scrollListener","closemeListener","yetiBoxes","plugNames","listeners","join","off","pluginId","not","debounce","$nodes","MutationObserver","nodes","querySelectorAll","listeningElementsMutation","mutationRecordsList","$target","elementObserver","observe","attributes","childList","characterData","subtree","attributeFilter","prefixes","triggers","stopPropagation","fadeOut","load","IHearYou","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","protoProps","staticProps","Abide","defaults","$inputs","_events","_this2","resetForm","validateForm","validateOn","validateInput","liveValidate","isGood","checked","$error","siblings","formErrorSelector","$label","closest","$els","_this3","labels","findLabel","$formError","findFormError","labelErrorClass","formErrorClass","inputErrorClass","groupName","$labels","findRadioLabels","$formErrors","removeRadioErrorClasses","clearRequire","requiredCheck","validated","customValidator","validator","equalTo","validateRadio","validateText","matchValidation","validators","goodToGo","message","acc","noError","pattern","inputText","valid","patterns","RegExp","$group","required","_this4","clear","v","$form","removeErrorClasses","alpha","alpha_numeric","integer","number","card","cvv","email","url","domain","datetime","date","time","dateISO","month_day_year","day_month_year","color","Accordion","ENTER","SPACE","ARROW_DOWN","ARROW_UP","$tabs","idx","$content","linkId","aria-controls","aria-selected","aria-labelledby","$initActive","down","$tabContent","hasClass","allowAllClosed","up","toggle","next","$a","focus","multiExpand","previous","prev","firstTime","$currentActive","slideDown","slideSpeed","$aunts","canClose","slideUp","stop","AccordionMenu","ARROW_RIGHT","ARROW_LEFT","ESCAPE","TAB","SHIFT_TAB","aria-multiselectable","multiOpen","$menuLinks","subId","isActive","initPanes","$submenu","$prevElement","$nextElement","$elements","min","parents","open","close","closeAll","hideAll","stopImmediatePropagation","parentsUntil","add","$menus","Drilldown","$submenuAnchors","$submenus","$menuItems","_prepareMenu","_keyboardEvents","$link","parentLink","clone","prependTo","wrap","tabindex","$menu","$back","prepend","backButton","_back","$wrapper","wrapper","_getMaxDims","_show","closeOnClick","$body","contains","_hideAll","_hide","blur","result","numOfElems","unwrap","remove","Dropdown","$id","$anchor","data-is-focus","data-yeti-box","positionClass","getPositionClass","counter","usedPositions","data-resize","verticalPosition","match","horizontalPosition","classChanged","direction","_reposition","_setPosition","open.zf.trigger","close.zf.trigger","toggle.zf.trigger","resizeme.zf.trigger","hover","timeout","hoverDelay","hoverPane","visibleFocusableElements","tab_forward","trapFocus","tab_backward","autoFocus","$focusable","_addBodyHandler","curPositionClass","DropdownMenu","subs","verticalClass","rightClass","alignment","changed","hasTouch","ontouchstart","parClass","handleClickFn","hasSub","hasClicked","clickOpen","forceFollow","disableHover","autoclose","closingTime","isTab","index","nextSibling","prevSibling","openSub","closeSub","$sibs","oldClass","$parentLi","$toClose","somethingToClose","data-is-click","Equalizer","eqId","$watched","hasNested","isNested","isOn","_bindHandler","onResizeMeBound","_onResizeMe","onPostEqualizedBound","_onPostEqualized","tooSmall","imgs","equalizeOn","_checkMQ","_reflow",".zf.equalizer","_pauseEvents","equalizeOnStack","_isStacked","equalizeByRow","getHeightsByRow","applyHeightByRow","getHeights","applyHeight","heights","len","offsetHeight","lastElTopOffset","groups","group","elOffsetTop","j","ln","groupsILength","lenJ","Interchange","rules","currentPath","_addBreakpoints","_generateRules","rule","path","SPECIAL_QUERIES","rulesList","nodeName","background-image","response","html","landscape","portrait","retina","Magellan","$targets","$links","data-scroll","$active","scrollPos","parseInt","points","winHeight","innerHeight","clientHeight","docHeight","scrollHeight","$tar","pt","threshold","targetPoint","animationDuration","easing","animationEasing","deepLinking","location","hash","scrollToLoc","calcPoints","_updateActive","scrollme.zf.trigger","arrival","getAttribute","loc","barOffset","scrollTop","curIdx","winPos","isDown","curVisible","history","pushState","OffCanvas","$lastTrigger","$triggers","$exiter","exiter","setAttribute","append","isRevealed","revealClass","revealOn","_setMQChecker","transitionTime","keydown.zf.offcanvas","_handleKeyboard","click.zf.offcanvas","reveal","$closer","forceTop","_trapFocus","focusable","last","keycode","Orbit","containerClass","$slides","slideClass","$images","initActive","useMUI","_prepareForOrbit","bullets","_loadBullets","autoPlay","geoSync","accessible","$bullets","boxOfBullets","timerDelay","changeSlide","_setWrapperHeight","_setSlideHeight","temp","display","pauseOnHover","navButtons","$controls","nextClass","prevClass","$slide","isLTR","chosenSlide","$curSlide","$newSlide","$firstSlide","$lastSlide","dirIn","dirOut","infiniteWrap","_updateBullets","$oldBullet","span","detach","animInFromRight","animOutToRight","animInFromLeft","animOutToLeft","ResponsiveMenu","currentMq","currentPlugin","rulesTree","ruleSize","rulePlugin","MenuPlugins","isEmptyObject","_checkMediaQueries","matchedMq","cssClass","destroy","dropdown","drilldown","accordion","ResponsiveToggle","targetID","$targetMenu","$toggler","_update","_updateMqHandler","toggleMenu","hideFor","iPhoneSniff","androidSniff","mobileSniff","Reveal","cached","mq","isMobile","fullScreen","overlay","$overlay","_makeOverlay","deepLink","outerWidth","outerHeight","margin","_updatePosition","_handleState","visibility","multipleOpened","animationIn","afterAnimationFocus","log","focusableElements","showDelay","originalScrollPos","_extraHandlers","closeOnEsc","finishUp","animationOut","hideDelay","resetOnClose","replaceState","title","pathname","btmOffsetPct","percent","frac","num","absPosition","$handle","clickPos","Slider","SHIFT_ARROW_RIGHT","SHIFT_ARROW_UP","SHIFT_ARROW_DOWN","SHIFT_ARROW_LEFT","inputs","handles","$input","$fill","vertical","isDbl","disabled","disabledClass","binding","_setInitAttr","doubleSided","$handle2","$input2","_setHandlePos","initialStart","initialEnd","$hndl","noInvert","h2Val","step","h1Val","vert","hOrW","lOrT","handleDim","elemDim","pctOfBar","toFixed","pxToMove","movement","decimal","_setValues","dim","isLeftHndl","handlePct","handlePos","moveTime","changedDelay","aria-valuemax","aria-valuemin","aria-valuenow","aria-orientation","hasVal","_adjustValue","eventOffset","barDim","windowScroll","scrollLeft","elemOffset","barXY","eventFromBar","offsetPct","firstHndlPos","secndHndlPos","prev_val","next_val","div","curHandle","_handleEvent","clickSelect","draggable","currentTarget","newValue","_$handle","oldValue","decrease","increase","decrease_fast","increase_fast","invertVertical","emCalc","em","fontSize","Sticky","$parent","wasWrapped","$container","container","wrapInner","stickyClass","scrollCount","checkEvery","isStuck","_parsePoints","_setSizes","_calc","reverse","topAnchor","btm","btmAnchor","pts","breaks","place","canStick","_pauseListeners","checkSizes","scroll","topPoint","bottomPoint","_setSticky","_removeSticky","stickTo","mrgn","notStuckTo","isTop","stickToTop","anchorPt","anchorHeight","elemHeight","topOrBottom","stickyOn","newElemWidth","comp","pdng","max-width","newContainerHeight","containerHeight","_setBreakPoints","mTop","marginTop","mBtm","marginBottom","Tabs","$tabTitles","linkClass","matchHeight","_setHeight","_addKeyHandler","_addClickHandler","_setHeightMqHandler","_handleTabChange","wrapOnKeys","$tabLink","$targetContent","$oldTab","idStr","panelClass","panel","Toggler","input","toggleClass","_updateARIA","Tooltip","isClick","elemId","_getPositionClass","tipText","template","_buildTemplate","aria-describedby","data-toggle","triggerClass","templateClasses","tooltipClass","$template","data-is-active","$tipDims","showOn","fadeIn","fadeInDuration","fadeOutDuration","isFocus","disableForTouch","touchCloseText","whatInput","eventBuffer","clearTimer","setInput","buffer","bufferedEvent","unBufferedEvent","eventKey","inputMap","pointerType","currentInput","eventTarget","eventTargetNode","eventTargetType","hasAttribute","keyMap","nonTypingInputs","ignoreMap","switchInput","logKeys","inputTypes","srcElement","pointerMap","activeKeys","unLogKeys","arrayPos","bindEvents","PointerEvent","MSPointerEvent","mouseWheel","detectWheel","onmousewheel","keydown","keyup","mousedown","mousemove","MSPointerDown","MSPointerMove","pointerdown","pointermove","16","2","3","4","ask","types","set"],"mappings":"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","file":"assets/js/main.min.js","sourcesContent":["!function ($) {\n\n  \"use strict\";\n\n  var FOUNDATION_VERSION = '6.2.3';\n\n  // Global Foundation object\n  // This is attached to the window, or used as a module for AMD/Browserify\n  var Foundation = {\n    version: FOUNDATION_VERSION,\n\n    /**\n     * Stores initialized plugins.\n     */\n    _plugins: {},\n\n    /**\n     * Stores generated unique ids for plugin instances\n     */\n    _uuids: [],\n\n    /**\n     * Returns a boolean for RTL support\n     */\n    rtl: function () {\n      return $('html').attr('dir') === 'rtl';\n    },\n    /**\n     * Defines a Foundation plugin, adding it to the `Foundation` namespace and the list of plugins to initialize when reflowing.\n     * @param {Object} plugin - The constructor of the plugin.\n     */\n    plugin: function (plugin, name) {\n      // Object key to use when adding to global Foundation object\n      // Examples: Foundation.Reveal, Foundation.OffCanvas\n      var className = name || functionName(plugin);\n      // Object key to use when storing the plugin, also used to create the identifying data attribute for the plugin\n      // Examples: data-reveal, data-off-canvas\n      var attrName = hyphenate(className);\n\n      // Add to the Foundation object and the plugins list (for reflowing)\n      this._plugins[attrName] = this[className] = plugin;\n    },\n    /**\n     * @function\n     * Populates the _uuids array with pointers to each individual plugin instance.\n     * Adds the `zfPlugin` data-attribute to programmatically created plugins to allow use of $(selector).foundation(method) calls.\n     * Also fires the initialization event for each plugin, consolidating repetitive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @param {String} name - the name of the plugin, passed as a camelCased string.\n     * @fires Plugin#init\n     */\n    registerPlugin: function (plugin, name) {\n      var pluginName = name ? hyphenate(name) : functionName(plugin.constructor).toLowerCase();\n      plugin.uuid = this.GetYoDigits(6, pluginName);\n\n      if (!plugin.$element.attr('data-' + pluginName)) {\n        plugin.$element.attr('data-' + pluginName, plugin.uuid);\n      }\n      if (!plugin.$element.data('zfPlugin')) {\n        plugin.$element.data('zfPlugin', plugin);\n      }\n      /**\n       * Fires when the plugin has initialized.\n       * @event Plugin#init\n       */\n      plugin.$element.trigger('init.zf.' + pluginName);\n\n      this._uuids.push(plugin.uuid);\n\n      return;\n    },\n    /**\n     * @function\n     * Removes the plugins uuid from the _uuids array.\n     * Removes the zfPlugin data attribute, as well as the data-plugin-name attribute.\n     * Also fires the destroyed event for the plugin, consolidating repetitive code.\n     * @param {Object} plugin - an instance of a plugin, usually `this` in context.\n     * @fires Plugin#destroyed\n     */\n    unregisterPlugin: function (plugin) {\n      var pluginName = hyphenate(functionName(plugin.$element.data('zfPlugin').constructor));\n\n      this._uuids.splice(this._uuids.indexOf(plugin.uuid), 1);\n      plugin.$element.removeAttr('data-' + pluginName).removeData('zfPlugin')\n      /**\n       * Fires when the plugin has been destroyed.\n       * @event Plugin#destroyed\n       */\n      .trigger('destroyed.zf.' + pluginName);\n      for (var prop in plugin) {\n        plugin[prop] = null; //clean up script to prep for garbage collection.\n      }\n      return;\n    },\n\n    /**\n     * @function\n     * Causes one or more active plugins to re-initialize, resetting event listeners, recalculating positions, etc.\n     * @param {String} plugins - optional string of an individual plugin key, attained by calling `$(element).data('pluginName')`, or string of a plugin class i.e. `'dropdown'`\n     * @default If no argument is passed, reflow all currently active plugins.\n     */\n    reInit: function (plugins) {\n      var isJQ = plugins instanceof $;\n      try {\n        if (isJQ) {\n          plugins.each(function () {\n            $(this).data('zfPlugin')._init();\n          });\n        } else {\n          var type = typeof plugins,\n              _this = this,\n              fns = {\n            'object': function (plgs) {\n              plgs.forEach(function (p) {\n                p = hyphenate(p);\n                $('[data-' + p + ']').foundation('_init');\n              });\n            },\n            'string': function () {\n              plugins = hyphenate(plugins);\n              $('[data-' + plugins + ']').foundation('_init');\n            },\n            'undefined': function () {\n              this['object'](Object.keys(_this._plugins));\n            }\n          };\n          fns[type](plugins);\n        }\n      } catch (err) {\n        console.error(err);\n      } finally {\n        return plugins;\n      }\n    },\n\n    /**\n     * returns a random base-36 uid with namespacing\n     * @function\n     * @param {Number} length - number of random base-36 digits desired. Increase for more random strings.\n     * @param {String} namespace - name of plugin to be incorporated in uid, optional.\n     * @default {String} '' - if no plugin name is provided, nothing is appended to the uid.\n     * @returns {String} - unique id\n     */\n    GetYoDigits: function (length, namespace) {\n      length = length || 6;\n      return Math.round(Math.pow(36, length + 1) - Math.random() * Math.pow(36, length)).toString(36).slice(1) + (namespace ? '-' + namespace : '');\n    },\n    /**\n     * Initialize plugins on any elements within `elem` (and `elem` itself) that aren't already initialized.\n     * @param {Object} elem - jQuery object containing the element to check inside. Also checks the element itself, unless it's the `document` object.\n     * @param {String|Array} plugins - A list of plugins to initialize. Leave this out to initialize everything.\n     */\n    reflow: function (elem, plugins) {\n\n      // If plugins is undefined, just grab everything\n      if (typeof plugins === 'undefined') {\n        plugins = Object.keys(this._plugins);\n      }\n      // If plugins is a string, convert it to an array with one item\n      else if (typeof plugins === 'string') {\n          plugins = [plugins];\n        }\n\n      var _this = this;\n\n      // Iterate through each plugin\n      $.each(plugins, function (i, name) {\n        // Get the current plugin\n        var plugin = _this._plugins[name];\n\n        // Localize the search to all elements inside elem, as well as elem itself, unless elem === document\n        var $elem = $(elem).find('[data-' + name + ']').addBack('[data-' + name + ']');\n\n        // For each plugin found, initialize it\n        $elem.each(function () {\n          var $el = $(this),\n              opts = {};\n          // Don't double-dip on plugins\n          if ($el.data('zfPlugin')) {\n            console.warn(\"Tried to initialize \" + name + \" on an element that already has a Foundation plugin.\");\n            return;\n          }\n\n          if ($el.attr('data-options')) {\n            var thing = $el.attr('data-options').split(';').forEach(function (e, i) {\n              var opt = e.split(':').map(function (el) {\n                return el.trim();\n              });\n              if (opt[0]) opts[opt[0]] = parseValue(opt[1]);\n            });\n          }\n          try {\n            $el.data('zfPlugin', new plugin($(this), opts));\n          } catch (er) {\n            console.error(er);\n          } finally {\n            return;\n          }\n        });\n      });\n    },\n    getFnName: functionName,\n    transitionend: function ($elem) {\n      var transitions = {\n        'transition': 'transitionend',\n        'WebkitTransition': 'webkitTransitionEnd',\n        'MozTransition': 'transitionend',\n        'OTransition': 'otransitionend'\n      };\n      var elem = document.createElement('div'),\n          end;\n\n      for (var t in transitions) {\n        if (typeof elem.style[t] !== 'undefined') {\n          end = transitions[t];\n        }\n      }\n      if (end) {\n        return end;\n      } else {\n        end = setTimeout(function () {\n          $elem.triggerHandler('transitionend', [$elem]);\n        }, 1);\n        return 'transitionend';\n      }\n    }\n  };\n\n  Foundation.util = {\n    /**\n     * Function for applying a debounce effect to a function call.\n     * @function\n     * @param {Function} func - Function to be called at end of timeout.\n     * @param {Number} delay - Time in ms to delay the call of `func`.\n     * @returns function\n     */\n    throttle: function (func, delay) {\n      var timer = null;\n\n      return function () {\n        var context = this,\n            args = arguments;\n\n        if (timer === null) {\n          timer = setTimeout(function () {\n            func.apply(context, args);\n            timer = null;\n          }, delay);\n        }\n      };\n    }\n  };\n\n  // TODO: consider not making this a jQuery function\n  // TODO: need way to reflow vs. re-initialize\n  /**\n   * The Foundation jQuery method.\n   * @param {String|Array} method - An action to perform on the current jQuery object.\n   */\n  var foundation = function (method) {\n    var type = typeof method,\n        $meta = $('meta.foundation-mq'),\n        $noJS = $('.no-js');\n\n    if (!$meta.length) {\n      $('<meta class=\"foundation-mq\">').appendTo(document.head);\n    }\n    if ($noJS.length) {\n      $noJS.removeClass('no-js');\n    }\n\n    if (type === 'undefined') {\n      //needs to initialize the Foundation object, or an individual plugin.\n      Foundation.MediaQuery._init();\n      Foundation.reflow(this);\n    } else if (type === 'string') {\n      //an individual method to invoke on a plugin or group of plugins\n      var args = Array.prototype.slice.call(arguments, 1); //collect all the arguments, if necessary\n      var plugClass = this.data('zfPlugin'); //determine the class of plugin\n\n      if (plugClass !== undefined && plugClass[method] !== undefined) {\n        //make sure both the class and method exist\n        if (this.length === 1) {\n          //if there's only one, call it directly.\n          plugClass[method].apply(plugClass, args);\n        } else {\n          this.each(function (i, el) {\n            //otherwise loop through the jQuery collection and invoke the method on each\n            plugClass[method].apply($(el).data('zfPlugin'), args);\n          });\n        }\n      } else {\n        //error for no class or no method\n        throw new ReferenceError(\"We're sorry, '\" + method + \"' is not an available method for \" + (plugClass ? functionName(plugClass) : 'this element') + '.');\n      }\n    } else {\n      //error for invalid argument type\n      throw new TypeError('We\\'re sorry, ' + type + ' is not a valid parameter. You must use a string representing the method you wish to invoke.');\n    }\n    return this;\n  };\n\n  window.Foundation = Foundation;\n  $.fn.foundation = foundation;\n\n  // Polyfill for requestAnimationFrame\n  (function () {\n    if (!Date.now || !window.Date.now) window.Date.now = Date.now = function () {\n      return new Date().getTime();\n    };\n\n    var vendors = ['webkit', 'moz'];\n    for (var i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n      var vp = vendors[i];\n      window.requestAnimationFrame = window[vp + 'RequestAnimationFrame'];\n      window.cancelAnimationFrame = window[vp + 'CancelAnimationFrame'] || window[vp + 'CancelRequestAnimationFrame'];\n    }\n    if (/iP(ad|hone|od).*OS 6/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n      var lastTime = 0;\n      window.requestAnimationFrame = function (callback) {\n        var now = Date.now();\n        var nextTime = Math.max(lastTime + 16, now);\n        return setTimeout(function () {\n          callback(lastTime = nextTime);\n        }, nextTime - now);\n      };\n      window.cancelAnimationFrame = clearTimeout;\n    }\n    /**\n     * Polyfill for performance.now, required by rAF\n     */\n    if (!window.performance || !window.performance.now) {\n      window.performance = {\n        start: Date.now(),\n        now: function () {\n          return Date.now() - this.start;\n        }\n      };\n    }\n  })();\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== 'function') {\n        // closest thing possible to the ECMAScript 5\n        // internal IsCallable function\n        throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n      }\n\n      var aArgs = Array.prototype.slice.call(arguments, 1),\n          fToBind = this,\n          fNOP = function () {},\n          fBound = function () {\n        return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n      };\n\n      if (this.prototype) {\n        // native functions don't have a prototype\n        fNOP.prototype = this.prototype;\n      }\n      fBound.prototype = new fNOP();\n\n      return fBound;\n    };\n  }\n  // Polyfill to get the name of a function in IE9\n  function functionName(fn) {\n    if (Function.prototype.name === undefined) {\n      var funcNameRegex = /function\\s([^(]{1,})\\(/;\n      var results = funcNameRegex.exec(fn.toString());\n      return results && results.length > 1 ? results[1].trim() : \"\";\n    } else if (fn.prototype === undefined) {\n      return fn.constructor.name;\n    } else {\n      return fn.prototype.constructor.name;\n    }\n  }\n  function parseValue(str) {\n    if (/true/.test(str)) return true;else if (/false/.test(str)) return false;else if (!isNaN(str * 1)) return parseFloat(str);\n    return str;\n  }\n  // Convert PascalCase to kebab-case\n  // Thank you: http://stackoverflow.com/a/8955580\n  function hyphenate(str) {\n    return str.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  Foundation.Box = {\n    ImNotTouchingYou: ImNotTouchingYou,\n    GetDimensions: GetDimensions,\n    GetOffsets: GetOffsets\n  };\n\n  /**\n   * Compares the dimensions of an element to a container and determines collision events with container.\n   * @function\n   * @param {jQuery} element - jQuery object to test for collisions.\n   * @param {jQuery} parent - jQuery object to use as bounding container.\n   * @param {Boolean} lrOnly - set to true to check left and right values only.\n   * @param {Boolean} tbOnly - set to true to check top and bottom values only.\n   * @default if no parent object passed, detects collisions with `window`.\n   * @returns {Boolean} - true if collision free, false if a collision in any direction.\n   */\n  function ImNotTouchingYou(element, parent, lrOnly, tbOnly) {\n    var eleDims = GetDimensions(element),\n        top,\n        bottom,\n        left,\n        right;\n\n    if (parent) {\n      var parDims = GetDimensions(parent);\n\n      bottom = eleDims.offset.top + eleDims.height <= parDims.height + parDims.offset.top;\n      top = eleDims.offset.top >= parDims.offset.top;\n      left = eleDims.offset.left >= parDims.offset.left;\n      right = eleDims.offset.left + eleDims.width <= parDims.width + parDims.offset.left;\n    } else {\n      bottom = eleDims.offset.top + eleDims.height <= eleDims.windowDims.height + eleDims.windowDims.offset.top;\n      top = eleDims.offset.top >= eleDims.windowDims.offset.top;\n      left = eleDims.offset.left >= eleDims.windowDims.offset.left;\n      right = eleDims.offset.left + eleDims.width <= eleDims.windowDims.width;\n    }\n\n    var allDirs = [bottom, top, left, right];\n\n    if (lrOnly) {\n      return left === right === true;\n    }\n\n    if (tbOnly) {\n      return top === bottom === true;\n    }\n\n    return allDirs.indexOf(false) === -1;\n  };\n\n  /**\n   * Uses native methods to return an object of dimension values.\n   * @function\n   * @param {jQuery || HTML} element - jQuery object or DOM element for which to get the dimensions. Can be any element other that document or window.\n   * @returns {Object} - nested object of integer pixel values\n   * TODO - if element is window, return only those values.\n   */\n  function GetDimensions(elem, test) {\n    elem = elem.length ? elem[0] : elem;\n\n    if (elem === window || elem === document) {\n      throw new Error(\"I'm sorry, Dave. I'm afraid I can't do that.\");\n    }\n\n    var rect = elem.getBoundingClientRect(),\n        parRect = elem.parentNode.getBoundingClientRect(),\n        winRect = document.body.getBoundingClientRect(),\n        winY = window.pageYOffset,\n        winX = window.pageXOffset;\n\n    return {\n      width: rect.width,\n      height: rect.height,\n      offset: {\n        top: rect.top + winY,\n        left: rect.left + winX\n      },\n      parentDims: {\n        width: parRect.width,\n        height: parRect.height,\n        offset: {\n          top: parRect.top + winY,\n          left: parRect.left + winX\n        }\n      },\n      windowDims: {\n        width: winRect.width,\n        height: winRect.height,\n        offset: {\n          top: winY,\n          left: winX\n        }\n      }\n    };\n  }\n\n  /**\n   * Returns an object of top and left integer pixel values for dynamically rendered elements,\n   * such as: Tooltip, Reveal, and Dropdown\n   * @function\n   * @param {jQuery} element - jQuery object for the element being positioned.\n   * @param {jQuery} anchor - jQuery object for the element's anchor point.\n   * @param {String} position - a string relating to the desired position of the element, relative to it's anchor\n   * @param {Number} vOffset - integer pixel value of desired vertical separation between anchor and element.\n   * @param {Number} hOffset - integer pixel value of desired horizontal separation between anchor and element.\n   * @param {Boolean} isOverflow - if a collision event is detected, sets to true to default the element to full width - any desired offset.\n   * TODO alter/rewrite to work with `em` values as well/instead of pixels\n   */\n  function GetOffsets(element, anchor, position, vOffset, hOffset, isOverflow) {\n    var $eleDims = GetDimensions(element),\n        $anchorDims = anchor ? GetDimensions(anchor) : null;\n\n    switch (position) {\n      case 'top':\n        return {\n          left: Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left,\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n        };\n        break;\n      case 'left':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: $anchorDims.offset.top\n        };\n        break;\n      case 'right':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset,\n          top: $anchorDims.offset.top\n        };\n        break;\n      case 'center top':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width / 2 - $eleDims.width / 2,\n          top: $anchorDims.offset.top - ($eleDims.height + vOffset)\n        };\n        break;\n      case 'center bottom':\n        return {\n          left: isOverflow ? hOffset : $anchorDims.offset.left + $anchorDims.width / 2 - $eleDims.width / 2,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n        break;\n      case 'center left':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: $anchorDims.offset.top + $anchorDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'center right':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset + 1,\n          top: $anchorDims.offset.top + $anchorDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'center':\n        return {\n          left: $eleDims.windowDims.offset.left + $eleDims.windowDims.width / 2 - $eleDims.width / 2,\n          top: $eleDims.windowDims.offset.top + $eleDims.windowDims.height / 2 - $eleDims.height / 2\n        };\n        break;\n      case 'reveal':\n        return {\n          left: ($eleDims.windowDims.width - $eleDims.width) / 2,\n          top: $eleDims.windowDims.offset.top + vOffset\n        };\n      case 'reveal full':\n        return {\n          left: $eleDims.windowDims.offset.left,\n          top: $eleDims.windowDims.offset.top\n        };\n        break;\n      case 'left bottom':\n        return {\n          left: $anchorDims.offset.left - ($eleDims.width + hOffset),\n          top: $anchorDims.offset.top + $anchorDims.height\n        };\n        break;\n      case 'right bottom':\n        return {\n          left: $anchorDims.offset.left + $anchorDims.width + hOffset - $eleDims.width,\n          top: $anchorDims.offset.top + $anchorDims.height\n        };\n        break;\n      default:\n        return {\n          left: Foundation.rtl() ? $anchorDims.offset.left - $eleDims.width + $anchorDims.width : $anchorDims.offset.left,\n          top: $anchorDims.offset.top + $anchorDims.height + vOffset\n        };\n    }\n  }\n}(jQuery);\n/*******************************************\n *                                         *\n * This util was created by Marius Olbertz *\n * Please thank Marius on GitHub /owlbertz *\n * or the web http://www.mariusolbertz.de/ *\n *                                         *\n ******************************************/\n\n'use strict';\n\n!function ($) {\n\n  var keyCodes = {\n    9: 'TAB',\n    13: 'ENTER',\n    27: 'ESCAPE',\n    32: 'SPACE',\n    37: 'ARROW_LEFT',\n    38: 'ARROW_UP',\n    39: 'ARROW_RIGHT',\n    40: 'ARROW_DOWN'\n  };\n\n  var commands = {};\n\n  var Keyboard = {\n    keys: getKeyCodes(keyCodes),\n\n    /**\n     * Parses the (keyboard) event and returns a String that represents its key\n     * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n     * @param {Event} event - the event generated by the event handler\n     * @return String key - String that represents the key pressed\n     */\n    parseKey: function (event) {\n      var key = keyCodes[event.which || event.keyCode] || String.fromCharCode(event.which).toUpperCase();\n      if (event.shiftKey) key = 'SHIFT_' + key;\n      if (event.ctrlKey) key = 'CTRL_' + key;\n      if (event.altKey) key = 'ALT_' + key;\n      return key;\n    },\n\n\n    /**\n     * Handles the given (keyboard) event\n     * @param {Event} event - the event generated by the event handler\n     * @param {String} component - Foundation component's name, e.g. Slider or Reveal\n     * @param {Objects} functions - collection of functions that are to be executed\n     */\n    handleKey: function (event, component, functions) {\n      var commandList = commands[component],\n          keyCode = this.parseKey(event),\n          cmds,\n          command,\n          fn;\n\n      if (!commandList) return console.warn('Component not defined!');\n\n      if (typeof commandList.ltr === 'undefined') {\n        // this component does not differentiate between ltr and rtl\n        cmds = commandList; // use plain list\n      } else {\n          // merge ltr and rtl: if document is rtl, rtl overwrites ltr and vice versa\n          if (Foundation.rtl()) cmds = $.extend({}, commandList.ltr, commandList.rtl);else cmds = $.extend({}, commandList.rtl, commandList.ltr);\n        }\n      command = cmds[keyCode];\n\n      fn = functions[command];\n      if (fn && typeof fn === 'function') {\n        // execute function  if exists\n        var returnValue = fn.apply();\n        if (functions.handled || typeof functions.handled === 'function') {\n          // execute function when event was handled\n          functions.handled(returnValue);\n        }\n      } else {\n        if (functions.unhandled || typeof functions.unhandled === 'function') {\n          // execute function when event was not handled\n          functions.unhandled();\n        }\n      }\n    },\n\n\n    /**\n     * Finds all focusable elements within the given `$element`\n     * @param {jQuery} $element - jQuery object to search within\n     * @return {jQuery} $focusable - all focusable elements within `$element`\n     */\n    findFocusable: function ($element) {\n      return $element.find('a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, *[tabindex], *[contenteditable]').filter(function () {\n        if (!$(this).is(':visible') || $(this).attr('tabindex') < 0) {\n          return false;\n        } //only have visible elements and those that have a tabindex greater or equal 0\n        return true;\n      });\n    },\n\n\n    /**\n     * Returns the component name name\n     * @param {Object} component - Foundation component, e.g. Slider or Reveal\n     * @return String componentName\n     */\n\n    register: function (componentName, cmds) {\n      commands[componentName] = cmds;\n    }\n  };\n\n  /*\n   * Constants for easier comparing.\n   * Can be used like Foundation.parseKey(event) === Foundation.keys.SPACE\n   */\n  function getKeyCodes(kcs) {\n    var k = {};\n    for (var kc in kcs) {\n      k[kcs[kc]] = kcs[kc];\n    }return k;\n  }\n\n  Foundation.Keyboard = Keyboard;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  // Default set of media queries\n  var defaultQueries = {\n    'default': 'only screen',\n    landscape: 'only screen and (orientation: landscape)',\n    portrait: 'only screen and (orientation: portrait)',\n    retina: 'only screen and (-webkit-min-device-pixel-ratio: 2),' + 'only screen and (min--moz-device-pixel-ratio: 2),' + 'only screen and (-o-min-device-pixel-ratio: 2/1),' + 'only screen and (min-device-pixel-ratio: 2),' + 'only screen and (min-resolution: 192dpi),' + 'only screen and (min-resolution: 2dppx)'\n  };\n\n  var MediaQuery = {\n    queries: [],\n\n    current: '',\n\n    /**\n     * Initializes the media query helper, by extracting the breakpoint list from the CSS and activating the breakpoint watcher.\n     * @function\n     * @private\n     */\n    _init: function () {\n      var self = this;\n      var extractedStyles = $('.foundation-mq').css('font-family');\n      var namedQueries;\n\n      namedQueries = parseStyleToObject(extractedStyles);\n\n      for (var key in namedQueries) {\n        if (namedQueries.hasOwnProperty(key)) {\n          self.queries.push({\n            name: key,\n            value: 'only screen and (min-width: ' + namedQueries[key] + ')'\n          });\n        }\n      }\n\n      this.current = this._getCurrentSize();\n\n      this._watcher();\n    },\n\n\n    /**\n     * Checks if the screen is at least as wide as a breakpoint.\n     * @function\n     * @param {String} size - Name of the breakpoint to check.\n     * @returns {Boolean} `true` if the breakpoint matches, `false` if it's smaller.\n     */\n    atLeast: function (size) {\n      var query = this.get(size);\n\n      if (query) {\n        return window.matchMedia(query).matches;\n      }\n\n      return false;\n    },\n\n\n    /**\n     * Gets the media query of a breakpoint.\n     * @function\n     * @param {String} size - Name of the breakpoint to get.\n     * @returns {String|null} - The media query of the breakpoint, or `null` if the breakpoint doesn't exist.\n     */\n    get: function (size) {\n      for (var i in this.queries) {\n        if (this.queries.hasOwnProperty(i)) {\n          var query = this.queries[i];\n          if (size === query.name) return query.value;\n        }\n      }\n\n      return null;\n    },\n\n\n    /**\n     * Gets the current breakpoint name by testing every breakpoint and returning the last one to match (the biggest one).\n     * @function\n     * @private\n     * @returns {String} Name of the current breakpoint.\n     */\n    _getCurrentSize: function () {\n      var matched;\n\n      for (var i = 0; i < this.queries.length; i++) {\n        var query = this.queries[i];\n\n        if (window.matchMedia(query.value).matches) {\n          matched = query;\n        }\n      }\n\n      if (typeof matched === 'object') {\n        return matched.name;\n      } else {\n        return matched;\n      }\n    },\n\n\n    /**\n     * Activates the breakpoint watcher, which fires an event on the window whenever the breakpoint changes.\n     * @function\n     * @private\n     */\n    _watcher: function () {\n      var _this = this;\n\n      $(window).on('resize.zf.mediaquery', function () {\n        var newSize = _this._getCurrentSize(),\n            currentSize = _this.current;\n\n        if (newSize !== currentSize) {\n          // Change the current media query\n          _this.current = newSize;\n\n          // Broadcast the media query change on the window\n          $(window).trigger('changed.zf.mediaquery', [newSize, currentSize]);\n        }\n      });\n    }\n  };\n\n  Foundation.MediaQuery = MediaQuery;\n\n  // matchMedia() polyfill - Test a CSS media type/query in JS.\n  // Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license\n  window.matchMedia || (window.matchMedia = function () {\n    'use strict';\n\n    // For browsers that support matchMedium api such as IE 9 and webkit\n\n    var styleMedia = window.styleMedia || window.media;\n\n    // For those that don't support matchMedium\n    if (!styleMedia) {\n      var style = document.createElement('style'),\n          script = document.getElementsByTagName('script')[0],\n          info = null;\n\n      style.type = 'text/css';\n      style.id = 'matchmediajs-test';\n\n      script.parentNode.insertBefore(style, script);\n\n      // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n      info = 'getComputedStyle' in window && window.getComputedStyle(style, null) || style.currentStyle;\n\n      styleMedia = {\n        matchMedium: function (media) {\n          var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n          // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n          if (style.styleSheet) {\n            style.styleSheet.cssText = text;\n          } else {\n            style.textContent = text;\n          }\n\n          // Test if media query is true or false\n          return info.width === '1px';\n        }\n      };\n    }\n\n    return function (media) {\n      return {\n        matches: styleMedia.matchMedium(media || 'all'),\n        media: media || 'all'\n      };\n    };\n  }());\n\n  // Thank you: https://github.com/sindresorhus/query-string\n  function parseStyleToObject(str) {\n    var styleObject = {};\n\n    if (typeof str !== 'string') {\n      return styleObject;\n    }\n\n    str = str.trim().slice(1, -1); // browsers re-quote string style values\n\n    if (!str) {\n      return styleObject;\n    }\n\n    styleObject = str.split('&').reduce(function (ret, param) {\n      var parts = param.replace(/\\+/g, ' ').split('=');\n      var key = parts[0];\n      var val = parts[1];\n      key = decodeURIComponent(key);\n\n      // missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n      val = val === undefined ? null : decodeURIComponent(val);\n\n      if (!ret.hasOwnProperty(key)) {\n        ret[key] = val;\n      } else if (Array.isArray(ret[key])) {\n        ret[key].push(val);\n      } else {\n        ret[key] = [ret[key], val];\n      }\n      return ret;\n    }, {});\n\n    return styleObject;\n  }\n\n  Foundation.MediaQuery = MediaQuery;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  /**\n   * Motion module.\n   * @module foundation.motion\n   */\n\n  var initClasses = ['mui-enter', 'mui-leave'];\n  var activeClasses = ['mui-enter-active', 'mui-leave-active'];\n\n  var Motion = {\n    animateIn: function (element, animation, cb) {\n      animate(true, element, animation, cb);\n    },\n\n    animateOut: function (element, animation, cb) {\n      animate(false, element, animation, cb);\n    }\n  };\n\n  function Move(duration, elem, fn) {\n    var anim,\n        prog,\n        start = null;\n    // console.log('called');\n\n    function move(ts) {\n      if (!start) start = window.performance.now();\n      // console.log(start, ts);\n      prog = ts - start;\n      fn.apply(elem);\n\n      if (prog < duration) {\n        anim = window.requestAnimationFrame(move, elem);\n      } else {\n        window.cancelAnimationFrame(anim);\n        elem.trigger('finished.zf.animate', [elem]).triggerHandler('finished.zf.animate', [elem]);\n      }\n    }\n    anim = window.requestAnimationFrame(move);\n  }\n\n  /**\n   * Animates an element in or out using a CSS transition class.\n   * @function\n   * @private\n   * @param {Boolean} isIn - Defines if the animation is in or out.\n   * @param {Object} element - jQuery or HTML object to animate.\n   * @param {String} animation - CSS class to use.\n   * @param {Function} cb - Callback to run when animation is finished.\n   */\n  function animate(isIn, element, animation, cb) {\n    element = $(element).eq(0);\n\n    if (!element.length) return;\n\n    var initClass = isIn ? initClasses[0] : initClasses[1];\n    var activeClass = isIn ? activeClasses[0] : activeClasses[1];\n\n    // Set up the animation\n    reset();\n\n    element.addClass(animation).css('transition', 'none');\n\n    requestAnimationFrame(function () {\n      element.addClass(initClass);\n      if (isIn) element.show();\n    });\n\n    // Start the animation\n    requestAnimationFrame(function () {\n      element[0].offsetWidth;\n      element.css('transition', '').addClass(activeClass);\n    });\n\n    // Clean up the animation when it finishes\n    element.one(Foundation.transitionend(element), finish);\n\n    // Hides the element (for out animations), resets the element, and runs a callback\n    function finish() {\n      if (!isIn) element.hide();\n      reset();\n      if (cb) cb.apply(element);\n    }\n\n    // Resets transitions and removes motion-specific classes\n    function reset() {\n      element[0].style.transitionDuration = 0;\n      element.removeClass(initClass + ' ' + activeClass + ' ' + animation);\n    }\n  }\n\n  Foundation.Move = Move;\n  Foundation.Motion = Motion;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  var Nest = {\n    Feather: function (menu) {\n      var type = arguments.length <= 1 || arguments[1] === undefined ? 'zf' : arguments[1];\n\n      menu.attr('role', 'menubar');\n\n      var items = menu.find('li').attr({ 'role': 'menuitem' }),\n          subMenuClass = 'is-' + type + '-submenu',\n          subItemClass = subMenuClass + '-item',\n          hasSubClass = 'is-' + type + '-submenu-parent';\n\n      menu.find('a:first').attr('tabindex', 0);\n\n      items.each(function () {\n        var $item = $(this),\n            $sub = $item.children('ul');\n\n        if ($sub.length) {\n          $item.addClass(hasSubClass).attr({\n            'aria-haspopup': true,\n            'aria-expanded': false,\n            'aria-label': $item.children('a:first').text()\n          });\n\n          $sub.addClass('submenu ' + subMenuClass).attr({\n            'data-submenu': '',\n            'aria-hidden': true,\n            'role': 'menu'\n          });\n        }\n\n        if ($item.parent('[data-submenu]').length) {\n          $item.addClass('is-submenu-item ' + subItemClass);\n        }\n      });\n\n      return;\n    },\n    Burn: function (menu, type) {\n      var items = menu.find('li').removeAttr('tabindex'),\n          subMenuClass = 'is-' + type + '-submenu',\n          subItemClass = subMenuClass + '-item',\n          hasSubClass = 'is-' + type + '-submenu-parent';\n\n      menu.find('*').removeClass(subMenuClass + ' ' + subItemClass + ' ' + hasSubClass + ' is-submenu-item submenu is-active').removeAttr('data-submenu').css('display', '');\n\n      // console.log(      menu.find('.' + subMenuClass + ', .' + subItemClass + ', .has-submenu, .is-submenu-item, .submenu, [data-submenu]')\n      //           .removeClass(subMenuClass + ' ' + subItemClass + ' has-submenu is-submenu-item submenu')\n      //           .removeAttr('data-submenu'));\n      // items.each(function(){\n      //   var $item = $(this),\n      //       $sub = $item.children('ul');\n      //   if($item.parent('[data-submenu]').length){\n      //     $item.removeClass('is-submenu-item ' + subItemClass);\n      //   }\n      //   if($sub.length){\n      //     $item.removeClass('has-submenu');\n      //     $sub.removeClass('submenu ' + subMenuClass).removeAttr('data-submenu');\n      //   }\n      // });\n    }\n  };\n\n  Foundation.Nest = Nest;\n}(jQuery);\n'use strict';\n\n!function ($) {\n\n  function Timer(elem, options, cb) {\n    var _this = this,\n        duration = options.duration,\n        //options is an object for easily adding features later.\n    nameSpace = Object.keys(elem.data())[0] || 'timer',\n        remain = -1,\n        start,\n        timer;\n\n    this.isPaused = false;\n\n    this.restart = function () {\n      remain = -1;\n      clearTimeout(timer);\n      this.start();\n    };\n\n    this.start = function () {\n      this.isPaused = false;\n      // if(!elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      remain = remain <= 0 ? duration : remain;\n      elem.data('paused', false);\n      start = Date.now();\n      timer = setTimeout(function () {\n        if (options.infinite) {\n          _this.restart(); //rerun the timer.\n        }\n        cb();\n      }, remain);\n      elem.trigger('timerstart.zf.' + nameSpace);\n    };\n\n    this.pause = function () {\n      this.isPaused = true;\n      //if(elem.data('paused')){ return false; }//maybe implement this sanity check if used for other things.\n      clearTimeout(timer);\n      elem.data('paused', true);\n      var end = Date.now();\n      remain = remain - (end - start);\n      elem.trigger('timerpaused.zf.' + nameSpace);\n    };\n  }\n\n  /**\n   * Runs a callback function when images are fully loaded.\n   * @param {Object} images - Image(s) to check if loaded.\n   * @param {Func} callback - Function to execute when image is fully loaded.\n   */\n  function onImagesLoaded(images, callback) {\n    var self = this,\n        unloaded = images.length;\n\n    if (unloaded === 0) {\n      callback();\n    }\n\n    images.each(function () {\n      if (this.complete) {\n        singleImageLoaded();\n      } else if (typeof this.naturalWidth !== 'undefined' && this.naturalWidth > 0) {\n        singleImageLoaded();\n      } else {\n        $(this).one('load', function () {\n          singleImageLoaded();\n        });\n      }\n    });\n\n    function singleImageLoaded() {\n      unloaded--;\n      if (unloaded === 0) {\n        callback();\n      }\n    }\n  }\n\n  Foundation.Timer = Timer;\n  Foundation.onImagesLoaded = onImagesLoaded;\n}(jQuery);\n//**************************************************\n//**Work inspired by multiple jquery swipe plugins**\n//**Done by Yohai Ararat ***************************\n//**************************************************\n(function ($) {\n\n\t$.spotSwipe = {\n\t\tversion: '1.0.0',\n\t\tenabled: 'ontouchstart' in document.documentElement,\n\t\tpreventDefault: false,\n\t\tmoveThreshold: 75,\n\t\ttimeThreshold: 200\n\t};\n\n\tvar startPosX,\n\t    startPosY,\n\t    startTime,\n\t    elapsedTime,\n\t    isMoving = false;\n\n\tfunction onTouchEnd() {\n\t\t//  alert(this);\n\t\tthis.removeEventListener('touchmove', onTouchMove);\n\t\tthis.removeEventListener('touchend', onTouchEnd);\n\t\tisMoving = false;\n\t}\n\n\tfunction onTouchMove(e) {\n\t\tif ($.spotSwipe.preventDefault) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tif (isMoving) {\n\t\t\tvar x = e.touches[0].pageX;\n\t\t\tvar y = e.touches[0].pageY;\n\t\t\tvar dx = startPosX - x;\n\t\t\tvar dy = startPosY - y;\n\t\t\tvar dir;\n\t\t\telapsedTime = new Date().getTime() - startTime;\n\t\t\tif (Math.abs(dx) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n\t\t\t\tdir = dx > 0 ? 'left' : 'right';\n\t\t\t}\n\t\t\t// else if(Math.abs(dy) >= $.spotSwipe.moveThreshold && elapsedTime <= $.spotSwipe.timeThreshold) {\n\t\t\t//   dir = dy > 0 ? 'down' : 'up';\n\t\t\t// }\n\t\t\tif (dir) {\n\t\t\t\te.preventDefault();\n\t\t\t\tonTouchEnd.call(this);\n\t\t\t\t$(this).trigger('swipe', dir).trigger('swipe' + dir);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction onTouchStart(e) {\n\t\tif (e.touches.length == 1) {\n\t\t\tstartPosX = e.touches[0].pageX;\n\t\t\tstartPosY = e.touches[0].pageY;\n\t\t\tisMoving = true;\n\t\t\tstartTime = new Date().getTime();\n\t\t\tthis.addEventListener('touchmove', onTouchMove, false);\n\t\t\tthis.addEventListener('touchend', onTouchEnd, false);\n\t\t}\n\t}\n\n\tfunction init() {\n\t\tthis.addEventListener && this.addEventListener('touchstart', onTouchStart, false);\n\t}\n\n\tfunction teardown() {\n\t\tthis.removeEventListener('touchstart', onTouchStart);\n\t}\n\n\t$.event.special.swipe = { setup: init };\n\n\t$.each(['left', 'up', 'down', 'right'], function () {\n\t\t$.event.special['swipe' + this] = { setup: function () {\n\t\t\t\t$(this).on('swipe', $.noop);\n\t\t\t} };\n\t});\n})(jQuery);\n/****************************************************\n * Method for adding psuedo drag events to elements *\n ***************************************************/\n!function ($) {\n\t$.fn.addTouch = function () {\n\t\tthis.each(function (i, el) {\n\t\t\t$(el).bind('touchstart touchmove touchend touchcancel', function () {\n\t\t\t\t//we pass the original event object because the jQuery event\n\t\t\t\t//object is normalized to w3c specs and does not provide the TouchList\n\t\t\t\thandleTouch(event);\n\t\t\t});\n\t\t});\n\n\t\tvar handleTouch = function (event) {\n\t\t\tvar touches = event.changedTouches,\n\t\t\t    first = touches[0],\n\t\t\t    eventTypes = {\n\t\t\t\ttouchstart: 'mousedown',\n\t\t\t\ttouchmove: 'mousemove',\n\t\t\t\ttouchend: 'mouseup'\n\t\t\t},\n\t\t\t    type = eventTypes[event.type],\n\t\t\t    simulatedEvent;\n\n\t\t\tif ('MouseEvent' in window && typeof window.MouseEvent === 'function') {\n\t\t\t\tsimulatedEvent = new window.MouseEvent(type, {\n\t\t\t\t\t'bubbles': true,\n\t\t\t\t\t'cancelable': true,\n\t\t\t\t\t'screenX': first.screenX,\n\t\t\t\t\t'screenY': first.screenY,\n\t\t\t\t\t'clientX': first.clientX,\n\t\t\t\t\t'clientY': first.clientY\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsimulatedEvent = document.createEvent('MouseEvent');\n\t\t\t\tsimulatedEvent.initMouseEvent(type, true, true, window, 1, first.screenX, first.screenY, first.clientX, first.clientY, false, false, false, false, 0 /*left*/, null);\n\t\t\t}\n\t\t\tfirst.target.dispatchEvent(simulatedEvent);\n\t\t};\n\t};\n}(jQuery);\n\n//**********************************\n//**From the jQuery Mobile Library**\n//**need to recreate functionality**\n//**and try to improve if possible**\n//**********************************\n\n/* Removing the jQuery function ****\n************************************\n\n(function( $, window, undefined ) {\n\n\tvar $document = $( document ),\n\t\t// supportTouch = $.mobile.support.touch,\n\t\ttouchStartEvent = 'touchstart'//supportTouch ? \"touchstart\" : \"mousedown\",\n\t\ttouchStopEvent = 'touchend'//supportTouch ? \"touchend\" : \"mouseup\",\n\t\ttouchMoveEvent = 'touchmove'//supportTouch ? \"touchmove\" : \"mousemove\";\n\n\t// setup new event shortcuts\n\t$.each( ( \"touchstart touchmove touchend \" +\n\t\t\"swipe swipeleft swiperight\" ).split( \" \" ), function( i, name ) {\n\n\t\t$.fn[ name ] = function( fn ) {\n\t\t\treturn fn ? this.bind( name, fn ) : this.trigger( name );\n\t\t};\n\n\t\t// jQuery < 1.8\n\t\tif ( $.attrFn ) {\n\t\t\t$.attrFn[ name ] = true;\n\t\t}\n\t});\n\n\tfunction triggerCustomEvent( obj, eventType, event, bubble ) {\n\t\tvar originalType = event.type;\n\t\tevent.type = eventType;\n\t\tif ( bubble ) {\n\t\t\t$.event.trigger( event, undefined, obj );\n\t\t} else {\n\t\t\t$.event.dispatch.call( obj, event );\n\t\t}\n\t\tevent.type = originalType;\n\t}\n\n\t// also handles taphold\n\n\t// Also handles swipeleft, swiperight\n\t$.event.special.swipe = {\n\n\t\t// More than this horizontal displacement, and we will suppress scrolling.\n\t\tscrollSupressionThreshold: 30,\n\n\t\t// More time than this, and it isn't a swipe.\n\t\tdurationThreshold: 1000,\n\n\t\t// Swipe horizontal displacement must be more than this.\n\t\thorizontalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\n\n\t\t// Swipe vertical displacement must be less than this.\n\t\tverticalDistanceThreshold: window.devicePixelRatio >= 2 ? 15 : 30,\n\n\t\tgetLocation: function ( event ) {\n\t\t\tvar winPageX = window.pageXOffset,\n\t\t\t\twinPageY = window.pageYOffset,\n\t\t\t\tx = event.clientX,\n\t\t\t\ty = event.clientY;\n\n\t\t\tif ( event.pageY === 0 && Math.floor( y ) > Math.floor( event.pageY ) ||\n\t\t\t\tevent.pageX === 0 && Math.floor( x ) > Math.floor( event.pageX ) ) {\n\n\t\t\t\t// iOS4 clientX/clientY have the value that should have been\n\t\t\t\t// in pageX/pageY. While pageX/page/ have the value 0\n\t\t\t\tx = x - winPageX;\n\t\t\t\ty = y - winPageY;\n\t\t\t} else if ( y < ( event.pageY - winPageY) || x < ( event.pageX - winPageX ) ) {\n\n\t\t\t\t// Some Android browsers have totally bogus values for clientX/Y\n\t\t\t\t// when scrolling/zooming a page. Detectable since clientX/clientY\n\t\t\t\t// should never be smaller than pageX/pageY minus page scroll\n\t\t\t\tx = event.pageX - winPageX;\n\t\t\t\ty = event.pageY - winPageY;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\t},\n\n\t\tstart: function( event ) {\n\t\t\tvar data = event.originalEvent.touches ?\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\n\t\t\treturn {\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\n\t\t\t\t\t\tcoords: [ location.x, location.y ],\n\t\t\t\t\t\torigin: $( event.target )\n\t\t\t\t\t};\n\t\t},\n\n\t\tstop: function( event ) {\n\t\t\tvar data = event.originalEvent.touches ?\n\t\t\t\t\tevent.originalEvent.touches[ 0 ] : event,\n\t\t\t\tlocation = $.event.special.swipe.getLocation( data );\n\t\t\treturn {\n\t\t\t\t\t\ttime: ( new Date() ).getTime(),\n\t\t\t\t\t\tcoords: [ location.x, location.y ]\n\t\t\t\t\t};\n\t\t},\n\n\t\thandleSwipe: function( start, stop, thisObject, origTarget ) {\n\t\t\tif ( stop.time - start.time < $.event.special.swipe.durationThreshold &&\n\t\t\t\tMath.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.horizontalDistanceThreshold &&\n\t\t\t\tMath.abs( start.coords[ 1 ] - stop.coords[ 1 ] ) < $.event.special.swipe.verticalDistanceThreshold ) {\n\t\t\t\tvar direction = start.coords[0] > stop.coords[ 0 ] ? \"swipeleft\" : \"swiperight\";\n\n\t\t\t\ttriggerCustomEvent( thisObject, \"swipe\", $.Event( \"swipe\", { target: origTarget, swipestart: start, swipestop: stop }), true );\n\t\t\t\ttriggerCustomEvent( thisObject, direction,$.Event( direction, { target: origTarget, swipestart: start, swipestop: stop } ), true );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\n\t\t},\n\n\t\t// This serves as a flag to ensure that at most one swipe event event is\n\t\t// in work at any given time\n\t\teventInProgress: false,\n\n\t\tsetup: function() {\n\t\t\tvar events,\n\t\t\t\tthisObject = this,\n\t\t\t\t$this = $( thisObject ),\n\t\t\t\tcontext = {};\n\n\t\t\t// Retrieve the events data for this element and add the swipe context\n\t\t\tevents = $.data( this, \"mobile-events\" );\n\t\t\tif ( !events ) {\n\t\t\t\tevents = { length: 0 };\n\t\t\t\t$.data( this, \"mobile-events\", events );\n\t\t\t}\n\t\t\tevents.length++;\n\t\t\tevents.swipe = context;\n\n\t\t\tcontext.start = function( event ) {\n\n\t\t\t\t// Bail if we're already working on a swipe event\n\t\t\t\tif ( $.event.special.swipe.eventInProgress ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t$.event.special.swipe.eventInProgress = true;\n\n\t\t\t\tvar stop,\n\t\t\t\t\tstart = $.event.special.swipe.start( event ),\n\t\t\t\t\torigTarget = event.target,\n\t\t\t\t\temitted = false;\n\n\t\t\t\tcontext.move = function( event ) {\n\t\t\t\t\tif ( !start || event.isDefaultPrevented() ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tstop = $.event.special.swipe.stop( event );\n\t\t\t\t\tif ( !emitted ) {\n\t\t\t\t\t\temitted = $.event.special.swipe.handleSwipe( start, stop, thisObject, origTarget );\n\t\t\t\t\t\tif ( emitted ) {\n\n\t\t\t\t\t\t\t// Reset the context to make way for the next swipe event\n\t\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// prevent scrolling\n\t\t\t\t\tif ( Math.abs( start.coords[ 0 ] - stop.coords[ 0 ] ) > $.event.special.swipe.scrollSupressionThreshold ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tcontext.stop = function() {\n\t\t\t\t\t\temitted = true;\n\n\t\t\t\t\t\t// Reset the context to make way for the next swipe event\n\t\t\t\t\t\t$.event.special.swipe.eventInProgress = false;\n\t\t\t\t\t\t$document.off( touchMoveEvent, context.move );\n\t\t\t\t\t\tcontext.move = null;\n\t\t\t\t};\n\n\t\t\t\t$document.on( touchMoveEvent, context.move )\n\t\t\t\t\t.one( touchStopEvent, context.stop );\n\t\t\t};\n\t\t\t$this.on( touchStartEvent, context.start );\n\t\t},\n\n\t\tteardown: function() {\n\t\t\tvar events, context;\n\n\t\t\tevents = $.data( this, \"mobile-events\" );\n\t\t\tif ( events ) {\n\t\t\t\tcontext = events.swipe;\n\t\t\t\tdelete events.swipe;\n\t\t\t\tevents.length--;\n\t\t\t\tif ( events.length === 0 ) {\n\t\t\t\t\t$.removeData( this, \"mobile-events\" );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( context ) {\n\t\t\t\tif ( context.start ) {\n\t\t\t\t\t$( this ).off( touchStartEvent, context.start );\n\t\t\t\t}\n\t\t\t\tif ( context.move ) {\n\t\t\t\t\t$document.off( touchMoveEvent, context.move );\n\t\t\t\t}\n\t\t\t\tif ( context.stop ) {\n\t\t\t\t\t$document.off( touchStopEvent, context.stop );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t$.each({\n\t\tswipeleft: \"swipe.left\",\n\t\tswiperight: \"swipe.right\"\n\t}, function( event, sourceEvent ) {\n\n\t\t$.event.special[ event ] = {\n\t\t\tsetup: function() {\n\t\t\t\t$( this ).bind( sourceEvent, $.noop );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\t$( this ).unbind( sourceEvent );\n\t\t\t}\n\t\t};\n\t});\n})( jQuery, this );\n*/\n'use strict';\n\n!function ($) {\n\n  var MutationObserver = function () {\n    var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n    for (var i = 0; i < prefixes.length; i++) {\n      if (prefixes[i] + 'MutationObserver' in window) {\n        return window[prefixes[i] + 'MutationObserver'];\n      }\n    }\n    return false;\n  }();\n\n  var triggers = function (el, type) {\n    el.data(type).split(' ').forEach(function (id) {\n      $('#' + id)[type === 'close' ? 'trigger' : 'triggerHandler'](type + '.zf.trigger', [el]);\n    });\n  };\n  // Elements with [data-open] will reveal a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-open]', function () {\n    triggers($(this), 'open');\n  });\n\n  // Elements with [data-close] will close a plugin that supports it when clicked.\n  // If used without a value on [data-close], the event will bubble, allowing it to close a parent component.\n  $(document).on('click.zf.trigger', '[data-close]', function () {\n    var id = $(this).data('close');\n    if (id) {\n      triggers($(this), 'close');\n    } else {\n      $(this).trigger('close.zf.trigger');\n    }\n  });\n\n  // Elements with [data-toggle] will toggle a plugin that supports it when clicked.\n  $(document).on('click.zf.trigger', '[data-toggle]', function () {\n    triggers($(this), 'toggle');\n  });\n\n  // Elements with [data-closable] will respond to close.zf.trigger events.\n  $(document).on('close.zf.trigger', '[data-closable]', function (e) {\n    e.stopPropagation();\n    var animation = $(this).data('closable');\n\n    if (animation !== '') {\n      Foundation.Motion.animateOut($(this), animation, function () {\n        $(this).trigger('closed.zf');\n      });\n    } else {\n      $(this).fadeOut().trigger('closed.zf');\n    }\n  });\n\n  $(document).on('focus.zf.trigger blur.zf.trigger', '[data-toggle-focus]', function () {\n    var id = $(this).data('toggle-focus');\n    $('#' + id).triggerHandler('toggle.zf.trigger', [$(this)]);\n  });\n\n  /**\n  * Fires once after all other scripts have loaded\n  * @function\n  * @private\n  */\n  $(window).load(function () {\n    checkListeners();\n  });\n\n  function checkListeners() {\n    eventsListener();\n    resizeListener();\n    scrollListener();\n    closemeListener();\n  }\n\n  //******** only fires this function once on load, if there's something to watch ********\n  function closemeListener(pluginName) {\n    var yetiBoxes = $('[data-yeti-box]'),\n        plugNames = ['dropdown', 'tooltip', 'reveal'];\n\n    if (pluginName) {\n      if (typeof pluginName === 'string') {\n        plugNames.push(pluginName);\n      } else if (typeof pluginName === 'object' && typeof pluginName[0] === 'string') {\n        plugNames.concat(pluginName);\n      } else {\n        console.error('Plugin names must be strings');\n      }\n    }\n    if (yetiBoxes.length) {\n      var listeners = plugNames.map(function (name) {\n        return 'closeme.zf.' + name;\n      }).join(' ');\n\n      $(window).off(listeners).on(listeners, function (e, pluginId) {\n        var plugin = e.namespace.split('.')[0];\n        var plugins = $('[data-' + plugin + ']').not('[data-yeti-box=\"' + pluginId + '\"]');\n\n        plugins.each(function () {\n          var _this = $(this);\n\n          _this.triggerHandler('close.zf.trigger', [_this]);\n        });\n      });\n    }\n  }\n\n  function resizeListener(debounce) {\n    var timer = void 0,\n        $nodes = $('[data-resize]');\n    if ($nodes.length) {\n      $(window).off('resize.zf.trigger').on('resize.zf.trigger', function (e) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(function () {\n\n          if (!MutationObserver) {\n            //fallback for IE 9\n            $nodes.each(function () {\n              $(this).triggerHandler('resizeme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a resize event\n          $nodes.attr('data-events', \"resize\");\n        }, debounce || 10); //default time to emit resize event\n      });\n    }\n  }\n\n  function scrollListener(debounce) {\n    var timer = void 0,\n        $nodes = $('[data-scroll]');\n    if ($nodes.length) {\n      $(window).off('scroll.zf.trigger').on('scroll.zf.trigger', function (e) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n\n        timer = setTimeout(function () {\n\n          if (!MutationObserver) {\n            //fallback for IE 9\n            $nodes.each(function () {\n              $(this).triggerHandler('scrollme.zf.trigger');\n            });\n          }\n          //trigger all listening elements and signal a scroll event\n          $nodes.attr('data-events', \"scroll\");\n        }, debounce || 10); //default time to emit scroll event\n      });\n    }\n  }\n\n  function eventsListener() {\n    if (!MutationObserver) {\n      return false;\n    }\n    var nodes = document.querySelectorAll('[data-resize], [data-scroll], [data-mutate]');\n\n    //element callback\n    var listeningElementsMutation = function (mutationRecordsList) {\n      var $target = $(mutationRecordsList[0].target);\n      //trigger the event handler for the element depending on type\n      switch ($target.attr(\"data-events\")) {\n\n        case \"resize\":\n          $target.triggerHandler('resizeme.zf.trigger', [$target]);\n          break;\n\n        case \"scroll\":\n          $target.triggerHandler('scrollme.zf.trigger', [$target, window.pageYOffset]);\n          break;\n\n        // case \"mutate\" :\n        // console.log('mutate', $target);\n        // $target.triggerHandler('mutate.zf.trigger');\n        //\n        // //make sure we don't get stuck in an infinite loop from sloppy codeing\n        // if ($target.index('[data-mutate]') == $(\"[data-mutate]\").length-1) {\n        //   domMutationObserver();\n        // }\n        // break;\n\n        default:\n          return false;\n        //nothing\n      }\n    };\n\n    if (nodes.length) {\n      //for each element that needs to listen for resizing, scrolling, (or coming soon mutation) add a single observer\n      for (var i = 0; i <= nodes.length - 1; i++) {\n        var elementObserver = new MutationObserver(listeningElementsMutation);\n        elementObserver.observe(nodes[i], { attributes: true, childList: false, characterData: false, subtree: false, attributeFilter: [\"data-events\"] });\n      }\n    }\n  }\n\n  // ------------------------------------\n\n  // [PH]\n  // Foundation.CheckWatchers = checkWatchers;\n  Foundation.IHearYou = checkListeners;\n  // Foundation.ISeeYou = scrollListener;\n  // Foundation.IFeelYou = closemeListener;\n}(jQuery);\n\n// function domMutationObserver(debounce) {\n//   // !!! This is coming soon and needs more work; not active  !!! //\n//   var timer,\n//   nodes = document.querySelectorAll('[data-mutate]');\n//   //\n//   if (nodes.length) {\n//     // var MutationObserver = (function () {\n//     //   var prefixes = ['WebKit', 'Moz', 'O', 'Ms', ''];\n//     //   for (var i=0; i < prefixes.length; i++) {\n//     //     if (prefixes[i] + 'MutationObserver' in window) {\n//     //       return window[prefixes[i] + 'MutationObserver'];\n//     //     }\n//     //   }\n//     //   return false;\n//     // }());\n//\n//\n//     //for the body, we need to listen for all changes effecting the style and class attributes\n//     var bodyObserver = new MutationObserver(bodyMutation);\n//     bodyObserver.observe(document.body, { attributes: true, childList: true, characterData: false, subtree:true, attributeFilter:[\"style\", \"class\"]});\n//\n//\n//     //body callback\n//     function bodyMutation(mutate) {\n//       //trigger all listening elements and signal a mutation event\n//       if (timer) { clearTimeout(timer); }\n//\n//       timer = setTimeout(function() {\n//         bodyObserver.disconnect();\n//         $('[data-mutate]').attr('data-events',\"mutate\");\n//       }, debounce || 150);\n//     }\n//   }\n// }\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Abide module.\n   * @module foundation.abide\n   */\n\n  var Abide = function () {\n    /**\n     * Creates a new instance of Abide.\n     * @class\n     * @fires Abide#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Abide(element) {\n      var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n      _classCallCheck(this, Abide);\n\n      this.$element = element;\n      this.options = $.extend({}, Abide.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Abide');\n    }\n\n    /**\n     * Initializes the Abide plugin and calls functions to get Abide functioning on load.\n     * @private\n     */\n\n\n    _createClass(Abide, [{\n      key: '_init',\n      value: function _init() {\n        this.$inputs = this.$element.find('input, textarea, select');\n\n        this._events();\n      }\n\n      /**\n       * Initializes events for Abide.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this2 = this;\n\n        this.$element.off('.abide').on('reset.zf.abide', function () {\n          _this2.resetForm();\n        }).on('submit.zf.abide', function () {\n          return _this2.validateForm();\n        });\n\n        if (this.options.validateOn === 'fieldChange') {\n          this.$inputs.off('change.zf.abide').on('change.zf.abide', function (e) {\n            _this2.validateInput($(e.target));\n          });\n        }\n\n        if (this.options.liveValidate) {\n          this.$inputs.off('input.zf.abide').on('input.zf.abide', function (e) {\n            _this2.validateInput($(e.target));\n          });\n        }\n      }\n\n      /**\n       * Calls necessary functions to update Abide upon DOM change\n       * @private\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        this._init();\n      }\n\n      /**\n       * Checks whether or not a form element has the required attribute and if it's checked or not\n       * @param {Object} element - jQuery object to check for required attribute\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n       */\n\n    }, {\n      key: 'requiredCheck',\n      value: function requiredCheck($el) {\n        if (!$el.attr('required')) return true;\n\n        var isGood = true;\n\n        switch ($el[0].type) {\n          case 'checkbox':\n            isGood = $el[0].checked;\n            break;\n\n          case 'select':\n          case 'select-one':\n          case 'select-multiple':\n            var opt = $el.find('option:selected');\n            if (!opt.length || !opt.val()) isGood = false;\n            break;\n\n          default:\n            if (!$el.val() || !$el.val().length) isGood = false;\n        }\n\n        return isGood;\n      }\n\n      /**\n       * Based on $el, get the first element with selector in this order:\n       * 1. The element's direct sibling('s).\n       * 3. The element's parent's children.\n       *\n       * This allows for multiple form errors per input, though if none are found, no form errors will be shown.\n       *\n       * @param {Object} $el - jQuery object to use as reference to find the form error selector.\n       * @returns {Object} jQuery object with the selector.\n       */\n\n    }, {\n      key: 'findFormError',\n      value: function findFormError($el) {\n        var $error = $el.siblings(this.options.formErrorSelector);\n\n        if (!$error.length) {\n          $error = $el.parent().find(this.options.formErrorSelector);\n        }\n\n        return $error;\n      }\n\n      /**\n       * Get the first element in this order:\n       * 2. The <label> with the attribute `[for=\"someInputId\"]`\n       * 3. The `.closest()` <label>\n       *\n       * @param {Object} $el - jQuery object to check for required attribute\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n       */\n\n    }, {\n      key: 'findLabel',\n      value: function findLabel($el) {\n        var id = $el[0].id;\n        var $label = this.$element.find('label[for=\"' + id + '\"]');\n\n        if (!$label.length) {\n          return $el.closest('label');\n        }\n\n        return $label;\n      }\n\n      /**\n       * Get the set of labels associated with a set of radio els in this order\n       * 2. The <label> with the attribute `[for=\"someInputId\"]`\n       * 3. The `.closest()` <label>\n       *\n       * @param {Object} $el - jQuery object to check for required attribute\n       * @returns {Boolean} Boolean value depends on whether or not attribute is checked or empty\n       */\n\n    }, {\n      key: 'findRadioLabels',\n      value: function findRadioLabels($els) {\n        var _this3 = this;\n\n        var labels = $els.map(function (i, el) {\n          var id = el.id;\n          var $label = _this3.$element.find('label[for=\"' + id + '\"]');\n\n          if (!$label.length) {\n            $label = $(el).closest('label');\n          }\n          return $label[0];\n        });\n\n        return $(labels);\n      }\n\n      /**\n       * Adds the CSS error class as specified by the Abide settings to the label, input, and the form\n       * @param {Object} $el - jQuery object to add the class to\n       */\n\n    }, {\n      key: 'addErrorClasses',\n      value: function addErrorClasses($el) {\n        var $label = this.findLabel($el);\n        var $formError = this.findFormError($el);\n\n        if ($label.length) {\n          $label.addClass(this.options.labelErrorClass);\n        }\n\n        if ($formError.length) {\n          $formError.addClass(this.options.formErrorClass);\n        }\n\n        $el.addClass(this.options.inputErrorClass).attr('data-invalid', '');\n      }\n\n      /**\n       * Remove CSS error classes etc from an entire radio button group\n       * @param {String} groupName - A string that specifies the name of a radio button group\n       *\n       */\n\n    }, {\n      key: 'removeRadioErrorClasses',\n      value: function removeRadioErrorClasses(groupName) {\n        var $els = this.$element.find(':radio[name=\"' + groupName + '\"]');\n        var $labels = this.findRadioLabels($els);\n        var $formErrors = this.findFormError($els);\n\n        if ($labels.length) {\n          $labels.removeClass(this.options.labelErrorClass);\n        }\n\n        if ($formErrors.length) {\n          $formErrors.removeClass(this.options.formErrorClass);\n        }\n\n        $els.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\n      }\n\n      /**\n       * Removes CSS error class as specified by the Abide settings from the label, input, and the form\n       * @param {Object} $el - jQuery object to remove the class from\n       */\n\n    }, {\n      key: 'removeErrorClasses',\n      value: function removeErrorClasses($el) {\n        // radios need to clear all of the els\n        if ($el[0].type == 'radio') {\n          return this.removeRadioErrorClasses($el.attr('name'));\n        }\n\n        var $label = this.findLabel($el);\n        var $formError = this.findFormError($el);\n\n        if ($label.length) {\n          $label.removeClass(this.options.labelErrorClass);\n        }\n\n        if ($formError.length) {\n          $formError.removeClass(this.options.formErrorClass);\n        }\n\n        $el.removeClass(this.options.inputErrorClass).removeAttr('data-invalid');\n      }\n\n      /**\n       * Goes through a form to find inputs and proceeds to validate them in ways specific to their type\n       * @fires Abide#invalid\n       * @fires Abide#valid\n       * @param {Object} element - jQuery object to validate, should be an HTML input\n       * @returns {Boolean} goodToGo - If the input is valid or not.\n       */\n\n    }, {\n      key: 'validateInput',\n      value: function validateInput($el) {\n        var clearRequire = this.requiredCheck($el),\n            validated = false,\n            customValidator = true,\n            validator = $el.attr('data-validator'),\n            equalTo = true;\n\n        // don't validate ignored inputs or hidden inputs\n        if ($el.is('[data-abide-ignore]') || $el.is('[type=\"hidden\"]')) {\n          return true;\n        }\n\n        switch ($el[0].type) {\n          case 'radio':\n            validated = this.validateRadio($el.attr('name'));\n            break;\n\n          case 'checkbox':\n            validated = clearRequire;\n            break;\n\n          case 'select':\n          case 'select-one':\n          case 'select-multiple':\n            validated = clearRequire;\n            break;\n\n          default:\n            validated = this.validateText($el);\n        }\n\n        if (validator) {\n          customValidator = this.matchValidation($el, validator, $el.attr('required'));\n        }\n\n        if ($el.attr('data-equalto')) {\n          equalTo = this.options.validators.equalTo($el);\n        }\n\n        var goodToGo = [clearRequire, validated, customValidator, equalTo].indexOf(false) === -1;\n        var message = (goodToGo ? 'valid' : 'invalid') + '.zf.abide';\n\n        this[goodToGo ? 'removeErrorClasses' : 'addErrorClasses']($el);\n\n        /**\n         * Fires when the input is done checking for validation. Event trigger is either `valid.zf.abide` or `invalid.zf.abide`\n         * Trigger includes the DOM element of the input.\n         * @event Abide#valid\n         * @event Abide#invalid\n         */\n        $el.trigger(message, [$el]);\n\n        return goodToGo;\n      }\n\n      /**\n       * Goes through a form and if there are any invalid inputs, it will display the form error element\n       * @returns {Boolean} noError - true if no errors were detected...\n       * @fires Abide#formvalid\n       * @fires Abide#forminvalid\n       */\n\n    }, {\n      key: 'validateForm',\n      value: function validateForm() {\n        var acc = [];\n        var _this = this;\n\n        this.$inputs.each(function () {\n          acc.push(_this.validateInput($(this)));\n        });\n\n        var noError = acc.indexOf(false) === -1;\n\n        this.$element.find('[data-abide-error]').css('display', noError ? 'none' : 'block');\n\n        /**\n         * Fires when the form is finished validating. Event trigger is either `formvalid.zf.abide` or `forminvalid.zf.abide`.\n         * Trigger includes the element of the form.\n         * @event Abide#formvalid\n         * @event Abide#forminvalid\n         */\n        this.$element.trigger((noError ? 'formvalid' : 'forminvalid') + '.zf.abide', [this.$element]);\n\n        return noError;\n      }\n\n      /**\n       * Determines whether or a not a text input is valid based on the pattern specified in the attribute. If no matching pattern is found, returns true.\n       * @param {Object} $el - jQuery object to validate, should be a text input HTML element\n       * @param {String} pattern - string value of one of the RegEx patterns in Abide.options.patterns\n       * @returns {Boolean} Boolean value depends on whether or not the input value matches the pattern specified\n       */\n\n    }, {\n      key: 'validateText',\n      value: function validateText($el, pattern) {\n        // A pattern can be passed to this function, or it will be infered from the input's \"pattern\" attribute, or it's \"type\" attribute\n        pattern = pattern || $el.attr('pattern') || $el.attr('type');\n        var inputText = $el.val();\n        var valid = false;\n\n        if (inputText.length) {\n          // If the pattern attribute on the element is in Abide's list of patterns, then test that regexp\n          if (this.options.patterns.hasOwnProperty(pattern)) {\n            valid = this.options.patterns[pattern].test(inputText);\n          }\n          // If the pattern name isn't also the type attribute of the field, then test it as a regexp\n          else if (pattern !== $el.attr('type')) {\n              valid = new RegExp(pattern).test(inputText);\n            } else {\n              valid = true;\n            }\n        }\n        // An empty field is valid if it's not required\n        else if (!$el.prop('required')) {\n            valid = true;\n          }\n\n        return valid;\n      }\n\n      /**\n       * Determines whether or a not a radio input is valid based on whether or not it is required and selected. Although the function targets a single `<input>`, it validates by checking the `required` and `checked` properties of all radio buttons in its group.\n       * @param {String} groupName - A string that specifies the name of a radio button group\n       * @returns {Boolean} Boolean value depends on whether or not at least one radio input has been selected (if it's required)\n       */\n\n    }, {\n      key: 'validateRadio',\n      value: function validateRadio(groupName) {\n        // If at least one radio in the group has the `required` attribute, the group is considered required\n        // Per W3C spec, all radio buttons in a group should have `required`, but we're being nice\n        var $group = this.$element.find(':radio[name=\"' + groupName + '\"]');\n        var valid = false,\n            required = false;\n\n        // For the group to be required, at least one radio needs to be required\n        $group.each(function (i, e) {\n          if ($(e).attr('required')) {\n            required = true;\n          }\n        });\n        if (!required) valid = true;\n\n        if (!valid) {\n          // For the group to be valid, at least one radio needs to be checked\n          $group.each(function (i, e) {\n            if ($(e).prop('checked')) {\n              valid = true;\n            }\n          });\n        };\n\n        return valid;\n      }\n\n      /**\n       * Determines if a selected input passes a custom validation function. Multiple validations can be used, if passed to the element with `data-validator=\"foo bar baz\"` in a space separated listed.\n       * @param {Object} $el - jQuery input element.\n       * @param {String} validators - a string of function names matching functions in the Abide.options.validators object.\n       * @param {Boolean} required - self explanatory?\n       * @returns {Boolean} - true if validations passed.\n       */\n\n    }, {\n      key: 'matchValidation',\n      value: function matchValidation($el, validators, required) {\n        var _this4 = this;\n\n        required = required ? true : false;\n\n        var clear = validators.split(' ').map(function (v) {\n          return _this4.options.validators[v]($el, required, $el.parent());\n        });\n        return clear.indexOf(false) === -1;\n      }\n\n      /**\n       * Resets form inputs and styles\n       * @fires Abide#formreset\n       */\n\n    }, {\n      key: 'resetForm',\n      value: function resetForm() {\n        var $form = this.$element,\n            opts = this.options;\n\n        $('.' + opts.labelErrorClass, $form).not('small').removeClass(opts.labelErrorClass);\n        $('.' + opts.inputErrorClass, $form).not('small').removeClass(opts.inputErrorClass);\n        $(opts.formErrorSelector + '.' + opts.formErrorClass).removeClass(opts.formErrorClass);\n        $form.find('[data-abide-error]').css('display', 'none');\n        $(':input', $form).not(':button, :submit, :reset, :hidden, :radio, :checkbox, [data-abide-ignore]').val('').removeAttr('data-invalid');\n        $(':input:radio', $form).not('[data-abide-ignore]').prop('checked', false).removeAttr('data-invalid');\n        $(':input:checkbox', $form).not('[data-abide-ignore]').prop('checked', false).removeAttr('data-invalid');\n        /**\n         * Fires when the form has been reset.\n         * @event Abide#formreset\n         */\n        $form.trigger('formreset.zf.abide', [$form]);\n      }\n\n      /**\n       * Destroys an instance of Abide.\n       * Removes error styles and classes from elements, without resetting their values.\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        var _this = this;\n        this.$element.off('.abide').find('[data-abide-error]').css('display', 'none');\n\n        this.$inputs.off('.abide').each(function () {\n          _this.removeErrorClasses($(this));\n        });\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Abide;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Abide.defaults = {\n    /**\n     * The default event to validate inputs. Checkboxes and radios validate immediately.\n     * Remove or change this value for manual validation.\n     * @option\n     * @example 'fieldChange'\n     */\n    validateOn: 'fieldChange',\n\n    /**\n     * Class to be applied to input labels on failed validation.\n     * @option\n     * @example 'is-invalid-label'\n     */\n    labelErrorClass: 'is-invalid-label',\n\n    /**\n     * Class to be applied to inputs on failed validation.\n     * @option\n     * @example 'is-invalid-input'\n     */\n    inputErrorClass: 'is-invalid-input',\n\n    /**\n     * Class selector to use to target Form Errors for show/hide.\n     * @option\n     * @example '.form-error'\n     */\n    formErrorSelector: '.form-error',\n\n    /**\n     * Class added to Form Errors on failed validation.\n     * @option\n     * @example 'is-visible'\n     */\n    formErrorClass: 'is-visible',\n\n    /**\n     * Set to true to validate text inputs on any value change.\n     * @option\n     * @example false\n     */\n    liveValidate: false,\n\n    patterns: {\n      alpha: /^[a-zA-Z]+$/,\n      alpha_numeric: /^[a-zA-Z0-9]+$/,\n      integer: /^[-+]?\\d+$/,\n      number: /^[-+]?\\d*(?:[\\.\\,]\\d+)?$/,\n\n      // amex, visa, diners\n      card: /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/,\n      cvv: /^([0-9]){3,4}$/,\n\n      // http://www.whatwg.org/specs/web-apps/current-work/multipage/states-of-the-type-attribute.html#valid-e-mail-address\n      email: /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+$/,\n\n      url: /^(https?|ftp|file|ssh):\\/\\/(((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-zA-Z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-zA-Z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/,\n      // abc.de\n      domain: /^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,8}$/,\n\n      datetime: /^([0-2][0-9]{3})\\-([0-1][0-9])\\-([0-3][0-9])T([0-5][0-9])\\:([0-5][0-9])\\:([0-5][0-9])(Z|([\\-\\+]([0-1][0-9])\\:00))$/,\n      // YYYY-MM-DD\n      date: /(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))$/,\n      // HH:MM:SS\n      time: /^(0[0-9]|1[0-9]|2[0-3])(:[0-5][0-9]){2}$/,\n      dateISO: /^\\d{4}[\\/\\-]\\d{1,2}[\\/\\-]\\d{1,2}$/,\n      // MM/DD/YYYY\n      month_day_year: /^(0[1-9]|1[012])[- \\/.](0[1-9]|[12][0-9]|3[01])[- \\/.]\\d{4}$/,\n      // DD/MM/YYYY\n      day_month_year: /^(0[1-9]|[12][0-9]|3[01])[- \\/.](0[1-9]|1[012])[- \\/.]\\d{4}$/,\n\n      // #FFF or #FFFFFF\n      color: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/\n    },\n\n    /**\n     * Optional validation functions to be used. `equalTo` being the only default included function.\n     * Functions should return only a boolean if the input is valid or not. Functions are given the following arguments:\n     * el : The jQuery element to validate.\n     * required : Boolean value of the required attribute be present or not.\n     * parent : The direct parent of the input.\n     * @option\n     */\n    validators: {\n      equalTo: function (el, required, parent) {\n        return $('#' + el.attr('data-equalto')).val() === el.val();\n      }\n    }\n  };\n\n  // Window exports\n  Foundation.plugin(Abide, 'Abide');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Accordion module.\n   * @module foundation.accordion\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   */\n\n  var Accordion = function () {\n    /**\n     * Creates a new instance of an accordion.\n     * @class\n     * @fires Accordion#init\n     * @param {jQuery} element - jQuery object to make into an accordion.\n     * @param {Object} options - a plain object with settings to override the default options.\n     */\n\n    function Accordion(element, options) {\n      _classCallCheck(this, Accordion);\n\n      this.$element = element;\n      this.options = $.extend({}, Accordion.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Accordion');\n      Foundation.Keyboard.register('Accordion', {\n        'ENTER': 'toggle',\n        'SPACE': 'toggle',\n        'ARROW_DOWN': 'next',\n        'ARROW_UP': 'previous'\n      });\n    }\n\n    /**\n     * Initializes the accordion by animating the preset active pane(s).\n     * @private\n     */\n\n\n    _createClass(Accordion, [{\n      key: '_init',\n      value: function _init() {\n        this.$element.attr('role', 'tablist');\n        this.$tabs = this.$element.children('li, [data-accordion-item]');\n\n        this.$tabs.each(function (idx, el) {\n          var $el = $(el),\n              $content = $el.children('[data-tab-content]'),\n              id = $content[0].id || Foundation.GetYoDigits(6, 'accordion'),\n              linkId = el.id || id + '-label';\n\n          $el.find('a:first').attr({\n            'aria-controls': id,\n            'role': 'tab',\n            'id': linkId,\n            'aria-expanded': false,\n            'aria-selected': false\n          });\n\n          $content.attr({ 'role': 'tabpanel', 'aria-labelledby': linkId, 'aria-hidden': true, 'id': id });\n        });\n        var $initActive = this.$element.find('.is-active').children('[data-tab-content]');\n        if ($initActive.length) {\n          this.down($initActive, true);\n        }\n        this._events();\n      }\n\n      /**\n       * Adds event handlers for items within the accordion.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this.$tabs.each(function () {\n          var $elem = $(this);\n          var $tabContent = $elem.children('[data-tab-content]');\n          if ($tabContent.length) {\n            $elem.children('a').off('click.zf.accordion keydown.zf.accordion').on('click.zf.accordion', function (e) {\n              // $(this).children('a').on('click.zf.accordion', function(e) {\n              e.preventDefault();\n              if ($elem.hasClass('is-active')) {\n                if (_this.options.allowAllClosed || $elem.siblings().hasClass('is-active')) {\n                  _this.up($tabContent);\n                }\n              } else {\n                _this.down($tabContent);\n              }\n            }).on('keydown.zf.accordion', function (e) {\n              Foundation.Keyboard.handleKey(e, 'Accordion', {\n                toggle: function () {\n                  _this.toggle($tabContent);\n                },\n                next: function () {\n                  var $a = $elem.next().find('a').focus();\n                  if (!_this.options.multiExpand) {\n                    $a.trigger('click.zf.accordion');\n                  }\n                },\n                previous: function () {\n                  var $a = $elem.prev().find('a').focus();\n                  if (!_this.options.multiExpand) {\n                    $a.trigger('click.zf.accordion');\n                  }\n                },\n                handled: function () {\n                  e.preventDefault();\n                  e.stopPropagation();\n                }\n              });\n            });\n          }\n        });\n      }\n\n      /**\n       * Toggles the selected content pane's open/close state.\n       * @param {jQuery} $target - jQuery object of the pane to toggle.\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle($target) {\n        if ($target.parent().hasClass('is-active')) {\n          if (this.options.allowAllClosed || $target.parent().siblings().hasClass('is-active')) {\n            this.up($target);\n          } else {\n            return;\n          }\n        } else {\n          this.down($target);\n        }\n      }\n\n      /**\n       * Opens the accordion tab defined by `$target`.\n       * @param {jQuery} $target - Accordion pane to open.\n       * @param {Boolean} firstTime - flag to determine if reflow should happen.\n       * @fires Accordion#down\n       * @function\n       */\n\n    }, {\n      key: 'down',\n      value: function down($target, firstTime) {\n        var _this2 = this;\n\n        if (!this.options.multiExpand && !firstTime) {\n          var $currentActive = this.$element.children('.is-active').children('[data-tab-content]');\n          if ($currentActive.length) {\n            this.up($currentActive);\n          }\n        }\n\n        $target.attr('aria-hidden', false).parent('[data-tab-content]').addBack().parent().addClass('is-active');\n\n        $target.slideDown(this.options.slideSpeed, function () {\n          /**\n           * Fires when the tab is done opening.\n           * @event Accordion#down\n           */\n          _this2.$element.trigger('down.zf.accordion', [$target]);\n        });\n\n        $('#' + $target.attr('aria-labelledby')).attr({\n          'aria-expanded': true,\n          'aria-selected': true\n        });\n      }\n\n      /**\n       * Closes the tab defined by `$target`.\n       * @param {jQuery} $target - Accordion tab to close.\n       * @fires Accordion#up\n       * @function\n       */\n\n    }, {\n      key: 'up',\n      value: function up($target) {\n        var $aunts = $target.parent().siblings(),\n            _this = this;\n        var canClose = this.options.multiExpand ? $aunts.hasClass('is-active') : $target.parent().hasClass('is-active');\n\n        if (!this.options.allowAllClosed && !canClose) {\n          return;\n        }\n\n        // Foundation.Move(this.options.slideSpeed, $target, function(){\n        $target.slideUp(_this.options.slideSpeed, function () {\n          /**\n           * Fires when the tab is done collapsing up.\n           * @event Accordion#up\n           */\n          _this.$element.trigger('up.zf.accordion', [$target]);\n        });\n        // });\n\n        $target.attr('aria-hidden', true).parent().removeClass('is-active');\n\n        $('#' + $target.attr('aria-labelledby')).attr({\n          'aria-expanded': false,\n          'aria-selected': false\n        });\n      }\n\n      /**\n       * Destroys an instance of an accordion.\n       * @fires Accordion#destroyed\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('[data-tab-content]').stop(true).slideUp(0).css('display', '');\n        this.$element.find('a').off('.zf.accordion');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Accordion;\n  }();\n\n  Accordion.defaults = {\n    /**\n     * Amount of time to animate the opening of an accordion pane.\n     * @option\n     * @example 250\n     */\n    slideSpeed: 250,\n    /**\n     * Allow the accordion to have multiple open panes.\n     * @option\n     * @example false\n     */\n    multiExpand: false,\n    /**\n     * Allow the accordion to close all panes.\n     * @option\n     * @example false\n     */\n    allowAllClosed: false\n  };\n\n  // Window exports\n  Foundation.plugin(Accordion, 'Accordion');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * AccordionMenu module.\n   * @module foundation.accordionMenu\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   * @requires foundation.util.nest\n   */\n\n  var AccordionMenu = function () {\n    /**\n     * Creates a new instance of an accordion menu.\n     * @class\n     * @fires AccordionMenu#init\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function AccordionMenu(element, options) {\n      _classCallCheck(this, AccordionMenu);\n\n      this.$element = element;\n      this.options = $.extend({}, AccordionMenu.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'accordion');\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'AccordionMenu');\n      Foundation.Keyboard.register('AccordionMenu', {\n        'ENTER': 'toggle',\n        'SPACE': 'toggle',\n        'ARROW_RIGHT': 'open',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'close',\n        'ESCAPE': 'closeAll',\n        'TAB': 'down',\n        'SHIFT_TAB': 'up'\n      });\n    }\n\n    /**\n     * Initializes the accordion menu by hiding all nested menus.\n     * @private\n     */\n\n\n    _createClass(AccordionMenu, [{\n      key: '_init',\n      value: function _init() {\n        this.$element.find('[data-submenu]').not('.is-active').slideUp(0); //.find('a').css('padding-left', '1rem');\n        this.$element.attr({\n          'role': 'tablist',\n          'aria-multiselectable': this.options.multiOpen\n        });\n\n        this.$menuLinks = this.$element.find('.is-accordion-submenu-parent');\n        this.$menuLinks.each(function () {\n          var linkId = this.id || Foundation.GetYoDigits(6, 'acc-menu-link'),\n              $elem = $(this),\n              $sub = $elem.children('[data-submenu]'),\n              subId = $sub[0].id || Foundation.GetYoDigits(6, 'acc-menu'),\n              isActive = $sub.hasClass('is-active');\n          $elem.attr({\n            'aria-controls': subId,\n            'aria-expanded': isActive,\n            'role': 'tab',\n            'id': linkId\n          });\n          $sub.attr({\n            'aria-labelledby': linkId,\n            'aria-hidden': !isActive,\n            'role': 'tabpanel',\n            'id': subId\n          });\n        });\n        var initPanes = this.$element.find('.is-active');\n        if (initPanes.length) {\n          var _this = this;\n          initPanes.each(function () {\n            _this.down($(this));\n          });\n        }\n        this._events();\n      }\n\n      /**\n       * Adds event handlers for items within the menu.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this.$element.find('li').each(function () {\n          var $submenu = $(this).children('[data-submenu]');\n\n          if ($submenu.length) {\n            $(this).children('a').off('click.zf.accordionMenu').on('click.zf.accordionMenu', function (e) {\n              e.preventDefault();\n\n              _this.toggle($submenu);\n            });\n          }\n        }).on('keydown.zf.accordionmenu', function (e) {\n          var $element = $(this),\n              $elements = $element.parent('ul').children('li'),\n              $prevElement,\n              $nextElement,\n              $target = $element.children('[data-submenu]');\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(Math.max(0, i - 1)).find('a').first();\n              $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1)).find('a').first();\n\n              if ($(this).children('[data-submenu]:visible').length) {\n                // has open sub menu\n                $nextElement = $element.find('li:first-child').find('a').first();\n              }\n              if ($(this).is(':first-child')) {\n                // is first element of sub menu\n                $prevElement = $element.parents('li').first().find('a').first();\n              } else if ($prevElement.children('[data-submenu]:visible').length) {\n                // if previous element has open sub menu\n                $prevElement = $prevElement.find('li:last-child').find('a').first();\n              }\n              if ($(this).is(':last-child')) {\n                // is last element of sub menu\n                $nextElement = $element.parents('li').first().next('li').find('a').first();\n              }\n\n              return;\n            }\n          });\n          Foundation.Keyboard.handleKey(e, 'AccordionMenu', {\n            open: function () {\n              if ($target.is(':hidden')) {\n                _this.down($target);\n                $target.find('li').first().find('a').first().focus();\n              }\n            },\n            close: function () {\n              if ($target.length && !$target.is(':hidden')) {\n                // close active sub of this item\n                _this.up($target);\n              } else if ($element.parent('[data-submenu]').length) {\n                // close currently open sub\n                _this.up($element.parent('[data-submenu]'));\n                $element.parents('li').first().find('a').first().focus();\n              }\n            },\n            up: function () {\n              $prevElement.attr('tabindex', -1).focus();\n              return true;\n            },\n            down: function () {\n              $nextElement.attr('tabindex', -1).focus();\n              return true;\n            },\n            toggle: function () {\n              if ($element.children('[data-submenu]').length) {\n                _this.toggle($element.children('[data-submenu]'));\n              }\n            },\n            closeAll: function () {\n              _this.hideAll();\n            },\n            handled: function (preventDefault) {\n              if (preventDefault) {\n                e.preventDefault();\n              }\n              e.stopImmediatePropagation();\n            }\n          });\n        }); //.attr('tabindex', 0);\n      }\n\n      /**\n       * Closes all panes of the menu.\n       * @function\n       */\n\n    }, {\n      key: 'hideAll',\n      value: function hideAll() {\n        this.$element.find('[data-submenu]').slideUp(this.options.slideSpeed);\n      }\n\n      /**\n       * Toggles the open/close state of a submenu.\n       * @function\n       * @param {jQuery} $target - the submenu to toggle\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle($target) {\n        if (!$target.is(':animated')) {\n          if (!$target.is(':hidden')) {\n            this.up($target);\n          } else {\n            this.down($target);\n          }\n        }\n      }\n\n      /**\n       * Opens the sub-menu defined by `$target`.\n       * @param {jQuery} $target - Sub-menu to open.\n       * @fires AccordionMenu#down\n       */\n\n    }, {\n      key: 'down',\n      value: function down($target) {\n        var _this = this;\n\n        if (!this.options.multiOpen) {\n          this.up(this.$element.find('.is-active').not($target.parentsUntil(this.$element).add($target)));\n        }\n\n        $target.addClass('is-active').attr({ 'aria-hidden': false }).parent('.is-accordion-submenu-parent').attr({ 'aria-expanded': true });\n\n        //Foundation.Move(this.options.slideSpeed, $target, function() {\n        $target.slideDown(_this.options.slideSpeed, function () {\n          /**\n           * Fires when the menu is done opening.\n           * @event AccordionMenu#down\n           */\n          _this.$element.trigger('down.zf.accordionMenu', [$target]);\n        });\n        //});\n      }\n\n      /**\n       * Closes the sub-menu defined by `$target`. All sub-menus inside the target will be closed as well.\n       * @param {jQuery} $target - Sub-menu to close.\n       * @fires AccordionMenu#up\n       */\n\n    }, {\n      key: 'up',\n      value: function up($target) {\n        var _this = this;\n        //Foundation.Move(this.options.slideSpeed, $target, function(){\n        $target.slideUp(_this.options.slideSpeed, function () {\n          /**\n           * Fires when the menu is done collapsing up.\n           * @event AccordionMenu#up\n           */\n          _this.$element.trigger('up.zf.accordionMenu', [$target]);\n        });\n        //});\n\n        var $menus = $target.find('[data-submenu]').slideUp(0).addBack().attr('aria-hidden', true);\n\n        $menus.parent('.is-accordion-submenu-parent').attr('aria-expanded', false);\n      }\n\n      /**\n       * Destroys an instance of accordion menu.\n       * @fires AccordionMenu#destroyed\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('[data-submenu]').slideDown(0).css('display', '');\n        this.$element.find('a').off('click.zf.accordionMenu');\n\n        Foundation.Nest.Burn(this.$element, 'accordion');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return AccordionMenu;\n  }();\n\n  AccordionMenu.defaults = {\n    /**\n     * Amount of time to animate the opening of a submenu in ms.\n     * @option\n     * @example 250\n     */\n    slideSpeed: 250,\n    /**\n     * Allow the menu to have multiple open panes.\n     * @option\n     * @example true\n     */\n    multiOpen: true\n  };\n\n  // Window exports\n  Foundation.plugin(AccordionMenu, 'AccordionMenu');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Drilldown module.\n   * @module foundation.drilldown\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   * @requires foundation.util.nest\n   */\n\n  var Drilldown = function () {\n    /**\n     * Creates a new instance of a drilldown menu.\n     * @class\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Drilldown(element, options) {\n      _classCallCheck(this, Drilldown);\n\n      this.$element = element;\n      this.options = $.extend({}, Drilldown.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'drilldown');\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Drilldown');\n      Foundation.Keyboard.register('Drilldown', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'previous',\n        'ESCAPE': 'close',\n        'TAB': 'down',\n        'SHIFT_TAB': 'up'\n      });\n    }\n\n    /**\n     * Initializes the drilldown by creating jQuery collections of elements\n     * @private\n     */\n\n\n    _createClass(Drilldown, [{\n      key: '_init',\n      value: function _init() {\n        this.$submenuAnchors = this.$element.find('li.is-drilldown-submenu-parent').children('a');\n        this.$submenus = this.$submenuAnchors.parent('li').children('[data-submenu]');\n        this.$menuItems = this.$element.find('li').not('.js-drilldown-back').attr('role', 'menuitem').find('a');\n\n        this._prepareMenu();\n\n        this._keyboardEvents();\n      }\n\n      /**\n       * prepares drilldown menu by setting attributes to links and elements\n       * sets a min height to prevent content jumping\n       * wraps the element if not already wrapped\n       * @private\n       * @function\n       */\n\n    }, {\n      key: '_prepareMenu',\n      value: function _prepareMenu() {\n        var _this = this;\n        // if(!this.options.holdOpen){\n        //   this._menuLinkEvents();\n        // }\n        this.$submenuAnchors.each(function () {\n          var $link = $(this);\n          var $sub = $link.parent();\n          if (_this.options.parentLink) {\n            $link.clone().prependTo($sub.children('[data-submenu]')).wrap('<li class=\"is-submenu-parent-item is-submenu-item is-drilldown-submenu-item\" role=\"menu-item\"></li>');\n          }\n          $link.data('savedHref', $link.attr('href')).removeAttr('href');\n          $link.children('[data-submenu]').attr({\n            'aria-hidden': true,\n            'tabindex': 0,\n            'role': 'menu'\n          });\n          _this._events($link);\n        });\n        this.$submenus.each(function () {\n          var $menu = $(this),\n              $back = $menu.find('.js-drilldown-back');\n          if (!$back.length) {\n            $menu.prepend(_this.options.backButton);\n          }\n          _this._back($menu);\n        });\n        if (!this.$element.parent().hasClass('is-drilldown')) {\n          this.$wrapper = $(this.options.wrapper).addClass('is-drilldown');\n          this.$wrapper = this.$element.wrap(this.$wrapper).parent().css(this._getMaxDims());\n        }\n      }\n\n      /**\n       * Adds event handlers to elements in the menu.\n       * @function\n       * @private\n       * @param {jQuery} $elem - the current menu item to add handlers to.\n       */\n\n    }, {\n      key: '_events',\n      value: function _events($elem) {\n        var _this = this;\n\n        $elem.off('click.zf.drilldown').on('click.zf.drilldown', function (e) {\n          if ($(e.target).parentsUntil('ul', 'li').hasClass('is-drilldown-submenu-parent')) {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n          }\n\n          // if(e.target !== e.currentTarget.firstElementChild){\n          //   return false;\n          // }\n          _this._show($elem.parent('li'));\n\n          if (_this.options.closeOnClick) {\n            var $body = $('body');\n            $body.off('.zf.drilldown').on('click.zf.drilldown', function (e) {\n              if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) {\n                return;\n              }\n              e.preventDefault();\n              _this._hideAll();\n              $body.off('.zf.drilldown');\n            });\n          }\n        });\n      }\n\n      /**\n       * Adds keydown event listener to `li`'s in the menu.\n       * @private\n       */\n\n    }, {\n      key: '_keyboardEvents',\n      value: function _keyboardEvents() {\n        var _this = this;\n\n        this.$menuItems.add(this.$element.find('.js-drilldown-back > a')).on('keydown.zf.drilldown', function (e) {\n\n          var $element = $(this),\n              $elements = $element.parent('li').parent('ul').children('li').children('a'),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(Math.max(0, i - 1));\n              $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\n              return;\n            }\n          });\n\n          Foundation.Keyboard.handleKey(e, 'Drilldown', {\n            next: function () {\n              if ($element.is(_this.$submenuAnchors)) {\n                _this._show($element.parent('li'));\n                $element.parent('li').one(Foundation.transitionend($element), function () {\n                  $element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();\n                });\n                return true;\n              }\n            },\n            previous: function () {\n              _this._hide($element.parent('li').parent('ul'));\n              $element.parent('li').parent('ul').one(Foundation.transitionend($element), function () {\n                setTimeout(function () {\n                  $element.parent('li').parent('ul').parent('li').children('a').first().focus();\n                }, 1);\n              });\n              return true;\n            },\n            up: function () {\n              $prevElement.focus();\n              return true;\n            },\n            down: function () {\n              $nextElement.focus();\n              return true;\n            },\n            close: function () {\n              _this._back();\n              //_this.$menuItems.first().focus(); // focus to first element\n            },\n            open: function () {\n              if (!$element.is(_this.$menuItems)) {\n                // not menu item means back button\n                _this._hide($element.parent('li').parent('ul'));\n                $element.parent('li').parent('ul').one(Foundation.transitionend($element), function () {\n                  setTimeout(function () {\n                    $element.parent('li').parent('ul').parent('li').children('a').first().focus();\n                  }, 1);\n                });\n              } else if ($element.is(_this.$submenuAnchors)) {\n                _this._show($element.parent('li'));\n                $element.parent('li').one(Foundation.transitionend($element), function () {\n                  $element.parent('li').find('ul li a').filter(_this.$menuItems).first().focus();\n                });\n              }\n              return true;\n            },\n            handled: function (preventDefault) {\n              if (preventDefault) {\n                e.preventDefault();\n              }\n              e.stopImmediatePropagation();\n            }\n          });\n        }); // end keyboardAccess\n      }\n\n      /**\n       * Closes all open elements, and returns to root menu.\n       * @function\n       * @fires Drilldown#closed\n       */\n\n    }, {\n      key: '_hideAll',\n      value: function _hideAll() {\n        var $elem = this.$element.find('.is-drilldown-submenu.is-active').addClass('is-closing');\n        $elem.one(Foundation.transitionend($elem), function (e) {\n          $elem.removeClass('is-active is-closing');\n        });\n        /**\n         * Fires when the menu is fully closed.\n         * @event Drilldown#closed\n         */\n        this.$element.trigger('closed.zf.drilldown');\n      }\n\n      /**\n       * Adds event listener for each `back` button, and closes open menus.\n       * @function\n       * @fires Drilldown#back\n       * @param {jQuery} $elem - the current sub-menu to add `back` event.\n       */\n\n    }, {\n      key: '_back',\n      value: function _back($elem) {\n        var _this = this;\n        $elem.off('click.zf.drilldown');\n        $elem.children('.js-drilldown-back').on('click.zf.drilldown', function (e) {\n          e.stopImmediatePropagation();\n          // console.log('mouseup on back');\n          _this._hide($elem);\n        });\n      }\n\n      /**\n       * Adds event listener to menu items w/o submenus to close open menus on click.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_menuLinkEvents',\n      value: function _menuLinkEvents() {\n        var _this = this;\n        this.$menuItems.not('.is-drilldown-submenu-parent').off('click.zf.drilldown').on('click.zf.drilldown', function (e) {\n          // e.stopImmediatePropagation();\n          setTimeout(function () {\n            _this._hideAll();\n          }, 0);\n        });\n      }\n\n      /**\n       * Opens a submenu.\n       * @function\n       * @fires Drilldown#open\n       * @param {jQuery} $elem - the current element with a submenu to open, i.e. the `li` tag.\n       */\n\n    }, {\n      key: '_show',\n      value: function _show($elem) {\n        $elem.children('[data-submenu]').addClass('is-active');\n        /**\n         * Fires when the submenu has opened.\n         * @event Drilldown#open\n         */\n        this.$element.trigger('open.zf.drilldown', [$elem]);\n      }\n    }, {\n      key: '_hide',\n\n\n      /**\n       * Hides a submenu\n       * @function\n       * @fires Drilldown#hide\n       * @param {jQuery} $elem - the current sub-menu to hide, i.e. the `ul` tag.\n       */\n      value: function _hide($elem) {\n        var _this = this;\n        $elem.addClass('is-closing').one(Foundation.transitionend($elem), function () {\n          $elem.removeClass('is-active is-closing');\n          $elem.blur();\n        });\n        /**\n         * Fires when the submenu has closed.\n         * @event Drilldown#hide\n         */\n        $elem.trigger('hide.zf.drilldown', [$elem]);\n      }\n\n      /**\n       * Iterates through the nested menus to calculate the min-height, and max-width for the menu.\n       * Prevents content jumping.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_getMaxDims',\n      value: function _getMaxDims() {\n        var max = 0,\n            result = {};\n        this.$submenus.add(this.$element).each(function () {\n          var numOfElems = $(this).children('li').length;\n          max = numOfElems > max ? numOfElems : max;\n        });\n\n        result['min-height'] = max * this.$menuItems[0].getBoundingClientRect().height + 'px';\n        result['max-width'] = this.$element[0].getBoundingClientRect().width + 'px';\n\n        return result;\n      }\n\n      /**\n       * Destroys the Drilldown Menu\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this._hideAll();\n        Foundation.Nest.Burn(this.$element, 'drilldown');\n        this.$element.unwrap().find('.js-drilldown-back, .is-submenu-parent-item').remove().end().find('.is-active, .is-closing, .is-drilldown-submenu').removeClass('is-active is-closing is-drilldown-submenu').end().find('[data-submenu]').removeAttr('aria-hidden tabindex role');\n        this.$submenuAnchors.each(function () {\n          $(this).off('.zf.drilldown');\n        });\n        this.$element.find('a').each(function () {\n          var $link = $(this);\n          if ($link.data('savedHref')) {\n            $link.attr('href', $link.data('savedHref')).removeData('savedHref');\n          } else {\n            return;\n          }\n        });\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Drilldown;\n  }();\n\n  Drilldown.defaults = {\n    /**\n     * Markup used for JS generated back button. Prepended to submenu lists and deleted on `destroy` method, 'js-drilldown-back' class required. Remove the backslash (`\\`) if copy and pasting.\n     * @option\n     * @example '<\\li><\\a>Back<\\/a><\\/li>'\n     */\n    backButton: '<li class=\"js-drilldown-back\"><a tabindex=\"0\">Back</a></li>',\n    /**\n     * Markup used to wrap drilldown menu. Use a class name for independent styling; the JS applied class: `is-drilldown` is required. Remove the backslash (`\\`) if copy and pasting.\n     * @option\n     * @example '<\\div class=\"is-drilldown\"><\\/div>'\n     */\n    wrapper: '<div></div>',\n    /**\n     * Adds the parent link to the submenu.\n     * @option\n     * @example false\n     */\n    parentLink: false,\n    /**\n     * Allow the menu to return to root list on body click.\n     * @option\n     * @example false\n     */\n    closeOnClick: false\n    // holdOpen: false\n  };\n\n  // Window exports\n  Foundation.plugin(Drilldown, 'Drilldown');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Dropdown module.\n   * @module foundation.dropdown\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.triggers\n   */\n\n  var Dropdown = function () {\n    /**\n     * Creates a new instance of a dropdown.\n     * @class\n     * @param {jQuery} element - jQuery object to make into a dropdown.\n     *        Object should be of the dropdown panel, rather than its anchor.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Dropdown(element, options) {\n      _classCallCheck(this, Dropdown);\n\n      this.$element = element;\n      this.options = $.extend({}, Dropdown.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Dropdown');\n      Foundation.Keyboard.register('Dropdown', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close',\n        'TAB': 'tab_forward',\n        'SHIFT_TAB': 'tab_backward'\n      });\n    }\n\n    /**\n     * Initializes the plugin by setting/checking options and attributes, adding helper variables, and saving the anchor.\n     * @function\n     * @private\n     */\n\n\n    _createClass(Dropdown, [{\n      key: '_init',\n      value: function _init() {\n        var $id = this.$element.attr('id');\n\n        this.$anchor = $('[data-toggle=\"' + $id + '\"]') || $('[data-open=\"' + $id + '\"]');\n        this.$anchor.attr({\n          'aria-controls': $id,\n          'data-is-focus': false,\n          'data-yeti-box': $id,\n          'aria-haspopup': true,\n          'aria-expanded': false\n\n        });\n\n        this.options.positionClass = this.getPositionClass();\n        this.counter = 4;\n        this.usedPositions = [];\n        this.$element.attr({\n          'aria-hidden': 'true',\n          'data-yeti-box': $id,\n          'data-resize': $id,\n          'aria-labelledby': this.$anchor[0].id || Foundation.GetYoDigits(6, 'dd-anchor')\n        });\n        this._events();\n      }\n\n      /**\n       * Helper function to determine current orientation of dropdown pane.\n       * @function\n       * @returns {String} position - string value of a position class.\n       */\n\n    }, {\n      key: 'getPositionClass',\n      value: function getPositionClass() {\n        var verticalPosition = this.$element[0].className.match(/(top|left|right|bottom)/g);\n        verticalPosition = verticalPosition ? verticalPosition[0] : '';\n        var horizontalPosition = /float-(\\S+)\\s/.exec(this.$anchor[0].className);\n        horizontalPosition = horizontalPosition ? horizontalPosition[1] : '';\n        var position = horizontalPosition ? horizontalPosition + ' ' + verticalPosition : verticalPosition;\n        return position;\n      }\n\n      /**\n       * Adjusts the dropdown panes orientation by adding/removing positioning classes.\n       * @function\n       * @private\n       * @param {String} position - position class to remove.\n       */\n\n    }, {\n      key: '_reposition',\n      value: function _reposition(position) {\n        this.usedPositions.push(position ? position : 'bottom');\n        //default, try switching to opposite side\n        if (!position && this.usedPositions.indexOf('top') < 0) {\n          this.$element.addClass('top');\n        } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\n          this.$element.removeClass(position);\n        } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\n          this.$element.removeClass(position).addClass('right');\n        } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\n          this.$element.removeClass(position).addClass('left');\n        }\n\n        //if default change didn't work, try bottom or left first\n        else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.$element.addClass('left');\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.$element.removeClass(position).addClass('left');\n          } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.$element.removeClass(position);\n          }\n          //if nothing cleared, set to bottom\n          else {\n              this.$element.removeClass(position);\n            }\n        this.classChanged = true;\n        this.counter--;\n      }\n\n      /**\n       * Sets the position and orientation of the dropdown pane, checks for collisions.\n       * Recursively calls itself if a collision is detected, with a new position class.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_setPosition',\n      value: function _setPosition() {\n        if (this.$anchor.attr('aria-expanded') === 'false') {\n          return false;\n        }\n        var position = this.getPositionClass(),\n            $eleDims = Foundation.Box.GetDimensions(this.$element),\n            $anchorDims = Foundation.Box.GetDimensions(this.$anchor),\n            _this = this,\n            direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\n            param = direction === 'top' ? 'height' : 'width',\n            offset = param === 'height' ? this.options.vOffset : this.options.hOffset;\n\n        if ($eleDims.width >= $eleDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.$element)) {\n          this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            'width': $eleDims.windowDims.width - this.options.hOffset * 2,\n            'height': 'auto'\n          });\n          this.classChanged = true;\n          return false;\n        }\n\n        this.$element.offset(Foundation.Box.GetOffsets(this.$element, this.$anchor, position, this.options.vOffset, this.options.hOffset));\n\n        while (!Foundation.Box.ImNotTouchingYou(this.$element, false, true) && this.counter) {\n          this._reposition(position);\n          this._setPosition();\n        }\n      }\n\n      /**\n       * Adds event listeners to the element utilizing the triggers utility library.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        this.$element.on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': this.close.bind(this),\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'resizeme.zf.trigger': this._setPosition.bind(this)\n        });\n\n        if (this.options.hover) {\n          this.$anchor.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function () {\n              _this.open();\n              _this.$anchor.data('hover', true);\n            }, _this.options.hoverDelay);\n          }).on('mouseleave.zf.dropdown', function () {\n            clearTimeout(_this.timeout);\n            _this.timeout = setTimeout(function () {\n              _this.close();\n              _this.$anchor.data('hover', false);\n            }, _this.options.hoverDelay);\n          });\n          if (this.options.hoverPane) {\n            this.$element.off('mouseenter.zf.dropdown mouseleave.zf.dropdown').on('mouseenter.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n            }).on('mouseleave.zf.dropdown', function () {\n              clearTimeout(_this.timeout);\n              _this.timeout = setTimeout(function () {\n                _this.close();\n                _this.$anchor.data('hover', false);\n              }, _this.options.hoverDelay);\n            });\n          }\n        }\n        this.$anchor.add(this.$element).on('keydown.zf.dropdown', function (e) {\n\n          var $target = $(this),\n              visibleFocusableElements = Foundation.Keyboard.findFocusable(_this.$element);\n\n          Foundation.Keyboard.handleKey(e, 'Dropdown', {\n            tab_forward: function () {\n              if (_this.$element.find(':focus').is(visibleFocusableElements.eq(-1))) {\n                // left modal downwards, setting focus to first element\n                if (_this.options.trapFocus) {\n                  // if focus shall be trapped\n                  visibleFocusableElements.eq(0).focus();\n                  e.preventDefault();\n                } else {\n                  // if focus is not trapped, close dropdown on focus out\n                  _this.close();\n                }\n              }\n            },\n            tab_backward: function () {\n              if (_this.$element.find(':focus').is(visibleFocusableElements.eq(0)) || _this.$element.is(':focus')) {\n                // left modal upwards, setting focus to last element\n                if (_this.options.trapFocus) {\n                  // if focus shall be trapped\n                  visibleFocusableElements.eq(-1).focus();\n                  e.preventDefault();\n                } else {\n                  // if focus is not trapped, close dropdown on focus out\n                  _this.close();\n                }\n              }\n            },\n            open: function () {\n              if ($target.is(_this.$anchor)) {\n                _this.open();\n                _this.$element.attr('tabindex', -1).focus();\n                e.preventDefault();\n              }\n            },\n            close: function () {\n              _this.close();\n              _this.$anchor.focus();\n            }\n          });\n        });\n      }\n\n      /**\n       * Adds an event handler to the body to close any dropdowns on a click.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_addBodyHandler',\n      value: function _addBodyHandler() {\n        var $body = $(document.body).not(this.$element),\n            _this = this;\n        $body.off('click.zf.dropdown').on('click.zf.dropdown', function (e) {\n          if (_this.$anchor.is(e.target) || _this.$anchor.find(e.target).length) {\n            return;\n          }\n          if (_this.$element.find(e.target).length) {\n            return;\n          }\n          _this.close();\n          $body.off('click.zf.dropdown');\n        });\n      }\n\n      /**\n       * Opens the dropdown pane, and fires a bubbling event to close other dropdowns.\n       * @function\n       * @fires Dropdown#closeme\n       * @fires Dropdown#show\n       */\n\n    }, {\n      key: 'open',\n      value: function open() {\n        // var _this = this;\n        /**\n         * Fires to close other open dropdowns\n         * @event Dropdown#closeme\n         */\n        this.$element.trigger('closeme.zf.dropdown', this.$element.attr('id'));\n        this.$anchor.addClass('hover').attr({ 'aria-expanded': true });\n        // this.$element/*.show()*/;\n        this._setPosition();\n        this.$element.addClass('is-open').attr({ 'aria-hidden': false });\n\n        if (this.options.autoFocus) {\n          var $focusable = Foundation.Keyboard.findFocusable(this.$element);\n          if ($focusable.length) {\n            $focusable.eq(0).focus();\n          }\n        }\n\n        if (this.options.closeOnClick) {\n          this._addBodyHandler();\n        }\n\n        /**\n         * Fires once the dropdown is visible.\n         * @event Dropdown#show\n         */\n        this.$element.trigger('show.zf.dropdown', [this.$element]);\n      }\n\n      /**\n       * Closes the open dropdown pane.\n       * @function\n       * @fires Dropdown#hide\n       */\n\n    }, {\n      key: 'close',\n      value: function close() {\n        if (!this.$element.hasClass('is-open')) {\n          return false;\n        }\n        this.$element.removeClass('is-open').attr({ 'aria-hidden': true });\n\n        this.$anchor.removeClass('hover').attr('aria-expanded', false);\n\n        if (this.classChanged) {\n          var curPositionClass = this.getPositionClass();\n          if (curPositionClass) {\n            this.$element.removeClass(curPositionClass);\n          }\n          this.$element.addClass(this.options.positionClass)\n          /*.hide()*/.css({ height: '', width: '' });\n          this.classChanged = false;\n          this.counter = 4;\n          this.usedPositions.length = 0;\n        }\n        this.$element.trigger('hide.zf.dropdown', [this.$element]);\n      }\n\n      /**\n       * Toggles the dropdown pane's visibility.\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.$element.hasClass('is-open')) {\n          if (this.$anchor.data('hover')) return;\n          this.close();\n        } else {\n          this.open();\n        }\n      }\n\n      /**\n       * Destroys the dropdown.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.trigger').hide();\n        this.$anchor.off('.zf.dropdown');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Dropdown;\n  }();\n\n  Dropdown.defaults = {\n    /**\n     * Amount of time to delay opening a submenu on hover event.\n     * @option\n     * @example 250\n     */\n    hoverDelay: 250,\n    /**\n     * Allow submenus to open on hover events\n     * @option\n     * @example false\n     */\n    hover: false,\n    /**\n     * Don't close dropdown when hovering over dropdown pane\n     * @option\n     * @example true\n     */\n    hoverPane: false,\n    /**\n     * Number of pixels between the dropdown pane and the triggering element on open.\n     * @option\n     * @example 1\n     */\n    vOffset: 1,\n    /**\n     * Number of pixels between the dropdown pane and the triggering element on open.\n     * @option\n     * @example 1\n     */\n    hOffset: 1,\n    /**\n     * Class applied to adjust open position. JS will test and fill this in.\n     * @option\n     * @example 'top'\n     */\n    positionClass: '',\n    /**\n     * Allow the plugin to trap focus to the dropdown pane if opened with keyboard commands.\n     * @option\n     * @example false\n     */\n    trapFocus: false,\n    /**\n     * Allow the plugin to set focus to the first focusable element within the pane, regardless of method of opening.\n     * @option\n     * @example true\n     */\n    autoFocus: false,\n    /**\n     * Allows a click on the body to close the dropdown.\n     * @option\n     * @example false\n     */\n    closeOnClick: false\n  };\n\n  // Window exports\n  Foundation.plugin(Dropdown, 'Dropdown');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * DropdownMenu module.\n   * @module foundation.dropdown-menu\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.nest\n   */\n\n  var DropdownMenu = function () {\n    /**\n     * Creates a new instance of DropdownMenu.\n     * @class\n     * @fires DropdownMenu#init\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function DropdownMenu(element, options) {\n      _classCallCheck(this, DropdownMenu);\n\n      this.$element = element;\n      this.options = $.extend({}, DropdownMenu.defaults, this.$element.data(), options);\n\n      Foundation.Nest.Feather(this.$element, 'dropdown');\n      this._init();\n\n      Foundation.registerPlugin(this, 'DropdownMenu');\n      Foundation.Keyboard.register('DropdownMenu', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'up',\n        'ARROW_DOWN': 'down',\n        'ARROW_LEFT': 'previous',\n        'ESCAPE': 'close'\n      });\n    }\n\n    /**\n     * Initializes the plugin, and calls _prepareMenu\n     * @private\n     * @function\n     */\n\n\n    _createClass(DropdownMenu, [{\n      key: '_init',\n      value: function _init() {\n        var subs = this.$element.find('li.is-dropdown-submenu-parent');\n        this.$element.children('.is-dropdown-submenu-parent').children('.is-dropdown-submenu').addClass('first-sub');\n\n        this.$menuItems = this.$element.find('[role=\"menuitem\"]');\n        this.$tabs = this.$element.children('[role=\"menuitem\"]');\n        this.$tabs.find('ul.is-dropdown-submenu').addClass(this.options.verticalClass);\n\n        if (this.$element.hasClass(this.options.rightClass) || this.options.alignment === 'right' || Foundation.rtl() || this.$element.parents('.top-bar-right').is('*')) {\n          this.options.alignment = 'right';\n          subs.addClass('opens-left');\n        } else {\n          subs.addClass('opens-right');\n        }\n        this.changed = false;\n        this._events();\n      }\n    }, {\n      key: '_events',\n\n      /**\n       * Adds event listeners to elements within the menu\n       * @private\n       * @function\n       */\n      value: function _events() {\n        var _this = this,\n            hasTouch = 'ontouchstart' in window || typeof window.ontouchstart !== 'undefined',\n            parClass = 'is-dropdown-submenu-parent';\n\n        // used for onClick and in the keyboard handlers\n        var handleClickFn = function (e) {\n          var $elem = $(e.target).parentsUntil('ul', '.' + parClass),\n              hasSub = $elem.hasClass(parClass),\n              hasClicked = $elem.attr('data-is-click') === 'true',\n              $sub = $elem.children('.is-dropdown-submenu');\n\n          if (hasSub) {\n            if (hasClicked) {\n              if (!_this.options.closeOnClick || !_this.options.clickOpen && !hasTouch || _this.options.forceFollow && hasTouch) {\n                return;\n              } else {\n                e.stopImmediatePropagation();\n                e.preventDefault();\n                _this._hide($elem);\n              }\n            } else {\n              e.preventDefault();\n              e.stopImmediatePropagation();\n              _this._show($elem.children('.is-dropdown-submenu'));\n              $elem.add($elem.parentsUntil(_this.$element, '.' + parClass)).attr('data-is-click', true);\n            }\n          } else {\n            return;\n          }\n        };\n\n        if (this.options.clickOpen || hasTouch) {\n          this.$menuItems.on('click.zf.dropdownmenu touchstart.zf.dropdownmenu', handleClickFn);\n        }\n\n        if (!this.options.disableHover) {\n          this.$menuItems.on('mouseenter.zf.dropdownmenu', function (e) {\n            var $elem = $(this),\n                hasSub = $elem.hasClass(parClass);\n\n            if (hasSub) {\n              clearTimeout(_this.delay);\n              _this.delay = setTimeout(function () {\n                _this._show($elem.children('.is-dropdown-submenu'));\n              }, _this.options.hoverDelay);\n            }\n          }).on('mouseleave.zf.dropdownmenu', function (e) {\n            var $elem = $(this),\n                hasSub = $elem.hasClass(parClass);\n            if (hasSub && _this.options.autoclose) {\n              if ($elem.attr('data-is-click') === 'true' && _this.options.clickOpen) {\n                return false;\n              }\n\n              clearTimeout(_this.delay);\n              _this.delay = setTimeout(function () {\n                _this._hide($elem);\n              }, _this.options.closingTime);\n            }\n          });\n        }\n        this.$menuItems.on('keydown.zf.dropdownmenu', function (e) {\n          var $element = $(e.target).parentsUntil('ul', '[role=\"menuitem\"]'),\n              isTab = _this.$tabs.index($element) > -1,\n              $elements = isTab ? _this.$tabs : $element.siblings('li').add($element),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              $prevElement = $elements.eq(i - 1);\n              $nextElement = $elements.eq(i + 1);\n              return;\n            }\n          });\n\n          var nextSibling = function () {\n            if (!$element.is(':last-child')) {\n              $nextElement.children('a:first').focus();\n              e.preventDefault();\n            }\n          },\n              prevSibling = function () {\n            $prevElement.children('a:first').focus();\n            e.preventDefault();\n          },\n              openSub = function () {\n            var $sub = $element.children('ul.is-dropdown-submenu');\n            if ($sub.length) {\n              _this._show($sub);\n              $element.find('li > a:first').focus();\n              e.preventDefault();\n            } else {\n              return;\n            }\n          },\n              closeSub = function () {\n            //if ($element.is(':first-child')) {\n            var close = $element.parent('ul').parent('li');\n            close.children('a:first').focus();\n            _this._hide(close);\n            e.preventDefault();\n            //}\n          };\n          var functions = {\n            open: openSub,\n            close: function () {\n              _this._hide(_this.$element);\n              _this.$menuItems.find('a:first').focus(); // focus to first element\n              e.preventDefault();\n            },\n            handled: function () {\n              e.stopImmediatePropagation();\n            }\n          };\n\n          if (isTab) {\n            if (_this.$element.hasClass(_this.options.verticalClass)) {\n              // vertical menu\n              if (_this.options.alignment === 'left') {\n                // left aligned\n                $.extend(functions, {\n                  down: nextSibling,\n                  up: prevSibling,\n                  next: openSub,\n                  previous: closeSub\n                });\n              } else {\n                // right aligned\n                $.extend(functions, {\n                  down: nextSibling,\n                  up: prevSibling,\n                  next: closeSub,\n                  previous: openSub\n                });\n              }\n            } else {\n              // horizontal menu\n              $.extend(functions, {\n                next: nextSibling,\n                previous: prevSibling,\n                down: openSub,\n                up: closeSub\n              });\n            }\n          } else {\n            // not tabs -> one sub\n            if (_this.options.alignment === 'left') {\n              // left aligned\n              $.extend(functions, {\n                next: openSub,\n                previous: closeSub,\n                down: nextSibling,\n                up: prevSibling\n              });\n            } else {\n              // right aligned\n              $.extend(functions, {\n                next: closeSub,\n                previous: openSub,\n                down: nextSibling,\n                up: prevSibling\n              });\n            }\n          }\n          Foundation.Keyboard.handleKey(e, 'DropdownMenu', functions);\n        });\n      }\n\n      /**\n       * Adds an event handler to the body to close any dropdowns on a click.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_addBodyHandler',\n      value: function _addBodyHandler() {\n        var $body = $(document.body),\n            _this = this;\n        $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu').on('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu', function (e) {\n          var $link = _this.$element.find(e.target);\n          if ($link.length) {\n            return;\n          }\n\n          _this._hide();\n          $body.off('mouseup.zf.dropdownmenu touchend.zf.dropdownmenu');\n        });\n      }\n\n      /**\n       * Opens a dropdown pane, and checks for collisions first.\n       * @param {jQuery} $sub - ul element that is a submenu to show\n       * @function\n       * @private\n       * @fires DropdownMenu#show\n       */\n\n    }, {\n      key: '_show',\n      value: function _show($sub) {\n        var idx = this.$tabs.index(this.$tabs.filter(function (i, el) {\n          return $(el).find($sub).length > 0;\n        }));\n        var $sibs = $sub.parent('li.is-dropdown-submenu-parent').siblings('li.is-dropdown-submenu-parent');\n        this._hide($sibs, idx);\n        $sub.css('visibility', 'hidden').addClass('js-dropdown-active').attr({ 'aria-hidden': false }).parent('li.is-dropdown-submenu-parent').addClass('is-active').attr({ 'aria-expanded': true });\n        var clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n        if (!clear) {\n          var oldClass = this.options.alignment === 'left' ? '-right' : '-left',\n              $parentLi = $sub.parent('.is-dropdown-submenu-parent');\n          $parentLi.removeClass('opens' + oldClass).addClass('opens-' + this.options.alignment);\n          clear = Foundation.Box.ImNotTouchingYou($sub, null, true);\n          if (!clear) {\n            $parentLi.removeClass('opens-' + this.options.alignment).addClass('opens-inner');\n          }\n          this.changed = true;\n        }\n        $sub.css('visibility', '');\n        if (this.options.closeOnClick) {\n          this._addBodyHandler();\n        }\n        /**\n         * Fires when the new dropdown pane is visible.\n         * @event DropdownMenu#show\n         */\n        this.$element.trigger('show.zf.dropdownmenu', [$sub]);\n      }\n\n      /**\n       * Hides a single, currently open dropdown pane, if passed a parameter, otherwise, hides everything.\n       * @function\n       * @param {jQuery} $elem - element with a submenu to hide\n       * @param {Number} idx - index of the $tabs collection to hide\n       * @private\n       */\n\n    }, {\n      key: '_hide',\n      value: function _hide($elem, idx) {\n        var $toClose;\n        if ($elem && $elem.length) {\n          $toClose = $elem;\n        } else if (idx !== undefined) {\n          $toClose = this.$tabs.not(function (i, el) {\n            return i === idx;\n          });\n        } else {\n          $toClose = this.$element;\n        }\n        var somethingToClose = $toClose.hasClass('is-active') || $toClose.find('.is-active').length > 0;\n\n        if (somethingToClose) {\n          $toClose.find('li.is-active').add($toClose).attr({\n            'aria-expanded': false,\n            'data-is-click': false\n          }).removeClass('is-active');\n\n          $toClose.find('ul.js-dropdown-active').attr({\n            'aria-hidden': true\n          }).removeClass('js-dropdown-active');\n\n          if (this.changed || $toClose.find('opens-inner').length) {\n            var oldClass = this.options.alignment === 'left' ? 'right' : 'left';\n            $toClose.find('li.is-dropdown-submenu-parent').add($toClose).removeClass('opens-inner opens-' + this.options.alignment).addClass('opens-' + oldClass);\n            this.changed = false;\n          }\n          /**\n           * Fires when the open menus are closed.\n           * @event DropdownMenu#hide\n           */\n          this.$element.trigger('hide.zf.dropdownmenu', [$toClose]);\n        }\n      }\n\n      /**\n       * Destroys the plugin.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$menuItems.off('.zf.dropdownmenu').removeAttr('data-is-click').removeClass('is-right-arrow is-left-arrow is-down-arrow opens-right opens-left opens-inner');\n        $(document.body).off('.zf.dropdownmenu');\n        Foundation.Nest.Burn(this.$element, 'dropdown');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return DropdownMenu;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  DropdownMenu.defaults = {\n    /**\n     * Disallows hover events from opening submenus\n     * @option\n     * @example false\n     */\n    disableHover: false,\n    /**\n     * Allow a submenu to automatically close on a mouseleave event, if not clicked open.\n     * @option\n     * @example true\n     */\n    autoclose: true,\n    /**\n     * Amount of time to delay opening a submenu on hover event.\n     * @option\n     * @example 50\n     */\n    hoverDelay: 50,\n    /**\n     * Allow a submenu to open/remain open on parent click event. Allows cursor to move away from menu.\n     * @option\n     * @example true\n     */\n    clickOpen: false,\n    /**\n     * Amount of time to delay closing a submenu on a mouseleave event.\n     * @option\n     * @example 500\n     */\n\n    closingTime: 500,\n    /**\n     * Position of the menu relative to what direction the submenus should open. Handled by JS.\n     * @option\n     * @example 'left'\n     */\n    alignment: 'left',\n    /**\n     * Allow clicks on the body to close any open submenus.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n    /**\n     * Class applied to vertical oriented menus, Foundation default is `vertical`. Update this if using your own class.\n     * @option\n     * @example 'vertical'\n     */\n    verticalClass: 'vertical',\n    /**\n     * Class applied to right-side oriented menus, Foundation default is `align-right`. Update this if using your own class.\n     * @option\n     * @example 'align-right'\n     */\n    rightClass: 'align-right',\n    /**\n     * Boolean to force overide the clicking of links to perform default action, on second touch event for mobile.\n     * @option\n     * @example false\n     */\n    forceFollow: true\n  };\n\n  // Window exports\n  Foundation.plugin(DropdownMenu, 'DropdownMenu');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Equalizer module.\n   * @module foundation.equalizer\n   */\n\n  var Equalizer = function () {\n    /**\n     * Creates a new instance of Equalizer.\n     * @class\n     * @fires Equalizer#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Equalizer(element, options) {\n      _classCallCheck(this, Equalizer);\n\n      this.$element = element;\n      this.options = $.extend({}, Equalizer.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Equalizer');\n    }\n\n    /**\n     * Initializes the Equalizer plugin and calls functions to get equalizer functioning on load.\n     * @private\n     */\n\n\n    _createClass(Equalizer, [{\n      key: '_init',\n      value: function _init() {\n        var eqId = this.$element.attr('data-equalizer') || '';\n        var $watched = this.$element.find('[data-equalizer-watch=\"' + eqId + '\"]');\n\n        this.$watched = $watched.length ? $watched : this.$element.find('[data-equalizer-watch]');\n        this.$element.attr('data-resize', eqId || Foundation.GetYoDigits(6, 'eq'));\n\n        this.hasNested = this.$element.find('[data-equalizer]').length > 0;\n        this.isNested = this.$element.parentsUntil(document.body, '[data-equalizer]').length > 0;\n        this.isOn = false;\n        this._bindHandler = {\n          onResizeMeBound: this._onResizeMe.bind(this),\n          onPostEqualizedBound: this._onPostEqualized.bind(this)\n        };\n\n        var imgs = this.$element.find('img');\n        var tooSmall;\n        if (this.options.equalizeOn) {\n          tooSmall = this._checkMQ();\n          $(window).on('changed.zf.mediaquery', this._checkMQ.bind(this));\n        } else {\n          this._events();\n        }\n        if (tooSmall !== undefined && tooSmall === false || tooSmall === undefined) {\n          if (imgs.length) {\n            Foundation.onImagesLoaded(imgs, this._reflow.bind(this));\n          } else {\n            this._reflow();\n          }\n        }\n      }\n\n      /**\n       * Removes event listeners if the breakpoint is too small.\n       * @private\n       */\n\n    }, {\n      key: '_pauseEvents',\n      value: function _pauseEvents() {\n        this.isOn = false;\n        this.$element.off({\n          '.zf.equalizer': this._bindHandler.onPostEqualizedBound,\n          'resizeme.zf.trigger': this._bindHandler.onResizeMeBound\n        });\n      }\n\n      /**\n       * function to handle $elements resizeme.zf.trigger, with bound this on _bindHandler.onResizeMeBound\n       * @private\n       */\n\n    }, {\n      key: '_onResizeMe',\n      value: function _onResizeMe(e) {\n        this._reflow();\n      }\n\n      /**\n       * function to handle $elements postequalized.zf.equalizer, with bound this on _bindHandler.onPostEqualizedBound\n       * @private\n       */\n\n    }, {\n      key: '_onPostEqualized',\n      value: function _onPostEqualized(e) {\n        if (e.target !== this.$element[0]) {\n          this._reflow();\n        }\n      }\n\n      /**\n       * Initializes events for Equalizer.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        this._pauseEvents();\n        if (this.hasNested) {\n          this.$element.on('postequalized.zf.equalizer', this._bindHandler.onPostEqualizedBound);\n        } else {\n          this.$element.on('resizeme.zf.trigger', this._bindHandler.onResizeMeBound);\n        }\n        this.isOn = true;\n      }\n\n      /**\n       * Checks the current breakpoint to the minimum required size.\n       * @private\n       */\n\n    }, {\n      key: '_checkMQ',\n      value: function _checkMQ() {\n        var tooSmall = !Foundation.MediaQuery.atLeast(this.options.equalizeOn);\n        if (tooSmall) {\n          if (this.isOn) {\n            this._pauseEvents();\n            this.$watched.css('height', 'auto');\n          }\n        } else {\n          if (!this.isOn) {\n            this._events();\n          }\n        }\n        return tooSmall;\n      }\n\n      /**\n       * A noop version for the plugin\n       * @private\n       */\n\n    }, {\n      key: '_killswitch',\n      value: function _killswitch() {\n        return;\n      }\n\n      /**\n       * Calls necessary functions to update Equalizer upon DOM change\n       * @private\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        if (!this.options.equalizeOnStack) {\n          if (this._isStacked()) {\n            this.$watched.css('height', 'auto');\n            return false;\n          }\n        }\n        if (this.options.equalizeByRow) {\n          this.getHeightsByRow(this.applyHeightByRow.bind(this));\n        } else {\n          this.getHeights(this.applyHeight.bind(this));\n        }\n      }\n\n      /**\n       * Manually determines if the first 2 elements are *NOT* stacked.\n       * @private\n       */\n\n    }, {\n      key: '_isStacked',\n      value: function _isStacked() {\n        return this.$watched[0].getBoundingClientRect().top !== this.$watched[1].getBoundingClientRect().top;\n      }\n\n      /**\n       * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\n       * @param {Function} cb - A non-optional callback to return the heights array to.\n       * @returns {Array} heights - An array of heights of children within Equalizer container\n       */\n\n    }, {\n      key: 'getHeights',\n      value: function getHeights(cb) {\n        var heights = [];\n        for (var i = 0, len = this.$watched.length; i < len; i++) {\n          this.$watched[i].style.height = 'auto';\n          heights.push(this.$watched[i].offsetHeight);\n        }\n        cb(heights);\n      }\n\n      /**\n       * Finds the outer heights of children contained within an Equalizer parent and returns them in an array\n       * @param {Function} cb - A non-optional callback to return the heights array to.\n       * @returns {Array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\n       */\n\n    }, {\n      key: 'getHeightsByRow',\n      value: function getHeightsByRow(cb) {\n        var lastElTopOffset = this.$watched.length ? this.$watched.first().offset().top : 0,\n            groups = [],\n            group = 0;\n        //group by Row\n        groups[group] = [];\n        for (var i = 0, len = this.$watched.length; i < len; i++) {\n          this.$watched[i].style.height = 'auto';\n          //maybe could use this.$watched[i].offsetTop\n          var elOffsetTop = $(this.$watched[i]).offset().top;\n          if (elOffsetTop != lastElTopOffset) {\n            group++;\n            groups[group] = [];\n            lastElTopOffset = elOffsetTop;\n          }\n          groups[group].push([this.$watched[i], this.$watched[i].offsetHeight]);\n        }\n\n        for (var j = 0, ln = groups.length; j < ln; j++) {\n          var heights = $(groups[j]).map(function () {\n            return this[1];\n          }).get();\n          var max = Math.max.apply(null, heights);\n          groups[j].push(max);\n        }\n        cb(groups);\n      }\n\n      /**\n       * Changes the CSS height property of each child in an Equalizer parent to match the tallest\n       * @param {array} heights - An array of heights of children within Equalizer container\n       * @fires Equalizer#preequalized\n       * @fires Equalizer#postequalized\n       */\n\n    }, {\n      key: 'applyHeight',\n      value: function applyHeight(heights) {\n        var max = Math.max.apply(null, heights);\n        /**\n         * Fires before the heights are applied\n         * @event Equalizer#preequalized\n         */\n        this.$element.trigger('preequalized.zf.equalizer');\n\n        this.$watched.css('height', max);\n\n        /**\n         * Fires when the heights have been applied\n         * @event Equalizer#postequalized\n         */\n        this.$element.trigger('postequalized.zf.equalizer');\n      }\n\n      /**\n       * Changes the CSS height property of each child in an Equalizer parent to match the tallest by row\n       * @param {array} groups - An array of heights of children within Equalizer container grouped by row with element,height and max as last child\n       * @fires Equalizer#preequalized\n       * @fires Equalizer#preequalizedRow\n       * @fires Equalizer#postequalizedRow\n       * @fires Equalizer#postequalized\n       */\n\n    }, {\n      key: 'applyHeightByRow',\n      value: function applyHeightByRow(groups) {\n        /**\n         * Fires before the heights are applied\n         */\n        this.$element.trigger('preequalized.zf.equalizer');\n        for (var i = 0, len = groups.length; i < len; i++) {\n          var groupsILength = groups[i].length,\n              max = groups[i][groupsILength - 1];\n          if (groupsILength <= 2) {\n            $(groups[i][0][0]).css({ 'height': 'auto' });\n            continue;\n          }\n          /**\n            * Fires before the heights per row are applied\n            * @event Equalizer#preequalizedRow\n            */\n          this.$element.trigger('preequalizedrow.zf.equalizer');\n          for (var j = 0, lenJ = groupsILength - 1; j < lenJ; j++) {\n            $(groups[i][j][0]).css({ 'height': max });\n          }\n          /**\n            * Fires when the heights per row have been applied\n            * @event Equalizer#postequalizedRow\n            */\n          this.$element.trigger('postequalizedrow.zf.equalizer');\n        }\n        /**\n         * Fires when the heights have been applied\n         */\n        this.$element.trigger('postequalized.zf.equalizer');\n      }\n\n      /**\n       * Destroys an instance of Equalizer.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this._pauseEvents();\n        this.$watched.css('height', 'auto');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Equalizer;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Equalizer.defaults = {\n    /**\n     * Enable height equalization when stacked on smaller screens.\n     * @option\n     * @example true\n     */\n    equalizeOnStack: true,\n    /**\n     * Enable height equalization row by row.\n     * @option\n     * @example false\n     */\n    equalizeByRow: false,\n    /**\n     * String representing the minimum breakpoint size the plugin should equalize heights on.\n     * @option\n     * @example 'medium'\n     */\n    equalizeOn: ''\n  };\n\n  // Window exports\n  Foundation.plugin(Equalizer, 'Equalizer');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Interchange module.\n   * @module foundation.interchange\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.timerAndImageLoader\n   */\n\n  var Interchange = function () {\n    /**\n     * Creates a new instance of Interchange.\n     * @class\n     * @fires Interchange#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Interchange(element, options) {\n      _classCallCheck(this, Interchange);\n\n      this.$element = element;\n      this.options = $.extend({}, Interchange.defaults, options);\n      this.rules = [];\n      this.currentPath = '';\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'Interchange');\n    }\n\n    /**\n     * Initializes the Interchange plugin and calls functions to get interchange functioning on load.\n     * @function\n     * @private\n     */\n\n\n    _createClass(Interchange, [{\n      key: '_init',\n      value: function _init() {\n        this._addBreakpoints();\n        this._generateRules();\n        this._reflow();\n      }\n\n      /**\n       * Initializes events for Interchange.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        $(window).on('resize.zf.interchange', Foundation.util.throttle(this._reflow.bind(this), 50));\n      }\n\n      /**\n       * Calls necessary functions to update Interchange upon DOM change\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_reflow',\n      value: function _reflow() {\n        var match;\n\n        // Iterate through each rule, but only save the last match\n        for (var i in this.rules) {\n          if (this.rules.hasOwnProperty(i)) {\n            var rule = this.rules[i];\n\n            if (window.matchMedia(rule.query).matches) {\n              match = rule;\n            }\n          }\n        }\n\n        if (match) {\n          this.replace(match.path);\n        }\n      }\n\n      /**\n       * Gets the Foundation breakpoints and adds them to the Interchange.SPECIAL_QUERIES object.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_addBreakpoints',\n      value: function _addBreakpoints() {\n        for (var i in Foundation.MediaQuery.queries) {\n          if (Foundation.MediaQuery.queries.hasOwnProperty(i)) {\n            var query = Foundation.MediaQuery.queries[i];\n            Interchange.SPECIAL_QUERIES[query.name] = query.value;\n          }\n        }\n      }\n\n      /**\n       * Checks the Interchange element for the provided media query + content pairings\n       * @function\n       * @private\n       * @param {Object} element - jQuery object that is an Interchange instance\n       * @returns {Array} scenarios - Array of objects that have 'mq' and 'path' keys with corresponding keys\n       */\n\n    }, {\n      key: '_generateRules',\n      value: function _generateRules(element) {\n        var rulesList = [];\n        var rules;\n\n        if (this.options.rules) {\n          rules = this.options.rules;\n        } else {\n          rules = this.$element.data('interchange').match(/\\[.*?\\]/g);\n        }\n\n        for (var i in rules) {\n          if (rules.hasOwnProperty(i)) {\n            var rule = rules[i].slice(1, -1).split(', ');\n            var path = rule.slice(0, -1).join('');\n            var query = rule[rule.length - 1];\n\n            if (Interchange.SPECIAL_QUERIES[query]) {\n              query = Interchange.SPECIAL_QUERIES[query];\n            }\n\n            rulesList.push({\n              path: path,\n              query: query\n            });\n          }\n        }\n\n        this.rules = rulesList;\n      }\n\n      /**\n       * Update the `src` property of an image, or change the HTML of a container, to the specified path.\n       * @function\n       * @param {String} path - Path to the image or HTML partial.\n       * @fires Interchange#replaced\n       */\n\n    }, {\n      key: 'replace',\n      value: function replace(path) {\n        if (this.currentPath === path) return;\n\n        var _this = this,\n            trigger = 'replaced.zf.interchange';\n\n        // Replacing images\n        if (this.$element[0].nodeName === 'IMG') {\n          this.$element.attr('src', path).load(function () {\n            _this.currentPath = path;\n          }).trigger(trigger);\n        }\n        // Replacing background images\n        else if (path.match(/\\.(gif|jpg|jpeg|png|svg|tiff)([?#].*)?/i)) {\n            this.$element.css({ 'background-image': 'url(' + path + ')' }).trigger(trigger);\n          }\n          // Replacing HTML\n          else {\n              $.get(path, function (response) {\n                _this.$element.html(response).trigger(trigger);\n                $(response).foundation();\n                _this.currentPath = path;\n              });\n            }\n\n        /**\n         * Fires when content in an Interchange element is done being loaded.\n         * @event Interchange#replaced\n         */\n        // this.$element.trigger('replaced.zf.interchange');\n      }\n\n      /**\n       * Destroys an instance of interchange.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        //TODO this.\n      }\n    }]);\n\n    return Interchange;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Interchange.defaults = {\n    /**\n     * Rules to be applied to Interchange elements. Set with the `data-interchange` array notation.\n     * @option\n     */\n    rules: null\n  };\n\n  Interchange.SPECIAL_QUERIES = {\n    'landscape': 'screen and (orientation: landscape)',\n    'portrait': 'screen and (orientation: portrait)',\n    'retina': 'only screen and (-webkit-min-device-pixel-ratio: 2), only screen and (min--moz-device-pixel-ratio: 2), only screen and (-o-min-device-pixel-ratio: 2/1), only screen and (min-device-pixel-ratio: 2), only screen and (min-resolution: 192dpi), only screen and (min-resolution: 2dppx)'\n  };\n\n  // Window exports\n  Foundation.plugin(Interchange, 'Interchange');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Magellan module.\n   * @module foundation.magellan\n   */\n\n  var Magellan = function () {\n    /**\n     * Creates a new instance of Magellan.\n     * @class\n     * @fires Magellan#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Magellan(element, options) {\n      _classCallCheck(this, Magellan);\n\n      this.$element = element;\n      this.options = $.extend({}, Magellan.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Magellan');\n    }\n\n    /**\n     * Initializes the Magellan plugin and calls functions to get equalizer functioning on load.\n     * @private\n     */\n\n\n    _createClass(Magellan, [{\n      key: '_init',\n      value: function _init() {\n        var id = this.$element[0].id || Foundation.GetYoDigits(6, 'magellan');\n        var _this = this;\n        this.$targets = $('[data-magellan-target]');\n        this.$links = this.$element.find('a');\n        this.$element.attr({\n          'data-resize': id,\n          'data-scroll': id,\n          'id': id\n        });\n        this.$active = $();\n        this.scrollPos = parseInt(window.pageYOffset, 10);\n\n        this._events();\n      }\n\n      /**\n       * Calculates an array of pixel values that are the demarcation lines between locations on the page.\n       * Can be invoked if new elements are added or the size of a location changes.\n       * @function\n       */\n\n    }, {\n      key: 'calcPoints',\n      value: function calcPoints() {\n        var _this = this,\n            body = document.body,\n            html = document.documentElement;\n\n        this.points = [];\n        this.winHeight = Math.round(Math.max(window.innerHeight, html.clientHeight));\n        this.docHeight = Math.round(Math.max(body.scrollHeight, body.offsetHeight, html.clientHeight, html.scrollHeight, html.offsetHeight));\n\n        this.$targets.each(function () {\n          var $tar = $(this),\n              pt = Math.round($tar.offset().top - _this.options.threshold);\n          $tar.targetPoint = pt;\n          _this.points.push(pt);\n        });\n      }\n\n      /**\n       * Initializes events for Magellan.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this,\n            $body = $('html, body'),\n            opts = {\n          duration: _this.options.animationDuration,\n          easing: _this.options.animationEasing\n        };\n        $(window).one('load', function () {\n          if (_this.options.deepLinking) {\n            if (location.hash) {\n              _this.scrollToLoc(location.hash);\n            }\n          }\n          _this.calcPoints();\n          _this._updateActive();\n        });\n\n        this.$element.on({\n          'resizeme.zf.trigger': this.reflow.bind(this),\n          'scrollme.zf.trigger': this._updateActive.bind(this)\n        }).on('click.zf.magellan', 'a[href^=\"#\"]', function (e) {\n          e.preventDefault();\n          var arrival = this.getAttribute('href');\n          _this.scrollToLoc(arrival);\n        });\n      }\n\n      /**\n       * Function to scroll to a given location on the page.\n       * @param {String} loc - a properly formatted jQuery id selector. Example: '#foo'\n       * @function\n       */\n\n    }, {\n      key: 'scrollToLoc',\n      value: function scrollToLoc(loc) {\n        var scrollPos = Math.round($(loc).offset().top - this.options.threshold / 2 - this.options.barOffset);\n\n        $('html, body').stop(true).animate({ scrollTop: scrollPos }, this.options.animationDuration, this.options.animationEasing);\n      }\n\n      /**\n       * Calls necessary functions to update Magellan upon DOM change\n       * @function\n       */\n\n    }, {\n      key: 'reflow',\n      value: function reflow() {\n        this.calcPoints();\n        this._updateActive();\n      }\n\n      /**\n       * Updates the visibility of an active location link, and updates the url hash for the page, if deepLinking enabled.\n       * @private\n       * @function\n       * @fires Magellan#update\n       */\n\n    }, {\n      key: '_updateActive',\n      value: function _updateActive() /*evt, elem, scrollPos*/{\n        var winPos = /*scrollPos ||*/parseInt(window.pageYOffset, 10),\n            curIdx;\n\n        if (winPos + this.winHeight === this.docHeight) {\n          curIdx = this.points.length - 1;\n        } else if (winPos < this.points[0]) {\n          curIdx = 0;\n        } else {\n          var isDown = this.scrollPos < winPos,\n              _this = this,\n              curVisible = this.points.filter(function (p, i) {\n            return isDown ? p - _this.options.barOffset <= winPos : p - _this.options.barOffset - _this.options.threshold <= winPos;\n          });\n          curIdx = curVisible.length ? curVisible.length - 1 : 0;\n        }\n\n        this.$active.removeClass(this.options.activeClass);\n        this.$active = this.$links.eq(curIdx).addClass(this.options.activeClass);\n\n        if (this.options.deepLinking) {\n          var hash = this.$active[0].getAttribute('href');\n          if (window.history.pushState) {\n            window.history.pushState(null, null, hash);\n          } else {\n            window.location.hash = hash;\n          }\n        }\n\n        this.scrollPos = winPos;\n        /**\n         * Fires when magellan is finished updating to the new active element.\n         * @event Magellan#update\n         */\n        this.$element.trigger('update.zf.magellan', [this.$active]);\n      }\n\n      /**\n       * Destroys an instance of Magellan and resets the url of the window.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.trigger .zf.magellan').find('.' + this.options.activeClass).removeClass(this.options.activeClass);\n\n        if (this.options.deepLinking) {\n          var hash = this.$active[0].getAttribute('href');\n          window.location.hash.replace(hash, '');\n        }\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Magellan;\n  }();\n\n  /**\n   * Default settings for plugin\n   */\n\n\n  Magellan.defaults = {\n    /**\n     * Amount of time, in ms, the animated scrolling should take between locations.\n     * @option\n     * @example 500\n     */\n    animationDuration: 500,\n    /**\n     * Animation style to use when scrolling between locations.\n     * @option\n     * @example 'ease-in-out'\n     */\n    animationEasing: 'linear',\n    /**\n     * Number of pixels to use as a marker for location changes.\n     * @option\n     * @example 50\n     */\n    threshold: 50,\n    /**\n     * Class applied to the active locations link on the magellan container.\n     * @option\n     * @example 'active'\n     */\n    activeClass: 'active',\n    /**\n     * Allows the script to manipulate the url of the current page, and if supported, alter the history.\n     * @option\n     * @example true\n     */\n    deepLinking: false,\n    /**\n     * Number of pixels to offset the scroll of the page on item click if using a sticky nav bar.\n     * @option\n     * @example 25\n     */\n    barOffset: 0\n  };\n\n  // Window exports\n  Foundation.plugin(Magellan, 'Magellan');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * OffCanvas module.\n   * @module foundation.offcanvas\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.triggers\n   * @requires foundation.util.motion\n   */\n\n  var OffCanvas = function () {\n    /**\n     * Creates a new instance of an off-canvas wrapper.\n     * @class\n     * @fires OffCanvas#init\n     * @param {Object} element - jQuery object to initialize.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function OffCanvas(element, options) {\n      _classCallCheck(this, OffCanvas);\n\n      this.$element = element;\n      this.options = $.extend({}, OffCanvas.defaults, this.$element.data(), options);\n      this.$lastTrigger = $();\n      this.$triggers = $();\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'OffCanvas');\n    }\n\n    /**\n     * Initializes the off-canvas wrapper by adding the exit overlay (if needed).\n     * @function\n     * @private\n     */\n\n\n    _createClass(OffCanvas, [{\n      key: '_init',\n      value: function _init() {\n        var id = this.$element.attr('id');\n\n        this.$element.attr('aria-hidden', 'true');\n\n        // Find triggers that affect this element and add aria-expanded to them\n        this.$triggers = $(document).find('[data-open=\"' + id + '\"], [data-close=\"' + id + '\"], [data-toggle=\"' + id + '\"]').attr('aria-expanded', 'false').attr('aria-controls', id);\n\n        // Add a close trigger over the body if necessary\n        if (this.options.closeOnClick) {\n          if ($('.js-off-canvas-exit').length) {\n            this.$exiter = $('.js-off-canvas-exit');\n          } else {\n            var exiter = document.createElement('div');\n            exiter.setAttribute('class', 'js-off-canvas-exit');\n            $('[data-off-canvas-content]').append(exiter);\n\n            this.$exiter = $(exiter);\n          }\n        }\n\n        this.options.isRevealed = this.options.isRevealed || new RegExp(this.options.revealClass, 'g').test(this.$element[0].className);\n\n        if (this.options.isRevealed) {\n          this.options.revealOn = this.options.revealOn || this.$element[0].className.match(/(reveal-for-medium|reveal-for-large)/g)[0].split('-')[2];\n          this._setMQChecker();\n        }\n        if (!this.options.transitionTime) {\n          this.options.transitionTime = parseFloat(window.getComputedStyle($('[data-off-canvas-wrapper]')[0]).transitionDuration) * 1000;\n        }\n      }\n\n      /**\n       * Adds event handlers to the off-canvas wrapper and the exit overlay.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this.$element.off('.zf.trigger .zf.offcanvas').on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': this.close.bind(this),\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'keydown.zf.offcanvas': this._handleKeyboard.bind(this)\n        });\n\n        if (this.options.closeOnClick && this.$exiter.length) {\n          this.$exiter.on({ 'click.zf.offcanvas': this.close.bind(this) });\n        }\n      }\n\n      /**\n       * Applies event listener for elements that will reveal at certain breakpoints.\n       * @private\n       */\n\n    }, {\n      key: '_setMQChecker',\n      value: function _setMQChecker() {\n        var _this = this;\n\n        $(window).on('changed.zf.mediaquery', function () {\n          if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n            _this.reveal(true);\n          } else {\n            _this.reveal(false);\n          }\n        }).one('load.zf.offcanvas', function () {\n          if (Foundation.MediaQuery.atLeast(_this.options.revealOn)) {\n            _this.reveal(true);\n          }\n        });\n      }\n\n      /**\n       * Handles the revealing/hiding the off-canvas at breakpoints, not the same as open.\n       * @param {Boolean} isRevealed - true if element should be revealed.\n       * @function\n       */\n\n    }, {\n      key: 'reveal',\n      value: function reveal(isRevealed) {\n        var $closer = this.$element.find('[data-close]');\n        if (isRevealed) {\n          this.close();\n          this.isRevealed = true;\n          // if (!this.options.forceTop) {\n          //   var scrollPos = parseInt(window.pageYOffset);\n          //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n          // }\n          // if (this.options.isSticky) { this._stick(); }\n          this.$element.off('open.zf.trigger toggle.zf.trigger');\n          if ($closer.length) {\n            $closer.hide();\n          }\n        } else {\n          this.isRevealed = false;\n          // if (this.options.isSticky || !this.options.forceTop) {\n          //   this.$element[0].style.transform = '';\n          //   $(window).off('scroll.zf.offcanvas');\n          // }\n          this.$element.on({\n            'open.zf.trigger': this.open.bind(this),\n            'toggle.zf.trigger': this.toggle.bind(this)\n          });\n          if ($closer.length) {\n            $closer.show();\n          }\n        }\n      }\n\n      /**\n       * Opens the off-canvas menu.\n       * @function\n       * @param {Object} event - Event object passed from listener.\n       * @param {jQuery} trigger - element that triggered the off-canvas to open.\n       * @fires OffCanvas#opened\n       */\n\n    }, {\n      key: 'open',\n      value: function open(event, trigger) {\n        if (this.$element.hasClass('is-open') || this.isRevealed) {\n          return;\n        }\n        var _this = this,\n            $body = $(document.body);\n\n        if (this.options.forceTop) {\n          $('body').scrollTop(0);\n        }\n        // window.pageYOffset = 0;\n\n        // if (!this.options.forceTop) {\n        //   var scrollPos = parseInt(window.pageYOffset);\n        //   this.$element[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n        //   if (this.$exiter.length) {\n        //     this.$exiter[0].style.transform = 'translate(0,' + scrollPos + 'px)';\n        //   }\n        // }\n        /**\n         * Fires when the off-canvas menu opens.\n         * @event OffCanvas#opened\n         */\n        Foundation.Move(this.options.transitionTime, this.$element, function () {\n          $('[data-off-canvas-wrapper]').addClass('is-off-canvas-open is-open-' + _this.options.position);\n\n          _this.$element.addClass('is-open');\n\n          // if (_this.options.isSticky) {\n          //   _this._stick();\n          // }\n        });\n\n        this.$triggers.attr('aria-expanded', 'true');\n        this.$element.attr('aria-hidden', 'false').trigger('opened.zf.offcanvas');\n\n        if (this.options.closeOnClick) {\n          this.$exiter.addClass('is-visible');\n        }\n\n        if (trigger) {\n          this.$lastTrigger = trigger;\n        }\n\n        if (this.options.autoFocus) {\n          this.$element.one(Foundation.transitionend(this.$element), function () {\n            _this.$element.find('a, button').eq(0).focus();\n          });\n        }\n\n        if (this.options.trapFocus) {\n          $('[data-off-canvas-content]').attr('tabindex', '-1');\n          this._trapFocus();\n        }\n      }\n\n      /**\n       * Traps focus within the offcanvas on open.\n       * @private\n       */\n\n    }, {\n      key: '_trapFocus',\n      value: function _trapFocus() {\n        var focusable = Foundation.Keyboard.findFocusable(this.$element),\n            first = focusable.eq(0),\n            last = focusable.eq(-1);\n\n        focusable.off('.zf.offcanvas').on('keydown.zf.offcanvas', function (e) {\n          if (e.which === 9 || e.keycode === 9) {\n            if (e.target === last[0] && !e.shiftKey) {\n              e.preventDefault();\n              first.focus();\n            }\n            if (e.target === first[0] && e.shiftKey) {\n              e.preventDefault();\n              last.focus();\n            }\n          }\n        });\n      }\n\n      /**\n       * Allows the offcanvas to appear sticky utilizing translate properties.\n       * @private\n       */\n      // OffCanvas.prototype._stick = function() {\n      //   var elStyle = this.$element[0].style;\n      //\n      //   if (this.options.closeOnClick) {\n      //     var exitStyle = this.$exiter[0].style;\n      //   }\n      //\n      //   $(window).on('scroll.zf.offcanvas', function(e) {\n      //     console.log(e);\n      //     var pageY = window.pageYOffset;\n      //     elStyle.transform = 'translate(0,' + pageY + 'px)';\n      //     if (exitStyle !== undefined) { exitStyle.transform = 'translate(0,' + pageY + 'px)'; }\n      //   });\n      //   // this.$element.trigger('stuck.zf.offcanvas');\n      // };\n      /**\n       * Closes the off-canvas menu.\n       * @function\n       * @param {Function} cb - optional cb to fire after closure.\n       * @fires OffCanvas#closed\n       */\n\n    }, {\n      key: 'close',\n      value: function close(cb) {\n        if (!this.$element.hasClass('is-open') || this.isRevealed) {\n          return;\n        }\n\n        var _this = this;\n\n        //  Foundation.Move(this.options.transitionTime, this.$element, function() {\n        $('[data-off-canvas-wrapper]').removeClass('is-off-canvas-open is-open-' + _this.options.position);\n        _this.$element.removeClass('is-open');\n        // Foundation._reflow();\n        // });\n        this.$element.attr('aria-hidden', 'true')\n        /**\n         * Fires when the off-canvas menu opens.\n         * @event OffCanvas#closed\n         */\n        .trigger('closed.zf.offcanvas');\n        // if (_this.options.isSticky || !_this.options.forceTop) {\n        //   setTimeout(function() {\n        //     _this.$element[0].style.transform = '';\n        //     $(window).off('scroll.zf.offcanvas');\n        //   }, this.options.transitionTime);\n        // }\n        if (this.options.closeOnClick) {\n          this.$exiter.removeClass('is-visible');\n        }\n\n        this.$triggers.attr('aria-expanded', 'false');\n        if (this.options.trapFocus) {\n          $('[data-off-canvas-content]').removeAttr('tabindex');\n        }\n      }\n\n      /**\n       * Toggles the off-canvas menu open or closed.\n       * @function\n       * @param {Object} event - Event object passed from listener.\n       * @param {jQuery} trigger - element that triggered the off-canvas to open.\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle(event, trigger) {\n        if (this.$element.hasClass('is-open')) {\n          this.close(event, trigger);\n        } else {\n          this.open(event, trigger);\n        }\n      }\n\n      /**\n       * Handles keyboard input when detected. When the escape key is pressed, the off-canvas menu closes, and focus is restored to the element that opened the menu.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_handleKeyboard',\n      value: function _handleKeyboard(event) {\n        if (event.which !== 27) return;\n\n        event.stopPropagation();\n        event.preventDefault();\n        this.close();\n        this.$lastTrigger.focus();\n      }\n\n      /**\n       * Destroys the offcanvas plugin.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.close();\n        this.$element.off('.zf.trigger .zf.offcanvas');\n        this.$exiter.off('.zf.offcanvas');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return OffCanvas;\n  }();\n\n  OffCanvas.defaults = {\n    /**\n     * Allow the user to click outside of the menu to close it.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n\n    /**\n     * Amount of time in ms the open and close transition requires. If none selected, pulls from body style.\n     * @option\n     * @example 500\n     */\n    transitionTime: 0,\n\n    /**\n     * Direction the offcanvas opens from. Determines class applied to body.\n     * @option\n     * @example left\n     */\n    position: 'left',\n\n    /**\n     * Force the page to scroll to top on open.\n     * @option\n     * @example true\n     */\n    forceTop: true,\n\n    /**\n     * Allow the offcanvas to remain open for certain breakpoints.\n     * @option\n     * @example false\n     */\n    isRevealed: false,\n\n    /**\n     * Breakpoint at which to reveal. JS will use a RegExp to target standard classes, if changing classnames, pass your class with the `revealClass` option.\n     * @option\n     * @example reveal-for-large\n     */\n    revealOn: null,\n\n    /**\n     * Force focus to the offcanvas on open. If true, will focus the opening trigger on close.\n     * @option\n     * @example true\n     */\n    autoFocus: true,\n\n    /**\n     * Class used to force an offcanvas to remain open. Foundation defaults for this are `reveal-for-large` & `reveal-for-medium`.\n     * @option\n     * TODO improve the regex testing for this.\n     * @example reveal-for-large\n     */\n    revealClass: 'reveal-for-',\n\n    /**\n     * Triggers optional focus trapping when opening an offcanvas. Sets tabindex of [data-off-canvas-content] to -1 for accessibility purposes.\n     * @option\n     * @example true\n     */\n    trapFocus: false\n  };\n\n  // Window exports\n  Foundation.plugin(OffCanvas, 'OffCanvas');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Orbit module.\n   * @module foundation.orbit\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.motion\n   * @requires foundation.util.timerAndImageLoader\n   * @requires foundation.util.touch\n   */\n\n  var Orbit = function () {\n    /**\n    * Creates a new instance of an orbit carousel.\n    * @class\n    * @param {jQuery} element - jQuery object to make into an Orbit Carousel.\n    * @param {Object} options - Overrides to the default plugin settings.\n    */\n\n    function Orbit(element, options) {\n      _classCallCheck(this, Orbit);\n\n      this.$element = element;\n      this.options = $.extend({}, Orbit.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Orbit');\n      Foundation.Keyboard.register('Orbit', {\n        'ltr': {\n          'ARROW_RIGHT': 'next',\n          'ARROW_LEFT': 'previous'\n        },\n        'rtl': {\n          'ARROW_LEFT': 'next',\n          'ARROW_RIGHT': 'previous'\n        }\n      });\n    }\n\n    /**\n    * Initializes the plugin by creating jQuery collections, setting attributes, and starting the animation.\n    * @function\n    * @private\n    */\n\n\n    _createClass(Orbit, [{\n      key: '_init',\n      value: function _init() {\n        this.$wrapper = this.$element.find('.' + this.options.containerClass);\n        this.$slides = this.$element.find('.' + this.options.slideClass);\n        var $images = this.$element.find('img'),\n            initActive = this.$slides.filter('.is-active');\n\n        if (!initActive.length) {\n          this.$slides.eq(0).addClass('is-active');\n        }\n\n        if (!this.options.useMUI) {\n          this.$slides.addClass('no-motionui');\n        }\n\n        if ($images.length) {\n          Foundation.onImagesLoaded($images, this._prepareForOrbit.bind(this));\n        } else {\n          this._prepareForOrbit(); //hehe\n        }\n\n        if (this.options.bullets) {\n          this._loadBullets();\n        }\n\n        this._events();\n\n        if (this.options.autoPlay && this.$slides.length > 1) {\n          this.geoSync();\n        }\n\n        if (this.options.accessible) {\n          // allow wrapper to be focusable to enable arrow navigation\n          this.$wrapper.attr('tabindex', 0);\n        }\n      }\n\n      /**\n      * Creates a jQuery collection of bullets, if they are being used.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_loadBullets',\n      value: function _loadBullets() {\n        this.$bullets = this.$element.find('.' + this.options.boxOfBullets).find('button');\n      }\n\n      /**\n      * Sets a `timer` object on the orbit, and starts the counter for the next slide.\n      * @function\n      */\n\n    }, {\n      key: 'geoSync',\n      value: function geoSync() {\n        var _this = this;\n        this.timer = new Foundation.Timer(this.$element, {\n          duration: this.options.timerDelay,\n          infinite: false\n        }, function () {\n          _this.changeSlide(true);\n        });\n        this.timer.start();\n      }\n\n      /**\n      * Sets wrapper and slide heights for the orbit.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_prepareForOrbit',\n      value: function _prepareForOrbit() {\n        var _this = this;\n        this._setWrapperHeight(function (max) {\n          _this._setSlideHeight(max);\n        });\n      }\n\n      /**\n      * Calulates the height of each slide in the collection, and uses the tallest one for the wrapper height.\n      * @function\n      * @private\n      * @param {Function} cb - a callback function to fire when complete.\n      */\n\n    }, {\n      key: '_setWrapperHeight',\n      value: function _setWrapperHeight(cb) {\n        //rewrite this to `for` loop\n        var max = 0,\n            temp,\n            counter = 0;\n\n        this.$slides.each(function () {\n          temp = this.getBoundingClientRect().height;\n          $(this).attr('data-slide', counter);\n\n          if (counter) {\n            //if not the first slide, set css position and display property\n            $(this).css({ 'position': 'relative', 'display': 'none' });\n          }\n          max = temp > max ? temp : max;\n          counter++;\n        });\n\n        if (counter === this.$slides.length) {\n          this.$wrapper.css({ 'height': max }); //only change the wrapper height property once.\n          cb(max); //fire callback with max height dimension.\n        }\n      }\n\n      /**\n      * Sets the max-height of each slide.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_setSlideHeight',\n      value: function _setSlideHeight(height) {\n        this.$slides.each(function () {\n          $(this).css('max-height', height);\n        });\n      }\n\n      /**\n      * Adds event listeners to basically everything within the element.\n      * @function\n      * @private\n      */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        //***************************************\n        //**Now using custom event - thanks to:**\n        //**      Yohai Ararat of Toronto      **\n        //***************************************\n        if (this.$slides.length > 1) {\n\n          if (this.options.swipe) {\n            this.$slides.off('swipeleft.zf.orbit swiperight.zf.orbit').on('swipeleft.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide(true);\n            }).on('swiperight.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide(false);\n            });\n          }\n          //***************************************\n\n          if (this.options.autoPlay) {\n            this.$slides.on('click.zf.orbit', function () {\n              _this.$element.data('clickedOn', _this.$element.data('clickedOn') ? false : true);\n              _this.timer[_this.$element.data('clickedOn') ? 'pause' : 'start']();\n            });\n\n            if (this.options.pauseOnHover) {\n              this.$element.on('mouseenter.zf.orbit', function () {\n                _this.timer.pause();\n              }).on('mouseleave.zf.orbit', function () {\n                if (!_this.$element.data('clickedOn')) {\n                  _this.timer.start();\n                }\n              });\n            }\n          }\n\n          if (this.options.navButtons) {\n            var $controls = this.$element.find('.' + this.options.nextClass + ', .' + this.options.prevClass);\n            $controls.attr('tabindex', 0)\n            //also need to handle enter/return and spacebar key presses\n            .on('click.zf.orbit touchend.zf.orbit', function (e) {\n              e.preventDefault();\n              _this.changeSlide($(this).hasClass(_this.options.nextClass));\n            });\n          }\n\n          if (this.options.bullets) {\n            this.$bullets.on('click.zf.orbit touchend.zf.orbit', function () {\n              if (/is-active/g.test(this.className)) {\n                return false;\n              } //if this is active, kick out of function.\n              var idx = $(this).data('slide'),\n                  ltr = idx > _this.$slides.filter('.is-active').data('slide'),\n                  $slide = _this.$slides.eq(idx);\n\n              _this.changeSlide(ltr, $slide, idx);\n            });\n          }\n\n          this.$wrapper.add(this.$bullets).on('keydown.zf.orbit', function (e) {\n            // handle keyboard event with keyboard util\n            Foundation.Keyboard.handleKey(e, 'Orbit', {\n              next: function () {\n                _this.changeSlide(true);\n              },\n              previous: function () {\n                _this.changeSlide(false);\n              },\n              handled: function () {\n                // if bullet is focused, make sure focus moves\n                if ($(e.target).is(_this.$bullets)) {\n                  _this.$bullets.filter('.is-active').focus();\n                }\n              }\n            });\n          });\n        }\n      }\n\n      /**\n      * Changes the current slide to a new one.\n      * @function\n      * @param {Boolean} isLTR - flag if the slide should move left to right.\n      * @param {jQuery} chosenSlide - the jQuery element of the slide to show next, if one is selected.\n      * @param {Number} idx - the index of the new slide in its collection, if one chosen.\n      * @fires Orbit#slidechange\n      */\n\n    }, {\n      key: 'changeSlide',\n      value: function changeSlide(isLTR, chosenSlide, idx) {\n        var $curSlide = this.$slides.filter('.is-active').eq(0);\n\n        if (/mui/g.test($curSlide[0].className)) {\n          return false;\n        } //if the slide is currently animating, kick out of the function\n\n        var $firstSlide = this.$slides.first(),\n            $lastSlide = this.$slides.last(),\n            dirIn = isLTR ? 'Right' : 'Left',\n            dirOut = isLTR ? 'Left' : 'Right',\n            _this = this,\n            $newSlide;\n\n        if (!chosenSlide) {\n          //most of the time, this will be auto played or clicked from the navButtons.\n          $newSlide = isLTR ? //if wrapping enabled, check to see if there is a `next` or `prev` sibling, if not, select the first or last slide to fill in. if wrapping not enabled, attempt to select `next` or `prev`, if there's nothing there, the function will kick out on next step. CRAZY NESTED TERNARIES!!!!!\n          this.options.infiniteWrap ? $curSlide.next('.' + this.options.slideClass).length ? $curSlide.next('.' + this.options.slideClass) : $firstSlide : $curSlide.next('.' + this.options.slideClass) : //pick next slide if moving left to right\n          this.options.infiniteWrap ? $curSlide.prev('.' + this.options.slideClass).length ? $curSlide.prev('.' + this.options.slideClass) : $lastSlide : $curSlide.prev('.' + this.options.slideClass); //pick prev slide if moving right to left\n        } else {\n            $newSlide = chosenSlide;\n          }\n\n        if ($newSlide.length) {\n          if (this.options.bullets) {\n            idx = idx || this.$slides.index($newSlide); //grab index to update bullets\n            this._updateBullets(idx);\n          }\n\n          if (this.options.useMUI) {\n            Foundation.Motion.animateIn($newSlide.addClass('is-active').css({ 'position': 'absolute', 'top': 0 }), this.options['animInFrom' + dirIn], function () {\n              $newSlide.css({ 'position': 'relative', 'display': 'block' }).attr('aria-live', 'polite');\n            });\n\n            Foundation.Motion.animateOut($curSlide.removeClass('is-active'), this.options['animOutTo' + dirOut], function () {\n              $curSlide.removeAttr('aria-live');\n              if (_this.options.autoPlay && !_this.timer.isPaused) {\n                _this.timer.restart();\n              }\n              //do stuff?\n            });\n          } else {\n              $curSlide.removeClass('is-active is-in').removeAttr('aria-live').hide();\n              $newSlide.addClass('is-active is-in').attr('aria-live', 'polite').show();\n              if (this.options.autoPlay && !this.timer.isPaused) {\n                this.timer.restart();\n              }\n            }\n          /**\n          * Triggers when the slide has finished animating in.\n          * @event Orbit#slidechange\n          */\n          this.$element.trigger('slidechange.zf.orbit', [$newSlide]);\n        }\n      }\n\n      /**\n      * Updates the active state of the bullets, if displayed.\n      * @function\n      * @private\n      * @param {Number} idx - the index of the current slide.\n      */\n\n    }, {\n      key: '_updateBullets',\n      value: function _updateBullets(idx) {\n        var $oldBullet = this.$element.find('.' + this.options.boxOfBullets).find('.is-active').removeClass('is-active').blur(),\n            span = $oldBullet.find('span:last').detach(),\n            $newBullet = this.$bullets.eq(idx).addClass('is-active').append(span);\n      }\n\n      /**\n      * Destroys the carousel and hides the element.\n      * @function\n      */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.orbit').find('*').off('.zf.orbit').end().hide();\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Orbit;\n  }();\n\n  Orbit.defaults = {\n    /**\n    * Tells the JS to look for and loadBullets.\n    * @option\n    * @example true\n    */\n    bullets: true,\n    /**\n    * Tells the JS to apply event listeners to nav buttons\n    * @option\n    * @example true\n    */\n    navButtons: true,\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-in-right'\n    */\n    animInFromRight: 'slide-in-right',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-out-right'\n    */\n    animOutToRight: 'slide-out-right',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-in-left'\n    *\n    */\n    animInFromLeft: 'slide-in-left',\n    /**\n    * motion-ui animation class to apply\n    * @option\n    * @example 'slide-out-left'\n    */\n    animOutToLeft: 'slide-out-left',\n    /**\n    * Allows Orbit to automatically animate on page load.\n    * @option\n    * @example true\n    */\n    autoPlay: true,\n    /**\n    * Amount of time, in ms, between slide transitions\n    * @option\n    * @example 5000\n    */\n    timerDelay: 5000,\n    /**\n    * Allows Orbit to infinitely loop through the slides\n    * @option\n    * @example true\n    */\n    infiniteWrap: true,\n    /**\n    * Allows the Orbit slides to bind to swipe events for mobile, requires an additional util library\n    * @option\n    * @example true\n    */\n    swipe: true,\n    /**\n    * Allows the timing function to pause animation on hover.\n    * @option\n    * @example true\n    */\n    pauseOnHover: true,\n    /**\n    * Allows Orbit to bind keyboard events to the slider, to animate frames with arrow keys\n    * @option\n    * @example true\n    */\n    accessible: true,\n    /**\n    * Class applied to the container of Orbit\n    * @option\n    * @example 'orbit-container'\n    */\n    containerClass: 'orbit-container',\n    /**\n    * Class applied to individual slides.\n    * @option\n    * @example 'orbit-slide'\n    */\n    slideClass: 'orbit-slide',\n    /**\n    * Class applied to the bullet container. You're welcome.\n    * @option\n    * @example 'orbit-bullets'\n    */\n    boxOfBullets: 'orbit-bullets',\n    /**\n    * Class applied to the `next` navigation button.\n    * @option\n    * @example 'orbit-next'\n    */\n    nextClass: 'orbit-next',\n    /**\n    * Class applied to the `previous` navigation button.\n    * @option\n    * @example 'orbit-previous'\n    */\n    prevClass: 'orbit-previous',\n    /**\n    * Boolean to flag the js to use motion ui classes or not. Default to true for backwards compatability.\n    * @option\n    * @example true\n    */\n    useMUI: true\n  };\n\n  // Window exports\n  Foundation.plugin(Orbit, 'Orbit');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * ResponsiveMenu module.\n   * @module foundation.responsiveMenu\n   * @requires foundation.util.triggers\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.accordionMenu\n   * @requires foundation.util.drilldown\n   * @requires foundation.util.dropdown-menu\n   */\n\n  var ResponsiveMenu = function () {\n    /**\n     * Creates a new instance of a responsive menu.\n     * @class\n     * @fires ResponsiveMenu#init\n     * @param {jQuery} element - jQuery object to make into a dropdown menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function ResponsiveMenu(element, options) {\n      _classCallCheck(this, ResponsiveMenu);\n\n      this.$element = $(element);\n      this.rules = this.$element.data('responsive-menu');\n      this.currentMq = null;\n      this.currentPlugin = null;\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveMenu');\n    }\n\n    /**\n     * Initializes the Menu by parsing the classes from the 'data-ResponsiveMenu' attribute on the element.\n     * @function\n     * @private\n     */\n\n\n    _createClass(ResponsiveMenu, [{\n      key: '_init',\n      value: function _init() {\n        // The first time an Interchange plugin is initialized, this.rules is converted from a string of \"classes\" to an object of rules\n        if (typeof this.rules === 'string') {\n          var rulesTree = {};\n\n          // Parse rules from \"classes\" pulled from data attribute\n          var rules = this.rules.split(' ');\n\n          // Iterate through every rule found\n          for (var i = 0; i < rules.length; i++) {\n            var rule = rules[i].split('-');\n            var ruleSize = rule.length > 1 ? rule[0] : 'small';\n            var rulePlugin = rule.length > 1 ? rule[1] : rule[0];\n\n            if (MenuPlugins[rulePlugin] !== null) {\n              rulesTree[ruleSize] = MenuPlugins[rulePlugin];\n            }\n          }\n\n          this.rules = rulesTree;\n        }\n\n        if (!$.isEmptyObject(this.rules)) {\n          this._checkMediaQueries();\n        }\n      }\n\n      /**\n       * Initializes events for the Menu.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        $(window).on('changed.zf.mediaquery', function () {\n          _this._checkMediaQueries();\n        });\n        // $(window).on('resize.zf.ResponsiveMenu', function() {\n        //   _this._checkMediaQueries();\n        // });\n      }\n\n      /**\n       * Checks the current screen width against available media queries. If the media query has changed, and the plugin needed has changed, the plugins will swap out.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_checkMediaQueries',\n      value: function _checkMediaQueries() {\n        var matchedMq,\n            _this = this;\n        // Iterate through each rule and find the last matching rule\n        $.each(this.rules, function (key) {\n          if (Foundation.MediaQuery.atLeast(key)) {\n            matchedMq = key;\n          }\n        });\n\n        // No match? No dice\n        if (!matchedMq) return;\n\n        // Plugin already initialized? We good\n        if (this.currentPlugin instanceof this.rules[matchedMq].plugin) return;\n\n        // Remove existing plugin-specific CSS classes\n        $.each(MenuPlugins, function (key, value) {\n          _this.$element.removeClass(value.cssClass);\n        });\n\n        // Add the CSS class for the new plugin\n        this.$element.addClass(this.rules[matchedMq].cssClass);\n\n        // Create an instance of the new plugin\n        if (this.currentPlugin) this.currentPlugin.destroy();\n        this.currentPlugin = new this.rules[matchedMq].plugin(this.$element, {});\n      }\n\n      /**\n       * Destroys the instance of the current plugin on this element, as well as the window resize handler that switches the plugins out.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.currentPlugin.destroy();\n        $(window).off('.zf.ResponsiveMenu');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return ResponsiveMenu;\n  }();\n\n  ResponsiveMenu.defaults = {};\n\n  // The plugin matches the plugin classes with these plugin instances.\n  var MenuPlugins = {\n    dropdown: {\n      cssClass: 'dropdown',\n      plugin: Foundation._plugins['dropdown-menu'] || null\n    },\n    drilldown: {\n      cssClass: 'drilldown',\n      plugin: Foundation._plugins['drilldown'] || null\n    },\n    accordion: {\n      cssClass: 'accordion-menu',\n      plugin: Foundation._plugins['accordion-menu'] || null\n    }\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveMenu, 'ResponsiveMenu');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * ResponsiveToggle module.\n   * @module foundation.responsiveToggle\n   * @requires foundation.util.mediaQuery\n   */\n\n  var ResponsiveToggle = function () {\n    /**\n     * Creates a new instance of Tab Bar.\n     * @class\n     * @fires ResponsiveToggle#init\n     * @param {jQuery} element - jQuery object to attach tab bar functionality to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function ResponsiveToggle(element, options) {\n      _classCallCheck(this, ResponsiveToggle);\n\n      this.$element = $(element);\n      this.options = $.extend({}, ResponsiveToggle.defaults, this.$element.data(), options);\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'ResponsiveToggle');\n    }\n\n    /**\n     * Initializes the tab bar by finding the target element, toggling element, and running update().\n     * @function\n     * @private\n     */\n\n\n    _createClass(ResponsiveToggle, [{\n      key: '_init',\n      value: function _init() {\n        var targetID = this.$element.data('responsive-toggle');\n        if (!targetID) {\n          console.error('Your tab bar needs an ID of a Menu as the value of data-tab-bar.');\n        }\n\n        this.$targetMenu = $('#' + targetID);\n        this.$toggler = this.$element.find('[data-toggle]');\n\n        this._update();\n      }\n\n      /**\n       * Adds necessary event handlers for the tab bar to work.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n\n        this._updateMqHandler = this._update.bind(this);\n\n        $(window).on('changed.zf.mediaquery', this._updateMqHandler);\n\n        this.$toggler.on('click.zf.responsiveToggle', this.toggleMenu.bind(this));\n      }\n\n      /**\n       * Checks the current media query to determine if the tab bar should be visible or hidden.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_update',\n      value: function _update() {\n        // Mobile\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n          this.$element.show();\n          this.$targetMenu.hide();\n        }\n\n        // Desktop\n        else {\n            this.$element.hide();\n            this.$targetMenu.show();\n          }\n      }\n\n      /**\n       * Toggles the element attached to the tab bar. The toggle only happens if the screen is small enough to allow it.\n       * @function\n       * @fires ResponsiveToggle#toggled\n       */\n\n    }, {\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        if (!Foundation.MediaQuery.atLeast(this.options.hideFor)) {\n          this.$targetMenu.toggle(0);\n\n          /**\n           * Fires when the element attached to the tab bar toggles.\n           * @event ResponsiveToggle#toggled\n           */\n          this.$element.trigger('toggled.zf.responsiveToggle');\n        }\n      }\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.responsiveToggle');\n        this.$toggler.off('.zf.responsiveToggle');\n\n        $(window).off('changed.zf.mediaquery', this._updateMqHandler);\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return ResponsiveToggle;\n  }();\n\n  ResponsiveToggle.defaults = {\n    /**\n     * The breakpoint after which the menu is always shown, and the tab bar is hidden.\n     * @option\n     * @example 'medium'\n     */\n    hideFor: 'medium'\n  };\n\n  // Window exports\n  Foundation.plugin(ResponsiveToggle, 'ResponsiveToggle');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Reveal module.\n   * @module foundation.reveal\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.box\n   * @requires foundation.util.triggers\n   * @requires foundation.util.mediaQuery\n   * @requires foundation.util.motion if using animations\n   */\n\n  var Reveal = function () {\n    /**\n     * Creates a new instance of Reveal.\n     * @class\n     * @param {jQuery} element - jQuery object to use for the modal.\n     * @param {Object} options - optional parameters.\n     */\n\n    function Reveal(element, options) {\n      _classCallCheck(this, Reveal);\n\n      this.$element = element;\n      this.options = $.extend({}, Reveal.defaults, this.$element.data(), options);\n      this._init();\n\n      Foundation.registerPlugin(this, 'Reveal');\n      Foundation.Keyboard.register('Reveal', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ESCAPE': 'close',\n        'TAB': 'tab_forward',\n        'SHIFT_TAB': 'tab_backward'\n      });\n    }\n\n    /**\n     * Initializes the modal by adding the overlay and close buttons, (if selected).\n     * @private\n     */\n\n\n    _createClass(Reveal, [{\n      key: '_init',\n      value: function _init() {\n        this.id = this.$element.attr('id');\n        this.isActive = false;\n        this.cached = { mq: Foundation.MediaQuery.current };\n        this.isMobile = mobileSniff();\n\n        this.$anchor = $('[data-open=\"' + this.id + '\"]').length ? $('[data-open=\"' + this.id + '\"]') : $('[data-toggle=\"' + this.id + '\"]');\n        this.$anchor.attr({\n          'aria-controls': this.id,\n          'aria-haspopup': true,\n          'tabindex': 0\n        });\n\n        if (this.options.fullScreen || this.$element.hasClass('full')) {\n          this.options.fullScreen = true;\n          this.options.overlay = false;\n        }\n        if (this.options.overlay && !this.$overlay) {\n          this.$overlay = this._makeOverlay(this.id);\n        }\n\n        this.$element.attr({\n          'role': 'dialog',\n          'aria-hidden': true,\n          'data-yeti-box': this.id,\n          'data-resize': this.id\n        });\n\n        if (this.$overlay) {\n          this.$element.detach().appendTo(this.$overlay);\n        } else {\n          this.$element.detach().appendTo($('body'));\n          this.$element.addClass('without-overlay');\n        }\n        this._events();\n        if (this.options.deepLink && window.location.hash === '#' + this.id) {\n          $(window).one('load.zf.reveal', this.open.bind(this));\n        }\n      }\n\n      /**\n       * Creates an overlay div to display behind the modal.\n       * @private\n       */\n\n    }, {\n      key: '_makeOverlay',\n      value: function _makeOverlay(id) {\n        var $overlay = $('<div></div>').addClass('reveal-overlay').appendTo('body');\n        return $overlay;\n      }\n\n      /**\n       * Updates position of modal\n       * TODO:  Figure out if we actually need to cache these values or if it doesn't matter\n       * @private\n       */\n\n    }, {\n      key: '_updatePosition',\n      value: function _updatePosition() {\n        var width = this.$element.outerWidth();\n        var outerWidth = $(window).width();\n        var height = this.$element.outerHeight();\n        var outerHeight = $(window).height();\n        var left, top;\n        if (this.options.hOffset === 'auto') {\n          left = parseInt((outerWidth - width) / 2, 10);\n        } else {\n          left = parseInt(this.options.hOffset, 10);\n        }\n        if (this.options.vOffset === 'auto') {\n          if (height > outerHeight) {\n            top = parseInt(Math.min(100, outerHeight / 10), 10);\n          } else {\n            top = parseInt((outerHeight - height) / 4, 10);\n          }\n        } else {\n          top = parseInt(this.options.vOffset, 10);\n        }\n        this.$element.css({ top: top + 'px' });\n        // only worry about left if we don't have an overlay or we havea  horizontal offset,\n        // otherwise we're perfectly in the middle\n        if (!this.$overlay || this.options.hOffset !== 'auto') {\n          this.$element.css({ left: left + 'px' });\n          this.$element.css({ margin: '0px' });\n        }\n      }\n\n      /**\n       * Adds event handlers for the modal.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this2 = this;\n\n        var _this = this;\n\n        this.$element.on({\n          'open.zf.trigger': this.open.bind(this),\n          'close.zf.trigger': function (event, $element) {\n            if (event.target === _this.$element[0] || $(event.target).parents('[data-closable]')[0] === $element) {\n              // only close reveal when it's explicitly called\n              return _this2.close.apply(_this2);\n            }\n          },\n          'toggle.zf.trigger': this.toggle.bind(this),\n          'resizeme.zf.trigger': function () {\n            _this._updatePosition();\n          }\n        });\n\n        if (this.$anchor.length) {\n          this.$anchor.on('keydown.zf.reveal', function (e) {\n            if (e.which === 13 || e.which === 32) {\n              e.stopPropagation();\n              e.preventDefault();\n              _this.open();\n            }\n          });\n        }\n\n        if (this.options.closeOnClick && this.options.overlay) {\n          this.$overlay.off('.zf.reveal').on('click.zf.reveal', function (e) {\n            if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) {\n              return;\n            }\n            _this.close();\n          });\n        }\n        if (this.options.deepLink) {\n          $(window).on('popstate.zf.reveal:' + this.id, this._handleState.bind(this));\n        }\n      }\n\n      /**\n       * Handles modal methods on back/forward button clicks or any other event that triggers popstate.\n       * @private\n       */\n\n    }, {\n      key: '_handleState',\n      value: function _handleState(e) {\n        if (window.location.hash === '#' + this.id && !this.isActive) {\n          this.open();\n        } else {\n          this.close();\n        }\n      }\n\n      /**\n       * Opens the modal controlled by `this.$anchor`, and closes all others by default.\n       * @function\n       * @fires Reveal#closeme\n       * @fires Reveal#open\n       */\n\n    }, {\n      key: 'open',\n      value: function open() {\n        var _this3 = this;\n\n        if (this.options.deepLink) {\n          var hash = '#' + this.id;\n\n          if (window.history.pushState) {\n            window.history.pushState(null, null, hash);\n          } else {\n            window.location.hash = hash;\n          }\n        }\n\n        this.isActive = true;\n\n        // Make elements invisible, but remove display: none so we can get size and positioning\n        this.$element.css({ 'visibility': 'hidden' }).show().scrollTop(0);\n        if (this.options.overlay) {\n          this.$overlay.css({ 'visibility': 'hidden' }).show();\n        }\n\n        this._updatePosition();\n\n        this.$element.hide().css({ 'visibility': '' });\n\n        if (this.$overlay) {\n          this.$overlay.css({ 'visibility': '' }).hide();\n          if (this.$element.hasClass('fast')) {\n            this.$overlay.addClass('fast');\n          } else if (this.$element.hasClass('slow')) {\n            this.$overlay.addClass('slow');\n          }\n        }\n\n        if (!this.options.multipleOpened) {\n          /**\n           * Fires immediately before the modal opens.\n           * Closes any other modals that are currently open\n           * @event Reveal#closeme\n           */\n          this.$element.trigger('closeme.zf.reveal', this.id);\n        }\n        // Motion UI method of reveal\n        if (this.options.animationIn) {\n          var _this;\n\n          (function () {\n            var afterAnimationFocus = function () {\n              _this.$element.attr({\n                'aria-hidden': false,\n                'tabindex': -1\n              }).focus();\n              console.log('focus');\n            };\n\n            _this = _this3;\n\n            if (_this3.options.overlay) {\n              Foundation.Motion.animateIn(_this3.$overlay, 'fade-in');\n            }\n            Foundation.Motion.animateIn(_this3.$element, _this3.options.animationIn, function () {\n              _this3.focusableElements = Foundation.Keyboard.findFocusable(_this3.$element);\n              afterAnimationFocus();\n            });\n          })();\n        }\n        // jQuery method of reveal\n        else {\n            if (this.options.overlay) {\n              this.$overlay.show(0);\n            }\n            this.$element.show(this.options.showDelay);\n          }\n\n        // handle accessibility\n        this.$element.attr({\n          'aria-hidden': false,\n          'tabindex': -1\n        }).focus();\n\n        /**\n         * Fires when the modal has successfully opened.\n         * @event Reveal#open\n         */\n        this.$element.trigger('open.zf.reveal');\n\n        if (this.isMobile) {\n          this.originalScrollPos = window.pageYOffset;\n          $('html, body').addClass('is-reveal-open');\n        } else {\n          $('body').addClass('is-reveal-open');\n        }\n\n        setTimeout(function () {\n          _this3._extraHandlers();\n        }, 0);\n      }\n\n      /**\n       * Adds extra event handlers for the body and window if necessary.\n       * @private\n       */\n\n    }, {\n      key: '_extraHandlers',\n      value: function _extraHandlers() {\n        var _this = this;\n        this.focusableElements = Foundation.Keyboard.findFocusable(this.$element);\n\n        if (!this.options.overlay && this.options.closeOnClick && !this.options.fullScreen) {\n          $('body').on('click.zf.reveal', function (e) {\n            if (e.target === _this.$element[0] || $.contains(_this.$element[0], e.target)) {\n              return;\n            }\n            _this.close();\n          });\n        }\n\n        if (this.options.closeOnEsc) {\n          $(window).on('keydown.zf.reveal', function (e) {\n            Foundation.Keyboard.handleKey(e, 'Reveal', {\n              close: function () {\n                if (_this.options.closeOnEsc) {\n                  _this.close();\n                  _this.$anchor.focus();\n                }\n              }\n            });\n          });\n        }\n\n        // lock focus within modal while tabbing\n        this.$element.on('keydown.zf.reveal', function (e) {\n          var $target = $(this);\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Reveal', {\n            tab_forward: function () {\n              if (_this.$element.find(':focus').is(_this.focusableElements.eq(-1))) {\n                // left modal downwards, setting focus to first element\n                _this.focusableElements.eq(0).focus();\n                return true;\n              }\n              if (_this.focusableElements.length === 0) {\n                // no focusable elements inside the modal at all, prevent tabbing in general\n                return true;\n              }\n            },\n            tab_backward: function () {\n              if (_this.$element.find(':focus').is(_this.focusableElements.eq(0)) || _this.$element.is(':focus')) {\n                // left modal upwards, setting focus to last element\n                _this.focusableElements.eq(-1).focus();\n                return true;\n              }\n              if (_this.focusableElements.length === 0) {\n                // no focusable elements inside the modal at all, prevent tabbing in general\n                return true;\n              }\n            },\n            open: function () {\n              if (_this.$element.find(':focus').is(_this.$element.find('[data-close]'))) {\n                setTimeout(function () {\n                  // set focus back to anchor if close button has been activated\n                  _this.$anchor.focus();\n                }, 1);\n              } else if ($target.is(_this.focusableElements)) {\n                // dont't trigger if acual element has focus (i.e. inputs, links, ...)\n                _this.open();\n              }\n            },\n            close: function () {\n              if (_this.options.closeOnEsc) {\n                _this.close();\n                _this.$anchor.focus();\n              }\n            },\n            handled: function (preventDefault) {\n              if (preventDefault) {\n                e.preventDefault();\n              }\n            }\n          });\n        });\n      }\n\n      /**\n       * Closes the modal.\n       * @function\n       * @fires Reveal#closed\n       */\n\n    }, {\n      key: 'close',\n      value: function close() {\n        if (!this.isActive || !this.$element.is(':visible')) {\n          return false;\n        }\n        var _this = this;\n\n        // Motion UI method of hiding\n        if (this.options.animationOut) {\n          if (this.options.overlay) {\n            Foundation.Motion.animateOut(this.$overlay, 'fade-out', finishUp);\n          } else {\n            finishUp();\n          }\n\n          Foundation.Motion.animateOut(this.$element, this.options.animationOut);\n        }\n        // jQuery method of hiding\n        else {\n            if (this.options.overlay) {\n              this.$overlay.hide(0, finishUp);\n            } else {\n              finishUp();\n            }\n\n            this.$element.hide(this.options.hideDelay);\n          }\n\n        // Conditionals to remove extra event listeners added on open\n        if (this.options.closeOnEsc) {\n          $(window).off('keydown.zf.reveal');\n        }\n\n        if (!this.options.overlay && this.options.closeOnClick) {\n          $('body').off('click.zf.reveal');\n        }\n\n        this.$element.off('keydown.zf.reveal');\n\n        function finishUp() {\n          if (_this.isMobile) {\n            $('html, body').removeClass('is-reveal-open');\n            if (_this.originalScrollPos) {\n              $('body').scrollTop(_this.originalScrollPos);\n              _this.originalScrollPos = null;\n            }\n          } else {\n            $('body').removeClass('is-reveal-open');\n          }\n\n          _this.$element.attr('aria-hidden', true);\n\n          /**\n          * Fires when the modal is done closing.\n          * @event Reveal#closed\n          */\n          _this.$element.trigger('closed.zf.reveal');\n        }\n\n        /**\n        * Resets the modal content\n        * This prevents a running video to keep going in the background\n        */\n        if (this.options.resetOnClose) {\n          this.$element.html(this.$element.html());\n        }\n\n        this.isActive = false;\n        if (_this.options.deepLink) {\n          if (window.history.replaceState) {\n            window.history.replaceState(\"\", document.title, window.location.pathname);\n          } else {\n            window.location.hash = '';\n          }\n        }\n      }\n\n      /**\n       * Toggles the open/closed state of a modal.\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.isActive) {\n          this.close();\n        } else {\n          this.open();\n        }\n      }\n    }, {\n      key: 'destroy',\n\n\n      /**\n       * Destroys an instance of a modal.\n       * @function\n       */\n      value: function destroy() {\n        if (this.options.overlay) {\n          this.$element.appendTo($('body')); // move $element outside of $overlay to prevent error unregisterPlugin()\n          this.$overlay.hide().off().remove();\n        }\n        this.$element.hide().off();\n        this.$anchor.off('.zf');\n        $(window).off('.zf.reveal:' + this.id);\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Reveal;\n  }();\n\n  Reveal.defaults = {\n    /**\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n     * @option\n     * @example 'slide-in-left'\n     */\n    animationIn: '',\n    /**\n     * Motion-UI class to use for animated elements. If none used, defaults to simple show/hide.\n     * @option\n     * @example 'slide-out-right'\n     */\n    animationOut: '',\n    /**\n     * Time, in ms, to delay the opening of a modal after a click if no animation used.\n     * @option\n     * @example 10\n     */\n    showDelay: 0,\n    /**\n     * Time, in ms, to delay the closing of a modal after a click if no animation used.\n     * @option\n     * @example 10\n     */\n    hideDelay: 0,\n    /**\n     * Allows a click on the body/overlay to close the modal.\n     * @option\n     * @example true\n     */\n    closeOnClick: true,\n    /**\n     * Allows the modal to close if the user presses the `ESCAPE` key.\n     * @option\n     * @example true\n     */\n    closeOnEsc: true,\n    /**\n     * If true, allows multiple modals to be displayed at once.\n     * @option\n     * @example false\n     */\n    multipleOpened: false,\n    /**\n     * Distance, in pixels, the modal should push down from the top of the screen.\n     * @option\n     * @example auto\n     */\n    vOffset: 'auto',\n    /**\n     * Distance, in pixels, the modal should push in from the side of the screen.\n     * @option\n     * @example auto\n     */\n    hOffset: 'auto',\n    /**\n     * Allows the modal to be fullscreen, completely blocking out the rest of the view. JS checks for this as well.\n     * @option\n     * @example false\n     */\n    fullScreen: false,\n    /**\n     * Percentage of screen height the modal should push up from the bottom of the view.\n     * @option\n     * @example 10\n     */\n    btmOffsetPct: 10,\n    /**\n     * Allows the modal to generate an overlay div, which will cover the view when modal opens.\n     * @option\n     * @example true\n     */\n    overlay: true,\n    /**\n     * Allows the modal to remove and reinject markup on close. Should be true if using video elements w/o using provider's api, otherwise, videos will continue to play in the background.\n     * @option\n     * @example false\n     */\n    resetOnClose: false,\n    /**\n     * Allows the modal to alter the url on open/close, and allows the use of the `back` button to close modals. ALSO, allows a modal to auto-maniacally open on page load IF the hash === the modal's user-set id.\n     * @option\n     * @example false\n     */\n    deepLink: false\n  };\n\n  // Window exports\n  Foundation.plugin(Reveal, 'Reveal');\n\n  function iPhoneSniff() {\n    return (/iP(ad|hone|od).*OS/.test(window.navigator.userAgent)\n    );\n  }\n\n  function androidSniff() {\n    return (/Android/.test(window.navigator.userAgent)\n    );\n  }\n\n  function mobileSniff() {\n    return iPhoneSniff() || androidSniff();\n  }\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Slider module.\n   * @module foundation.slider\n   * @requires foundation.util.motion\n   * @requires foundation.util.triggers\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.touch\n   */\n\n  var Slider = function () {\n    /**\n     * Creates a new instance of a drilldown menu.\n     * @class\n     * @param {jQuery} element - jQuery object to make into an accordion menu.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Slider(element, options) {\n      _classCallCheck(this, Slider);\n\n      this.$element = element;\n      this.options = $.extend({}, Slider.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Slider');\n      Foundation.Keyboard.register('Slider', {\n        'ltr': {\n          'ARROW_RIGHT': 'increase',\n          'ARROW_UP': 'increase',\n          'ARROW_DOWN': 'decrease',\n          'ARROW_LEFT': 'decrease',\n          'SHIFT_ARROW_RIGHT': 'increase_fast',\n          'SHIFT_ARROW_UP': 'increase_fast',\n          'SHIFT_ARROW_DOWN': 'decrease_fast',\n          'SHIFT_ARROW_LEFT': 'decrease_fast'\n        },\n        'rtl': {\n          'ARROW_LEFT': 'increase',\n          'ARROW_RIGHT': 'decrease',\n          'SHIFT_ARROW_LEFT': 'increase_fast',\n          'SHIFT_ARROW_RIGHT': 'decrease_fast'\n        }\n      });\n    }\n\n    /**\n     * Initilizes the plugin by reading/setting attributes, creating collections and setting the initial position of the handle(s).\n     * @function\n     * @private\n     */\n\n\n    _createClass(Slider, [{\n      key: '_init',\n      value: function _init() {\n        this.inputs = this.$element.find('input');\n        this.handles = this.$element.find('[data-slider-handle]');\n\n        this.$handle = this.handles.eq(0);\n        this.$input = this.inputs.length ? this.inputs.eq(0) : $('#' + this.$handle.attr('aria-controls'));\n        this.$fill = this.$element.find('[data-slider-fill]').css(this.options.vertical ? 'height' : 'width', 0);\n\n        var isDbl = false,\n            _this = this;\n        if (this.options.disabled || this.$element.hasClass(this.options.disabledClass)) {\n          this.options.disabled = true;\n          this.$element.addClass(this.options.disabledClass);\n        }\n        if (!this.inputs.length) {\n          this.inputs = $().add(this.$input);\n          this.options.binding = true;\n        }\n        this._setInitAttr(0);\n        this._events(this.$handle);\n\n        if (this.handles[1]) {\n          this.options.doubleSided = true;\n          this.$handle2 = this.handles.eq(1);\n          this.$input2 = this.inputs.length > 1 ? this.inputs.eq(1) : $('#' + this.$handle2.attr('aria-controls'));\n\n          if (!this.inputs[1]) {\n            this.inputs = this.inputs.add(this.$input2);\n          }\n          isDbl = true;\n\n          this._setHandlePos(this.$handle, this.options.initialStart, true, function () {\n\n            _this._setHandlePos(_this.$handle2, _this.options.initialEnd, true);\n          });\n          // this.$handle.triggerHandler('click.zf.slider');\n          this._setInitAttr(1);\n          this._events(this.$handle2);\n        }\n\n        if (!isDbl) {\n          this._setHandlePos(this.$handle, this.options.initialStart, true);\n        }\n      }\n\n      /**\n       * Sets the position of the selected handle and fill bar.\n       * @function\n       * @private\n       * @param {jQuery} $hndl - the selected handle to move.\n       * @param {Number} location - floating point between the start and end values of the slider bar.\n       * @param {Function} cb - callback function to fire on completion.\n       * @fires Slider#moved\n       * @fires Slider#changed\n       */\n\n    }, {\n      key: '_setHandlePos',\n      value: function _setHandlePos($hndl, location, noInvert, cb) {\n        // don't move if the slider has been disabled since its initialization\n        if (this.$element.hasClass(this.options.disabledClass)) {\n          return;\n        }\n        //might need to alter that slightly for bars that will have odd number selections.\n        location = parseFloat(location); //on input change events, convert string to number...grumble.\n\n        // prevent slider from running out of bounds, if value exceeds the limits set through options, override the value to min/max\n        if (location < this.options.start) {\n          location = this.options.start;\n        } else if (location > this.options.end) {\n          location = this.options.end;\n        }\n\n        var isDbl = this.options.doubleSided;\n\n        if (isDbl) {\n          //this block is to prevent 2 handles from crossing eachother. Could/should be improved.\n          if (this.handles.index($hndl) === 0) {\n            var h2Val = parseFloat(this.$handle2.attr('aria-valuenow'));\n            location = location >= h2Val ? h2Val - this.options.step : location;\n          } else {\n            var h1Val = parseFloat(this.$handle.attr('aria-valuenow'));\n            location = location <= h1Val ? h1Val + this.options.step : location;\n          }\n        }\n\n        //this is for single-handled vertical sliders, it adjusts the value to account for the slider being \"upside-down\"\n        //for click and drag events, it's weird due to the scale(-1, 1) css property\n        if (this.options.vertical && !noInvert) {\n          location = this.options.end - location;\n        }\n\n        var _this = this,\n            vert = this.options.vertical,\n            hOrW = vert ? 'height' : 'width',\n            lOrT = vert ? 'top' : 'left',\n            handleDim = $hndl[0].getBoundingClientRect()[hOrW],\n            elemDim = this.$element[0].getBoundingClientRect()[hOrW],\n\n        //percentage of bar min/max value based on click or drag point\n        pctOfBar = percent(location - this.options.start, this.options.end - this.options.start).toFixed(2),\n\n        //number of actual pixels to shift the handle, based on the percentage obtained above\n        pxToMove = (elemDim - handleDim) * pctOfBar,\n\n        //percentage of bar to shift the handle\n        movement = (percent(pxToMove, elemDim) * 100).toFixed(this.options.decimal);\n        //fixing the decimal value for the location number, is passed to other methods as a fixed floating-point value\n        location = parseFloat(location.toFixed(this.options.decimal));\n        // declare empty object for css adjustments, only used with 2 handled-sliders\n        var css = {};\n\n        this._setValues($hndl, location);\n\n        // TODO update to calculate based on values set to respective inputs??\n        if (isDbl) {\n          var isLeftHndl = this.handles.index($hndl) === 0,\n\n          //empty variable, will be used for min-height/width for fill bar\n          dim,\n\n          //percentage w/h of the handle compared to the slider bar\n          handlePct = ~ ~(percent(handleDim, elemDim) * 100);\n          //if left handle, the math is slightly different than if it's the right handle, and the left/top property needs to be changed for the fill bar\n          if (isLeftHndl) {\n            //left or top percentage value to apply to the fill bar.\n            css[lOrT] = movement + '%';\n            //calculate the new min-height/width for the fill bar.\n            dim = parseFloat(this.$handle2[0].style[lOrT]) - movement + handlePct;\n            //this callback is necessary to prevent errors and allow the proper placement and initialization of a 2-handled slider\n            //plus, it means we don't care if 'dim' isNaN on init, it won't be in the future.\n            if (cb && typeof cb === 'function') {\n              cb();\n            } //this is only needed for the initialization of 2 handled sliders\n          } else {\n              //just caching the value of the left/bottom handle's left/top property\n              var handlePos = parseFloat(this.$handle[0].style[lOrT]);\n              //calculate the new min-height/width for the fill bar. Use isNaN to prevent false positives for numbers <= 0\n              //based on the percentage of movement of the handle being manipulated, less the opposing handle's left/top position, plus the percentage w/h of the handle itself\n              dim = movement - (isNaN(handlePos) ? this.options.initialStart / ((this.options.end - this.options.start) / 100) : handlePos) + handlePct;\n            }\n          // assign the min-height/width to our css object\n          css['min-' + hOrW] = dim + '%';\n        }\n\n        this.$element.one('finished.zf.animate', function () {\n          /**\n           * Fires when the handle is done moving.\n           * @event Slider#moved\n           */\n          _this.$element.trigger('moved.zf.slider', [$hndl]);\n        });\n\n        //because we don't know exactly how the handle will be moved, check the amount of time it should take to move.\n        var moveTime = this.$element.data('dragging') ? 1000 / 60 : this.options.moveTime;\n\n        Foundation.Move(moveTime, $hndl, function () {\n          //adjusting the left/top property of the handle, based on the percentage calculated above\n          $hndl.css(lOrT, movement + '%');\n\n          if (!_this.options.doubleSided) {\n            //if single-handled, a simple method to expand the fill bar\n            _this.$fill.css(hOrW, pctOfBar * 100 + '%');\n          } else {\n            //otherwise, use the css object we created above\n            _this.$fill.css(css);\n          }\n        });\n\n        /**\n         * Fires when the value has not been change for a given time.\n         * @event Slider#changed\n         */\n        clearTimeout(_this.timeout);\n        _this.timeout = setTimeout(function () {\n          _this.$element.trigger('changed.zf.slider', [$hndl]);\n        }, _this.options.changedDelay);\n      }\n\n      /**\n       * Sets the initial attribute for the slider element.\n       * @function\n       * @private\n       * @param {Number} idx - index of the current handle/input to use.\n       */\n\n    }, {\n      key: '_setInitAttr',\n      value: function _setInitAttr(idx) {\n        var id = this.inputs.eq(idx).attr('id') || Foundation.GetYoDigits(6, 'slider');\n        this.inputs.eq(idx).attr({\n          'id': id,\n          'max': this.options.end,\n          'min': this.options.start,\n          'step': this.options.step\n        });\n        this.handles.eq(idx).attr({\n          'role': 'slider',\n          'aria-controls': id,\n          'aria-valuemax': this.options.end,\n          'aria-valuemin': this.options.start,\n          'aria-valuenow': idx === 0 ? this.options.initialStart : this.options.initialEnd,\n          'aria-orientation': this.options.vertical ? 'vertical' : 'horizontal',\n          'tabindex': 0\n        });\n      }\n\n      /**\n       * Sets the input and `aria-valuenow` values for the slider element.\n       * @function\n       * @private\n       * @param {jQuery} $handle - the currently selected handle.\n       * @param {Number} val - floating point of the new value.\n       */\n\n    }, {\n      key: '_setValues',\n      value: function _setValues($handle, val) {\n        var idx = this.options.doubleSided ? this.handles.index($handle) : 0;\n        this.inputs.eq(idx).val(val);\n        $handle.attr('aria-valuenow', val);\n      }\n\n      /**\n       * Handles events on the slider element.\n       * Calculates the new location of the current handle.\n       * If there are two handles and the bar was clicked, it determines which handle to move.\n       * @function\n       * @private\n       * @param {Object} e - the `event` object passed from the listener.\n       * @param {jQuery} $handle - the current handle to calculate for, if selected.\n       * @param {Number} val - floating point number for the new value of the slider.\n       * TODO clean this up, there's a lot of repeated code between this and the _setHandlePos fn.\n       */\n\n    }, {\n      key: '_handleEvent',\n      value: function _handleEvent(e, $handle, val) {\n        var value, hasVal;\n        if (!val) {\n          //click or drag events\n          e.preventDefault();\n          var _this = this,\n              vertical = this.options.vertical,\n              param = vertical ? 'height' : 'width',\n              direction = vertical ? 'top' : 'left',\n              eventOffset = vertical ? e.pageY : e.pageX,\n              halfOfHandle = this.$handle[0].getBoundingClientRect()[param] / 2,\n              barDim = this.$element[0].getBoundingClientRect()[param],\n              windowScroll = vertical ? $(window).scrollTop() : $(window).scrollLeft();\n\n          var elemOffset = this.$element.offset()[direction];\n\n          // touch events emulated by the touch util give position relative to screen, add window.scroll to event coordinates...\n          // best way to guess this is simulated is if clientY == pageY\n          if (e.clientY === e.pageY) {\n            eventOffset = eventOffset + windowScroll;\n          }\n          var eventFromBar = eventOffset - elemOffset;\n          var barXY;\n          if (eventFromBar < 0) {\n            barXY = 0;\n          } else if (eventFromBar > barDim) {\n            barXY = barDim;\n          } else {\n            barXY = eventFromBar;\n          }\n          offsetPct = percent(barXY, barDim);\n\n          value = (this.options.end - this.options.start) * offsetPct + this.options.start;\n\n          // turn everything around for RTL, yay math!\n          if (Foundation.rtl() && !this.options.vertical) {\n            value = this.options.end - value;\n          }\n\n          value = _this._adjustValue(null, value);\n          //boolean flag for the setHandlePos fn, specifically for vertical sliders\n          hasVal = false;\n\n          if (!$handle) {\n            //figure out which handle it is, pass it to the next function.\n            var firstHndlPos = absPosition(this.$handle, direction, barXY, param),\n                secndHndlPos = absPosition(this.$handle2, direction, barXY, param);\n            $handle = firstHndlPos <= secndHndlPos ? this.$handle : this.$handle2;\n          }\n        } else {\n          //change event on input\n          value = this._adjustValue(null, val);\n          hasVal = true;\n        }\n\n        this._setHandlePos($handle, value, hasVal);\n      }\n\n      /**\n       * Adjustes value for handle in regard to step value. returns adjusted value\n       * @function\n       * @private\n       * @param {jQuery} $handle - the selected handle.\n       * @param {Number} value - value to adjust. used if $handle is falsy\n       */\n\n    }, {\n      key: '_adjustValue',\n      value: function _adjustValue($handle, value) {\n        var val,\n            step = this.options.step,\n            div = parseFloat(step / 2),\n            left,\n            prev_val,\n            next_val;\n        if (!!$handle) {\n          val = parseFloat($handle.attr('aria-valuenow'));\n        } else {\n          val = value;\n        }\n        left = val % step;\n        prev_val = val - left;\n        next_val = prev_val + step;\n        if (left === 0) {\n          return val;\n        }\n        val = val >= prev_val + div ? next_val : prev_val;\n        return val;\n      }\n\n      /**\n       * Adds event listeners to the slider elements.\n       * @function\n       * @private\n       * @param {jQuery} $handle - the current handle to apply listeners to.\n       */\n\n    }, {\n      key: '_events',\n      value: function _events($handle) {\n        var _this = this,\n            curHandle,\n            timer;\n\n        this.inputs.off('change.zf.slider').on('change.zf.slider', function (e) {\n          var idx = _this.inputs.index($(this));\n          _this._handleEvent(e, _this.handles.eq(idx), $(this).val());\n        });\n\n        if (this.options.clickSelect) {\n          this.$element.off('click.zf.slider').on('click.zf.slider', function (e) {\n            if (_this.$element.data('dragging')) {\n              return false;\n            }\n\n            if (!$(e.target).is('[data-slider-handle]')) {\n              if (_this.options.doubleSided) {\n                _this._handleEvent(e);\n              } else {\n                _this._handleEvent(e, _this.$handle);\n              }\n            }\n          });\n        }\n\n        if (this.options.draggable) {\n          this.handles.addTouch();\n\n          var $body = $('body');\n          $handle.off('mousedown.zf.slider').on('mousedown.zf.slider', function (e) {\n            $handle.addClass('is-dragging');\n            _this.$fill.addClass('is-dragging'); //\n            _this.$element.data('dragging', true);\n\n            curHandle = $(e.currentTarget);\n\n            $body.on('mousemove.zf.slider', function (e) {\n              e.preventDefault();\n              _this._handleEvent(e, curHandle);\n            }).on('mouseup.zf.slider', function (e) {\n              _this._handleEvent(e, curHandle);\n\n              $handle.removeClass('is-dragging');\n              _this.$fill.removeClass('is-dragging');\n              _this.$element.data('dragging', false);\n\n              $body.off('mousemove.zf.slider mouseup.zf.slider');\n            });\n          })\n          // prevent events triggered by touch\n          .on('selectstart.zf.slider touchmove.zf.slider', function (e) {\n            e.preventDefault();\n          });\n        }\n\n        $handle.off('keydown.zf.slider').on('keydown.zf.slider', function (e) {\n          var _$handle = $(this),\n              idx = _this.options.doubleSided ? _this.handles.index(_$handle) : 0,\n              oldValue = parseFloat(_this.inputs.eq(idx).val()),\n              newValue;\n\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Slider', {\n            decrease: function () {\n              newValue = oldValue - _this.options.step;\n            },\n            increase: function () {\n              newValue = oldValue + _this.options.step;\n            },\n            decrease_fast: function () {\n              newValue = oldValue - _this.options.step * 10;\n            },\n            increase_fast: function () {\n              newValue = oldValue + _this.options.step * 10;\n            },\n            handled: function () {\n              // only set handle pos when event was handled specially\n              e.preventDefault();\n              _this._setHandlePos(_$handle, newValue, true);\n            }\n          });\n          /*if (newValue) { // if pressed key has special function, update value\n            e.preventDefault();\n            _this._setHandlePos(_$handle, newValue);\n          }*/\n        });\n      }\n\n      /**\n       * Destroys the slider plugin.\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.handles.off('.zf.slider');\n        this.inputs.off('.zf.slider');\n        this.$element.off('.zf.slider');\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Slider;\n  }();\n\n  Slider.defaults = {\n    /**\n     * Minimum value for the slider scale.\n     * @option\n     * @example 0\n     */\n    start: 0,\n    /**\n     * Maximum value for the slider scale.\n     * @option\n     * @example 100\n     */\n    end: 100,\n    /**\n     * Minimum value change per change event.\n     * @option\n     * @example 1\n     */\n    step: 1,\n    /**\n     * Value at which the handle/input *(left handle/first input)* should be set to on initialization.\n     * @option\n     * @example 0\n     */\n    initialStart: 0,\n    /**\n     * Value at which the right handle/second input should be set to on initialization.\n     * @option\n     * @example 100\n     */\n    initialEnd: 100,\n    /**\n     * Allows the input to be located outside the container and visible. Set to by the JS\n     * @option\n     * @example false\n     */\n    binding: false,\n    /**\n     * Allows the user to click/tap on the slider bar to select a value.\n     * @option\n     * @example true\n     */\n    clickSelect: true,\n    /**\n     * Set to true and use the `vertical` class to change alignment to vertical.\n     * @option\n     * @example false\n     */\n    vertical: false,\n    /**\n     * Allows the user to drag the slider handle(s) to select a value.\n     * @option\n     * @example true\n     */\n    draggable: true,\n    /**\n     * Disables the slider and prevents event listeners from being applied. Double checked by JS with `disabledClass`.\n     * @option\n     * @example false\n     */\n    disabled: false,\n    /**\n     * Allows the use of two handles. Double checked by the JS. Changes some logic handling.\n     * @option\n     * @example false\n     */\n    doubleSided: false,\n    /**\n     * Potential future feature.\n     */\n    // steps: 100,\n    /**\n     * Number of decimal places the plugin should go to for floating point precision.\n     * @option\n     * @example 2\n     */\n    decimal: 2,\n    /**\n     * Time delay for dragged elements.\n     */\n    // dragDelay: 0,\n    /**\n     * Time, in ms, to animate the movement of a slider handle if user clicks/taps on the bar. Needs to be manually set if updating the transition time in the Sass settings.\n     * @option\n     * @example 200\n     */\n    moveTime: 200, //update this if changing the transition time in the sass\n    /**\n     * Class applied to disabled sliders.\n     * @option\n     * @example 'disabled'\n     */\n    disabledClass: 'disabled',\n    /**\n     * Will invert the default layout for a vertical<span data-tooltip title=\"who would do this???\"> </span>slider.\n     * @option\n     * @example false\n     */\n    invertVertical: false,\n    /**\n     * Milliseconds before the `changed.zf-slider` event is triggered after value change.\n     * @option\n     * @example 500\n     */\n    changedDelay: 500\n  };\n\n  function percent(frac, num) {\n    return frac / num;\n  }\n  function absPosition($handle, dir, clickPos, param) {\n    return Math.abs($handle.position()[dir] + $handle[param]() / 2 - clickPos);\n  }\n\n  // Window exports\n  Foundation.plugin(Slider, 'Slider');\n}(jQuery);\n\n//*********this is in case we go to static, absolute positions instead of dynamic positioning********\n// this.setSteps(function() {\n//   _this._events();\n//   var initStart = _this.options.positions[_this.options.initialStart - 1] || null;\n//   var initEnd = _this.options.initialEnd ? _this.options.position[_this.options.initialEnd - 1] : null;\n//   if (initStart || initEnd) {\n//     _this._handleEvent(initStart, initEnd);\n//   }\n// });\n\n//***********the other part of absolute positions*************\n// Slider.prototype.setSteps = function(cb) {\n//   var posChange = this.$element.outerWidth() / this.options.steps;\n//   var counter = 0\n//   while(counter < this.options.steps) {\n//     if (counter) {\n//       this.options.positions.push(this.options.positions[counter - 1] + posChange);\n//     } else {\n//       this.options.positions.push(posChange);\n//     }\n//     counter++;\n//   }\n//   cb();\n// };\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Sticky module.\n   * @module foundation.sticky\n   * @requires foundation.util.triggers\n   * @requires foundation.util.mediaQuery\n   */\n\n  var Sticky = function () {\n    /**\n     * Creates a new instance of a sticky thing.\n     * @class\n     * @param {jQuery} element - jQuery object to make sticky.\n     * @param {Object} options - options object passed when creating the element programmatically.\n     */\n\n    function Sticky(element, options) {\n      _classCallCheck(this, Sticky);\n\n      this.$element = element;\n      this.options = $.extend({}, Sticky.defaults, this.$element.data(), options);\n\n      this._init();\n\n      Foundation.registerPlugin(this, 'Sticky');\n    }\n\n    /**\n     * Initializes the sticky element by adding classes, getting/setting dimensions, breakpoints and attributes\n     * @function\n     * @private\n     */\n\n\n    _createClass(Sticky, [{\n      key: '_init',\n      value: function _init() {\n        var $parent = this.$element.parent('[data-sticky-container]'),\n            id = this.$element[0].id || Foundation.GetYoDigits(6, 'sticky'),\n            _this = this;\n\n        if (!$parent.length) {\n          this.wasWrapped = true;\n        }\n        this.$container = $parent.length ? $parent : $(this.options.container).wrapInner(this.$element);\n        this.$container.addClass(this.options.containerClass);\n\n        this.$element.addClass(this.options.stickyClass).attr({ 'data-resize': id });\n\n        this.scrollCount = this.options.checkEvery;\n        this.isStuck = false;\n        $(window).one('load.zf.sticky', function () {\n          if (_this.options.anchor !== '') {\n            _this.$anchor = $('#' + _this.options.anchor);\n          } else {\n            _this._parsePoints();\n          }\n\n          _this._setSizes(function () {\n            _this._calc(false);\n          });\n          _this._events(id.split('-').reverse().join('-'));\n        });\n      }\n\n      /**\n       * If using multiple elements as anchors, calculates the top and bottom pixel values the sticky thing should stick and unstick on.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_parsePoints',\n      value: function _parsePoints() {\n        var top = this.options.topAnchor == \"\" ? 1 : this.options.topAnchor,\n            btm = this.options.btmAnchor == \"\" ? document.documentElement.scrollHeight : this.options.btmAnchor,\n            pts = [top, btm],\n            breaks = {};\n        for (var i = 0, len = pts.length; i < len && pts[i]; i++) {\n          var pt;\n          if (typeof pts[i] === 'number') {\n            pt = pts[i];\n          } else {\n            var place = pts[i].split(':'),\n                anchor = $('#' + place[0]);\n\n            pt = anchor.offset().top;\n            if (place[1] && place[1].toLowerCase() === 'bottom') {\n              pt += anchor[0].getBoundingClientRect().height;\n            }\n          }\n          breaks[i] = pt;\n        }\n\n        this.points = breaks;\n        return;\n      }\n\n      /**\n       * Adds event handlers for the scrolling element.\n       * @private\n       * @param {String} id - psuedo-random id for unique scroll event listener.\n       */\n\n    }, {\n      key: '_events',\n      value: function _events(id) {\n        var _this = this,\n            scrollListener = this.scrollListener = 'scroll.zf.' + id;\n        if (this.isOn) {\n          return;\n        }\n        if (this.canStick) {\n          this.isOn = true;\n          $(window).off(scrollListener).on(scrollListener, function (e) {\n            if (_this.scrollCount === 0) {\n              _this.scrollCount = _this.options.checkEvery;\n              _this._setSizes(function () {\n                _this._calc(false, window.pageYOffset);\n              });\n            } else {\n              _this.scrollCount--;\n              _this._calc(false, window.pageYOffset);\n            }\n          });\n        }\n\n        this.$element.off('resizeme.zf.trigger').on('resizeme.zf.trigger', function (e, el) {\n          _this._setSizes(function () {\n            _this._calc(false);\n            if (_this.canStick) {\n              if (!_this.isOn) {\n                _this._events(id);\n              }\n            } else if (_this.isOn) {\n              _this._pauseListeners(scrollListener);\n            }\n          });\n        });\n      }\n\n      /**\n       * Removes event handlers for scroll and change events on anchor.\n       * @fires Sticky#pause\n       * @param {String} scrollListener - unique, namespaced scroll listener attached to `window`\n       */\n\n    }, {\n      key: '_pauseListeners',\n      value: function _pauseListeners(scrollListener) {\n        this.isOn = false;\n        $(window).off(scrollListener);\n\n        /**\n         * Fires when the plugin is paused due to resize event shrinking the view.\n         * @event Sticky#pause\n         * @private\n         */\n        this.$element.trigger('pause.zf.sticky');\n      }\n\n      /**\n       * Called on every `scroll` event and on `_init`\n       * fires functions based on booleans and cached values\n       * @param {Boolean} checkSizes - true if plugin should recalculate sizes and breakpoints.\n       * @param {Number} scroll - current scroll position passed from scroll event cb function. If not passed, defaults to `window.pageYOffset`.\n       */\n\n    }, {\n      key: '_calc',\n      value: function _calc(checkSizes, scroll) {\n        if (checkSizes) {\n          this._setSizes();\n        }\n\n        if (!this.canStick) {\n          if (this.isStuck) {\n            this._removeSticky(true);\n          }\n          return false;\n        }\n\n        if (!scroll) {\n          scroll = window.pageYOffset;\n        }\n\n        if (scroll >= this.topPoint) {\n          if (scroll <= this.bottomPoint) {\n            if (!this.isStuck) {\n              this._setSticky();\n            }\n          } else {\n            if (this.isStuck) {\n              this._removeSticky(false);\n            }\n          }\n        } else {\n          if (this.isStuck) {\n            this._removeSticky(true);\n          }\n        }\n      }\n\n      /**\n       * Causes the $element to become stuck.\n       * Adds `position: fixed;`, and helper classes.\n       * @fires Sticky#stuckto\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_setSticky',\n      value: function _setSticky() {\n        var _this = this,\n            stickTo = this.options.stickTo,\n            mrgn = stickTo === 'top' ? 'marginTop' : 'marginBottom',\n            notStuckTo = stickTo === 'top' ? 'bottom' : 'top',\n            css = {};\n\n        css[mrgn] = this.options[mrgn] + 'em';\n        css[stickTo] = 0;\n        css[notStuckTo] = 'auto';\n        css['left'] = this.$container.offset().left + parseInt(window.getComputedStyle(this.$container[0])[\"padding-left\"], 10);\n        this.isStuck = true;\n        this.$element.removeClass('is-anchored is-at-' + notStuckTo).addClass('is-stuck is-at-' + stickTo).css(css)\n        /**\n         * Fires when the $element has become `position: fixed;`\n         * Namespaced to `top` or `bottom`, e.g. `sticky.zf.stuckto:top`\n         * @event Sticky#stuckto\n         */\n        .trigger('sticky.zf.stuckto:' + stickTo);\n        this.$element.on(\"transitionend webkitTransitionEnd oTransitionEnd otransitionend MSTransitionEnd\", function () {\n          _this._setSizes();\n        });\n      }\n\n      /**\n       * Causes the $element to become unstuck.\n       * Removes `position: fixed;`, and helper classes.\n       * Adds other helper classes.\n       * @param {Boolean} isTop - tells the function if the $element should anchor to the top or bottom of its $anchor element.\n       * @fires Sticky#unstuckfrom\n       * @private\n       */\n\n    }, {\n      key: '_removeSticky',\n      value: function _removeSticky(isTop) {\n        var stickTo = this.options.stickTo,\n            stickToTop = stickTo === 'top',\n            css = {},\n            anchorPt = (this.points ? this.points[1] - this.points[0] : this.anchorHeight) - this.elemHeight,\n            mrgn = stickToTop ? 'marginTop' : 'marginBottom',\n            notStuckTo = stickToTop ? 'bottom' : 'top',\n            topOrBottom = isTop ? 'top' : 'bottom';\n\n        css[mrgn] = 0;\n\n        css['bottom'] = 'auto';\n        if (isTop) {\n          css['top'] = 0;\n        } else {\n          css['top'] = anchorPt;\n        }\n\n        css['left'] = '';\n        this.isStuck = false;\n        this.$element.removeClass('is-stuck is-at-' + stickTo).addClass('is-anchored is-at-' + topOrBottom).css(css)\n        /**\n         * Fires when the $element has become anchored.\n         * Namespaced to `top` or `bottom`, e.g. `sticky.zf.unstuckfrom:bottom`\n         * @event Sticky#unstuckfrom\n         */\n        .trigger('sticky.zf.unstuckfrom:' + topOrBottom);\n      }\n\n      /**\n       * Sets the $element and $container sizes for plugin.\n       * Calls `_setBreakPoints`.\n       * @param {Function} cb - optional callback function to fire on completion of `_setBreakPoints`.\n       * @private\n       */\n\n    }, {\n      key: '_setSizes',\n      value: function _setSizes(cb) {\n        this.canStick = Foundation.MediaQuery.atLeast(this.options.stickyOn);\n        if (!this.canStick) {\n          cb();\n        }\n        var _this = this,\n            newElemWidth = this.$container[0].getBoundingClientRect().width,\n            comp = window.getComputedStyle(this.$container[0]),\n            pdng = parseInt(comp['padding-right'], 10);\n\n        if (this.$anchor && this.$anchor.length) {\n          this.anchorHeight = this.$anchor[0].getBoundingClientRect().height;\n        } else {\n          this._parsePoints();\n        }\n\n        this.$element.css({\n          'max-width': newElemWidth - pdng + 'px'\n        });\n\n        var newContainerHeight = this.$element[0].getBoundingClientRect().height || this.containerHeight;\n        if (this.$element.css(\"display\") == \"none\") {\n          newContainerHeight = 0;\n        }\n        this.containerHeight = newContainerHeight;\n        this.$container.css({\n          height: newContainerHeight\n        });\n        this.elemHeight = newContainerHeight;\n\n        if (this.isStuck) {\n          this.$element.css({ \"left\": this.$container.offset().left + parseInt(comp['padding-left'], 10) });\n        }\n\n        this._setBreakPoints(newContainerHeight, function () {\n          if (cb) {\n            cb();\n          }\n        });\n      }\n\n      /**\n       * Sets the upper and lower breakpoints for the element to become sticky/unsticky.\n       * @param {Number} elemHeight - px value for sticky.$element height, calculated by `_setSizes`.\n       * @param {Function} cb - optional callback function to be called on completion.\n       * @private\n       */\n\n    }, {\n      key: '_setBreakPoints',\n      value: function _setBreakPoints(elemHeight, cb) {\n        if (!this.canStick) {\n          if (cb) {\n            cb();\n          } else {\n            return false;\n          }\n        }\n        var mTop = emCalc(this.options.marginTop),\n            mBtm = emCalc(this.options.marginBottom),\n            topPoint = this.points ? this.points[0] : this.$anchor.offset().top,\n            bottomPoint = this.points ? this.points[1] : topPoint + this.anchorHeight,\n\n        // topPoint = this.$anchor.offset().top || this.points[0],\n        // bottomPoint = topPoint + this.anchorHeight || this.points[1],\n        winHeight = window.innerHeight;\n\n        if (this.options.stickTo === 'top') {\n          topPoint -= mTop;\n          bottomPoint -= elemHeight + mTop;\n        } else if (this.options.stickTo === 'bottom') {\n          topPoint -= winHeight - (elemHeight + mBtm);\n          bottomPoint -= winHeight - mBtm;\n        } else {\n          //this would be the stickTo: both option... tricky\n        }\n\n        this.topPoint = topPoint;\n        this.bottomPoint = bottomPoint;\n\n        if (cb) {\n          cb();\n        }\n      }\n\n      /**\n       * Destroys the current sticky element.\n       * Resets the element to the top position first.\n       * Removes event listeners, JS-added css properties and classes, and unwraps the $element if the JS added the $container.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this._removeSticky(true);\n\n        this.$element.removeClass(this.options.stickyClass + ' is-anchored is-at-top').css({\n          height: '',\n          top: '',\n          bottom: '',\n          'max-width': ''\n        }).off('resizeme.zf.trigger');\n        if (this.$anchor && this.$anchor.length) {\n          this.$anchor.off('change.zf.sticky');\n        }\n        $(window).off(this.scrollListener);\n\n        if (this.wasWrapped) {\n          this.$element.unwrap();\n        } else {\n          this.$container.removeClass(this.options.containerClass).css({\n            height: ''\n          });\n        }\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Sticky;\n  }();\n\n  Sticky.defaults = {\n    /**\n     * Customizable container template. Add your own classes for styling and sizing.\n     * @option\n     * @example '&lt;div data-sticky-container class=\"small-6 columns\"&gt;&lt;/div&gt;'\n     */\n    container: '<div data-sticky-container></div>',\n    /**\n     * Location in the view the element sticks to.\n     * @option\n     * @example 'top'\n     */\n    stickTo: 'top',\n    /**\n     * If anchored to a single element, the id of that element.\n     * @option\n     * @example 'exampleId'\n     */\n    anchor: '',\n    /**\n     * If using more than one element as anchor points, the id of the top anchor.\n     * @option\n     * @example 'exampleId:top'\n     */\n    topAnchor: '',\n    /**\n     * If using more than one element as anchor points, the id of the bottom anchor.\n     * @option\n     * @example 'exampleId:bottom'\n     */\n    btmAnchor: '',\n    /**\n     * Margin, in `em`'s to apply to the top of the element when it becomes sticky.\n     * @option\n     * @example 1\n     */\n    marginTop: 1,\n    /**\n     * Margin, in `em`'s to apply to the bottom of the element when it becomes sticky.\n     * @option\n     * @example 1\n     */\n    marginBottom: 1,\n    /**\n     * Breakpoint string that is the minimum screen size an element should become sticky.\n     * @option\n     * @example 'medium'\n     */\n    stickyOn: 'medium',\n    /**\n     * Class applied to sticky element, and removed on destruction. Foundation defaults to `sticky`.\n     * @option\n     * @example 'sticky'\n     */\n    stickyClass: 'sticky',\n    /**\n     * Class applied to sticky container. Foundation defaults to `sticky-container`.\n     * @option\n     * @example 'sticky-container'\n     */\n    containerClass: 'sticky-container',\n    /**\n     * Number of scroll events between the plugin's recalculating sticky points. Setting it to `0` will cause it to recalc every scroll event, setting it to `-1` will prevent recalc on scroll.\n     * @option\n     * @example 50\n     */\n    checkEvery: -1\n  };\n\n  /**\n   * Helper function to calculate em values\n   * @param Number {em} - number of em's to calculate into pixels\n   */\n  function emCalc(em) {\n    return parseInt(window.getComputedStyle(document.body, null).fontSize, 10) * em;\n  }\n\n  // Window exports\n  Foundation.plugin(Sticky, 'Sticky');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Tabs module.\n   * @module foundation.tabs\n   * @requires foundation.util.keyboard\n   * @requires foundation.util.timerAndImageLoader if tabs contain images\n   */\n\n  var Tabs = function () {\n    /**\n     * Creates a new instance of tabs.\n     * @class\n     * @fires Tabs#init\n     * @param {jQuery} element - jQuery object to make into tabs.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Tabs(element, options) {\n      _classCallCheck(this, Tabs);\n\n      this.$element = element;\n      this.options = $.extend({}, Tabs.defaults, this.$element.data(), options);\n\n      this._init();\n      Foundation.registerPlugin(this, 'Tabs');\n      Foundation.Keyboard.register('Tabs', {\n        'ENTER': 'open',\n        'SPACE': 'open',\n        'ARROW_RIGHT': 'next',\n        'ARROW_UP': 'previous',\n        'ARROW_DOWN': 'next',\n        'ARROW_LEFT': 'previous'\n        // 'TAB': 'next',\n        // 'SHIFT_TAB': 'previous'\n      });\n    }\n\n    /**\n     * Initializes the tabs by showing and focusing (if autoFocus=true) the preset active tab.\n     * @private\n     */\n\n\n    _createClass(Tabs, [{\n      key: '_init',\n      value: function _init() {\n        var _this = this;\n\n        this.$tabTitles = this.$element.find('.' + this.options.linkClass);\n        this.$tabContent = $('[data-tabs-content=\"' + this.$element[0].id + '\"]');\n\n        this.$tabTitles.each(function () {\n          var $elem = $(this),\n              $link = $elem.find('a'),\n              isActive = $elem.hasClass('is-active'),\n              hash = $link[0].hash.slice(1),\n              linkId = $link[0].id ? $link[0].id : hash + '-label',\n              $tabContent = $('#' + hash);\n\n          $elem.attr({ 'role': 'presentation' });\n\n          $link.attr({\n            'role': 'tab',\n            'aria-controls': hash,\n            'aria-selected': isActive,\n            'id': linkId\n          });\n\n          $tabContent.attr({\n            'role': 'tabpanel',\n            'aria-hidden': !isActive,\n            'aria-labelledby': linkId\n          });\n\n          if (isActive && _this.options.autoFocus) {\n            $link.focus();\n          }\n        });\n\n        if (this.options.matchHeight) {\n          var $images = this.$tabContent.find('img');\n\n          if ($images.length) {\n            Foundation.onImagesLoaded($images, this._setHeight.bind(this));\n          } else {\n            this._setHeight();\n          }\n        }\n\n        this._events();\n      }\n\n      /**\n       * Adds event handlers for items within the tabs.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this._addKeyHandler();\n        this._addClickHandler();\n        this._setHeightMqHandler = null;\n\n        if (this.options.matchHeight) {\n          this._setHeightMqHandler = this._setHeight.bind(this);\n\n          $(window).on('changed.zf.mediaquery', this._setHeightMqHandler);\n        }\n      }\n\n      /**\n       * Adds click handlers for items within the tabs.\n       * @private\n       */\n\n    }, {\n      key: '_addClickHandler',\n      value: function _addClickHandler() {\n        var _this = this;\n\n        this.$element.off('click.zf.tabs').on('click.zf.tabs', '.' + this.options.linkClass, function (e) {\n          e.preventDefault();\n          e.stopPropagation();\n          if ($(this).hasClass('is-active')) {\n            return;\n          }\n          _this._handleTabChange($(this));\n        });\n      }\n\n      /**\n       * Adds keyboard event handlers for items within the tabs.\n       * @private\n       */\n\n    }, {\n      key: '_addKeyHandler',\n      value: function _addKeyHandler() {\n        var _this = this;\n        var $firstTab = _this.$element.find('li:first-of-type');\n        var $lastTab = _this.$element.find('li:last-of-type');\n\n        this.$tabTitles.off('keydown.zf.tabs').on('keydown.zf.tabs', function (e) {\n          if (e.which === 9) return;\n\n          var $element = $(this),\n              $elements = $element.parent('ul').children('li'),\n              $prevElement,\n              $nextElement;\n\n          $elements.each(function (i) {\n            if ($(this).is($element)) {\n              if (_this.options.wrapOnKeys) {\n                $prevElement = i === 0 ? $elements.last() : $elements.eq(i - 1);\n                $nextElement = i === $elements.length - 1 ? $elements.first() : $elements.eq(i + 1);\n              } else {\n                $prevElement = $elements.eq(Math.max(0, i - 1));\n                $nextElement = $elements.eq(Math.min(i + 1, $elements.length - 1));\n              }\n              return;\n            }\n          });\n\n          // handle keyboard event with keyboard util\n          Foundation.Keyboard.handleKey(e, 'Tabs', {\n            open: function () {\n              $element.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($element);\n            },\n            previous: function () {\n              $prevElement.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($prevElement);\n            },\n            next: function () {\n              $nextElement.find('[role=\"tab\"]').focus();\n              _this._handleTabChange($nextElement);\n            },\n            handled: function () {\n              e.stopPropagation();\n              e.preventDefault();\n            }\n          });\n        });\n      }\n\n      /**\n       * Opens the tab `$targetContent` defined by `$target`.\n       * @param {jQuery} $target - Tab to open.\n       * @fires Tabs#change\n       * @function\n       */\n\n    }, {\n      key: '_handleTabChange',\n      value: function _handleTabChange($target) {\n        var $tabLink = $target.find('[role=\"tab\"]'),\n            hash = $tabLink[0].hash,\n            $targetContent = this.$tabContent.find(hash),\n            $oldTab = this.$element.find('.' + this.options.linkClass + '.is-active').removeClass('is-active').find('[role=\"tab\"]').attr({ 'aria-selected': 'false' });\n\n        $('#' + $oldTab.attr('aria-controls')).removeClass('is-active').attr({ 'aria-hidden': 'true' });\n\n        $target.addClass('is-active');\n\n        $tabLink.attr({ 'aria-selected': 'true' });\n\n        $targetContent.addClass('is-active').attr({ 'aria-hidden': 'false' });\n\n        /**\n         * Fires when the plugin has successfully changed tabs.\n         * @event Tabs#change\n         */\n        this.$element.trigger('change.zf.tabs', [$target]);\n      }\n\n      /**\n       * Public method for selecting a content pane to display.\n       * @param {jQuery | String} elem - jQuery object or string of the id of the pane to display.\n       * @function\n       */\n\n    }, {\n      key: 'selectTab',\n      value: function selectTab(elem) {\n        var idStr;\n\n        if (typeof elem === 'object') {\n          idStr = elem[0].id;\n        } else {\n          idStr = elem;\n        }\n\n        if (idStr.indexOf('#') < 0) {\n          idStr = '#' + idStr;\n        }\n\n        var $target = this.$tabTitles.find('[href=\"' + idStr + '\"]').parent('.' + this.options.linkClass);\n\n        this._handleTabChange($target);\n      }\n    }, {\n      key: '_setHeight',\n\n      /**\n       * Sets the height of each panel to the height of the tallest panel.\n       * If enabled in options, gets called on media query change.\n       * If loading content via external source, can be called directly or with _reflow.\n       * @function\n       * @private\n       */\n      value: function _setHeight() {\n        var max = 0;\n        this.$tabContent.find('.' + this.options.panelClass).css('height', '').each(function () {\n          var panel = $(this),\n              isActive = panel.hasClass('is-active');\n\n          if (!isActive) {\n            panel.css({ 'visibility': 'hidden', 'display': 'block' });\n          }\n\n          var temp = this.getBoundingClientRect().height;\n\n          if (!isActive) {\n            panel.css({\n              'visibility': '',\n              'display': ''\n            });\n          }\n\n          max = temp > max ? temp : max;\n        }).css('height', max + 'px');\n      }\n\n      /**\n       * Destroys an instance of an tabs.\n       * @fires Tabs#destroyed\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.find('.' + this.options.linkClass).off('.zf.tabs').hide().end().find('.' + this.options.panelClass).hide();\n\n        if (this.options.matchHeight) {\n          if (this._setHeightMqHandler != null) {\n            $(window).off('changed.zf.mediaquery', this._setHeightMqHandler);\n          }\n        }\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Tabs;\n  }();\n\n  Tabs.defaults = {\n    /**\n     * Allows the window to scroll to content of active pane on load if set to true.\n     * @option\n     * @example false\n     */\n    autoFocus: false,\n\n    /**\n     * Allows keyboard input to 'wrap' around the tab links.\n     * @option\n     * @example true\n     */\n    wrapOnKeys: true,\n\n    /**\n     * Allows the tab content panes to match heights if set to true.\n     * @option\n     * @example false\n     */\n    matchHeight: false,\n\n    /**\n     * Class applied to `li`'s in tab link list.\n     * @option\n     * @example 'tabs-title'\n     */\n    linkClass: 'tabs-title',\n\n    /**\n     * Class applied to the content containers.\n     * @option\n     * @example 'tabs-panel'\n     */\n    panelClass: 'tabs-panel'\n  };\n\n  function checkClass($elem) {\n    return $elem.hasClass('is-active');\n  }\n\n  // Window exports\n  Foundation.plugin(Tabs, 'Tabs');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Toggler module.\n   * @module foundation.toggler\n   * @requires foundation.util.motion\n   * @requires foundation.util.triggers\n   */\n\n  var Toggler = function () {\n    /**\n     * Creates a new instance of Toggler.\n     * @class\n     * @fires Toggler#init\n     * @param {Object} element - jQuery object to add the trigger to.\n     * @param {Object} options - Overrides to the default plugin settings.\n     */\n\n    function Toggler(element, options) {\n      _classCallCheck(this, Toggler);\n\n      this.$element = element;\n      this.options = $.extend({}, Toggler.defaults, element.data(), options);\n      this.className = '';\n\n      this._init();\n      this._events();\n\n      Foundation.registerPlugin(this, 'Toggler');\n    }\n\n    /**\n     * Initializes the Toggler plugin by parsing the toggle class from data-toggler, or animation classes from data-animate.\n     * @function\n     * @private\n     */\n\n\n    _createClass(Toggler, [{\n      key: '_init',\n      value: function _init() {\n        var input;\n        // Parse animation classes if they were set\n        if (this.options.animate) {\n          input = this.options.animate.split(' ');\n\n          this.animationIn = input[0];\n          this.animationOut = input[1] || null;\n        }\n        // Otherwise, parse toggle class\n        else {\n            input = this.$element.data('toggler');\n            // Allow for a . at the beginning of the string\n            this.className = input[0] === '.' ? input.slice(1) : input;\n          }\n\n        // Add ARIA attributes to triggers\n        var id = this.$element[0].id;\n        $('[data-open=\"' + id + '\"], [data-close=\"' + id + '\"], [data-toggle=\"' + id + '\"]').attr('aria-controls', id);\n        // If the target is hidden, add aria-hidden\n        this.$element.attr('aria-expanded', this.$element.is(':hidden') ? false : true);\n      }\n\n      /**\n       * Initializes events for the toggle trigger.\n       * @function\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        this.$element.off('toggle.zf.trigger').on('toggle.zf.trigger', this.toggle.bind(this));\n      }\n\n      /**\n       * Toggles the target class on the target element. An event is fired from the original trigger depending on if the resultant state was \"on\" or \"off\".\n       * @function\n       * @fires Toggler#on\n       * @fires Toggler#off\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        this[this.options.animate ? '_toggleAnimate' : '_toggleClass']();\n      }\n    }, {\n      key: '_toggleClass',\n      value: function _toggleClass() {\n        this.$element.toggleClass(this.className);\n\n        var isOn = this.$element.hasClass(this.className);\n        if (isOn) {\n          /**\n           * Fires if the target element has the class after a toggle.\n           * @event Toggler#on\n           */\n          this.$element.trigger('on.zf.toggler');\n        } else {\n          /**\n           * Fires if the target element does not have the class after a toggle.\n           * @event Toggler#off\n           */\n          this.$element.trigger('off.zf.toggler');\n        }\n\n        this._updateARIA(isOn);\n      }\n    }, {\n      key: '_toggleAnimate',\n      value: function _toggleAnimate() {\n        var _this = this;\n\n        if (this.$element.is(':hidden')) {\n          Foundation.Motion.animateIn(this.$element, this.animationIn, function () {\n            _this._updateARIA(true);\n            this.trigger('on.zf.toggler');\n          });\n        } else {\n          Foundation.Motion.animateOut(this.$element, this.animationOut, function () {\n            _this._updateARIA(false);\n            this.trigger('off.zf.toggler');\n          });\n        }\n      }\n    }, {\n      key: '_updateARIA',\n      value: function _updateARIA(isOn) {\n        this.$element.attr('aria-expanded', isOn ? true : false);\n      }\n\n      /**\n       * Destroys the instance of Toggler on the element.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.off('.zf.toggler');\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Toggler;\n  }();\n\n  Toggler.defaults = {\n    /**\n     * Tells the plugin if the element should animated when toggled.\n     * @option\n     * @example false\n     */\n    animate: false\n  };\n\n  // Window exports\n  Foundation.plugin(Toggler, 'Toggler');\n}(jQuery);\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n!function ($) {\n\n  /**\n   * Tooltip module.\n   * @module foundation.tooltip\n   * @requires foundation.util.box\n   * @requires foundation.util.triggers\n   */\n\n  var Tooltip = function () {\n    /**\n     * Creates a new instance of a Tooltip.\n     * @class\n     * @fires Tooltip#init\n     * @param {jQuery} element - jQuery object to attach a tooltip to.\n     * @param {Object} options - object to extend the default configuration.\n     */\n\n    function Tooltip(element, options) {\n      _classCallCheck(this, Tooltip);\n\n      this.$element = element;\n      this.options = $.extend({}, Tooltip.defaults, this.$element.data(), options);\n\n      this.isActive = false;\n      this.isClick = false;\n      this._init();\n\n      Foundation.registerPlugin(this, 'Tooltip');\n    }\n\n    /**\n     * Initializes the tooltip by setting the creating the tip element, adding it's text, setting private variables and setting attributes on the anchor.\n     * @private\n     */\n\n\n    _createClass(Tooltip, [{\n      key: '_init',\n      value: function _init() {\n        var elemId = this.$element.attr('aria-describedby') || Foundation.GetYoDigits(6, 'tooltip');\n\n        this.options.positionClass = this.options.positionClass || this._getPositionClass(this.$element);\n        this.options.tipText = this.options.tipText || this.$element.attr('title');\n        this.template = this.options.template ? $(this.options.template) : this._buildTemplate(elemId);\n\n        this.template.appendTo(document.body).text(this.options.tipText).hide();\n\n        this.$element.attr({\n          'title': '',\n          'aria-describedby': elemId,\n          'data-yeti-box': elemId,\n          'data-toggle': elemId,\n          'data-resize': elemId\n        }).addClass(this.triggerClass);\n\n        //helper variables to track movement on collisions\n        this.usedPositions = [];\n        this.counter = 4;\n        this.classChanged = false;\n\n        this._events();\n      }\n\n      /**\n       * Grabs the current positioning class, if present, and returns the value or an empty string.\n       * @private\n       */\n\n    }, {\n      key: '_getPositionClass',\n      value: function _getPositionClass(element) {\n        if (!element) {\n          return '';\n        }\n        // var position = element.attr('class').match(/top|left|right/g);\n        var position = element[0].className.match(/\\b(top|left|right)\\b/g);\n        position = position ? position[0] : '';\n        return position;\n      }\n    }, {\n      key: '_buildTemplate',\n\n      /**\n       * builds the tooltip element, adds attributes, and returns the template.\n       * @private\n       */\n      value: function _buildTemplate(id) {\n        var templateClasses = (this.options.tooltipClass + ' ' + this.options.positionClass + ' ' + this.options.templateClasses).trim();\n        var $template = $('<div></div>').addClass(templateClasses).attr({\n          'role': 'tooltip',\n          'aria-hidden': true,\n          'data-is-active': false,\n          'data-is-focus': false,\n          'id': id\n        });\n        return $template;\n      }\n\n      /**\n       * Function that gets called if a collision event is detected.\n       * @param {String} position - positioning class to try\n       * @private\n       */\n\n    }, {\n      key: '_reposition',\n      value: function _reposition(position) {\n        this.usedPositions.push(position ? position : 'bottom');\n\n        //default, try switching to opposite side\n        if (!position && this.usedPositions.indexOf('top') < 0) {\n          this.template.addClass('top');\n        } else if (position === 'top' && this.usedPositions.indexOf('bottom') < 0) {\n          this.template.removeClass(position);\n        } else if (position === 'left' && this.usedPositions.indexOf('right') < 0) {\n          this.template.removeClass(position).addClass('right');\n        } else if (position === 'right' && this.usedPositions.indexOf('left') < 0) {\n          this.template.removeClass(position).addClass('left');\n        }\n\n        //if default change didn't work, try bottom or left first\n        else if (!position && this.usedPositions.indexOf('top') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.template.addClass('left');\n          } else if (position === 'top' && this.usedPositions.indexOf('bottom') > -1 && this.usedPositions.indexOf('left') < 0) {\n            this.template.removeClass(position).addClass('left');\n          } else if (position === 'left' && this.usedPositions.indexOf('right') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.template.removeClass(position);\n          } else if (position === 'right' && this.usedPositions.indexOf('left') > -1 && this.usedPositions.indexOf('bottom') < 0) {\n            this.template.removeClass(position);\n          }\n          //if nothing cleared, set to bottom\n          else {\n              this.template.removeClass(position);\n            }\n        this.classChanged = true;\n        this.counter--;\n      }\n\n      /**\n       * sets the position class of an element and recursively calls itself until there are no more possible positions to attempt, or the tooltip element is no longer colliding.\n       * if the tooltip is larger than the screen width, default to full width - any user selected margin\n       * @private\n       */\n\n    }, {\n      key: '_setPosition',\n      value: function _setPosition() {\n        var position = this._getPositionClass(this.template),\n            $tipDims = Foundation.Box.GetDimensions(this.template),\n            $anchorDims = Foundation.Box.GetDimensions(this.$element),\n            direction = position === 'left' ? 'left' : position === 'right' ? 'left' : 'top',\n            param = direction === 'top' ? 'height' : 'width',\n            offset = param === 'height' ? this.options.vOffset : this.options.hOffset,\n            _this = this;\n\n        if ($tipDims.width >= $tipDims.windowDims.width || !this.counter && !Foundation.Box.ImNotTouchingYou(this.template)) {\n          this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            // this.$element.offset(Foundation.GetOffsets(this.template, this.$element, 'center bottom', this.options.vOffset, this.options.hOffset, true)).css({\n            'width': $anchorDims.windowDims.width - this.options.hOffset * 2,\n            'height': 'auto'\n          });\n          return false;\n        }\n\n        this.template.offset(Foundation.Box.GetOffsets(this.template, this.$element, 'center ' + (position || 'bottom'), this.options.vOffset, this.options.hOffset));\n\n        while (!Foundation.Box.ImNotTouchingYou(this.template) && this.counter) {\n          this._reposition(position);\n          this._setPosition();\n        }\n      }\n\n      /**\n       * reveals the tooltip, and fires an event to close any other open tooltips on the page\n       * @fires Tooltip#closeme\n       * @fires Tooltip#show\n       * @function\n       */\n\n    }, {\n      key: 'show',\n      value: function show() {\n        if (this.options.showOn !== 'all' && !Foundation.MediaQuery.atLeast(this.options.showOn)) {\n          // console.error('The screen is too small to display this tooltip');\n          return false;\n        }\n\n        var _this = this;\n        this.template.css('visibility', 'hidden').show();\n        this._setPosition();\n\n        /**\n         * Fires to close all other open tooltips on the page\n         * @event Closeme#tooltip\n         */\n        this.$element.trigger('closeme.zf.tooltip', this.template.attr('id'));\n\n        this.template.attr({\n          'data-is-active': true,\n          'aria-hidden': false\n        });\n        _this.isActive = true;\n        // console.log(this.template);\n        this.template.stop().hide().css('visibility', '').fadeIn(this.options.fadeInDuration, function () {\n          //maybe do stuff?\n        });\n        /**\n         * Fires when the tooltip is shown\n         * @event Tooltip#show\n         */\n        this.$element.trigger('show.zf.tooltip');\n      }\n\n      /**\n       * Hides the current tooltip, and resets the positioning class if it was changed due to collision\n       * @fires Tooltip#hide\n       * @function\n       */\n\n    }, {\n      key: 'hide',\n      value: function hide() {\n        // console.log('hiding', this.$element.data('yeti-box'));\n        var _this = this;\n        this.template.stop().attr({\n          'aria-hidden': true,\n          'data-is-active': false\n        }).fadeOut(this.options.fadeOutDuration, function () {\n          _this.isActive = false;\n          _this.isClick = false;\n          if (_this.classChanged) {\n            _this.template.removeClass(_this._getPositionClass(_this.template)).addClass(_this.options.positionClass);\n\n            _this.usedPositions = [];\n            _this.counter = 4;\n            _this.classChanged = false;\n          }\n        });\n        /**\n         * fires when the tooltip is hidden\n         * @event Tooltip#hide\n         */\n        this.$element.trigger('hide.zf.tooltip');\n      }\n\n      /**\n       * adds event listeners for the tooltip and its anchor\n       * TODO combine some of the listeners like focus and mouseenter, etc.\n       * @private\n       */\n\n    }, {\n      key: '_events',\n      value: function _events() {\n        var _this = this;\n        var $template = this.template;\n        var isFocus = false;\n\n        if (!this.options.disableHover) {\n\n          this.$element.on('mouseenter.zf.tooltip', function (e) {\n            if (!_this.isActive) {\n              _this.timeout = setTimeout(function () {\n                _this.show();\n              }, _this.options.hoverDelay);\n            }\n          }).on('mouseleave.zf.tooltip', function (e) {\n            clearTimeout(_this.timeout);\n            if (!isFocus || _this.isClick && !_this.options.clickOpen) {\n              _this.hide();\n            }\n          });\n        }\n\n        if (this.options.clickOpen) {\n          this.$element.on('mousedown.zf.tooltip', function (e) {\n            e.stopImmediatePropagation();\n            if (_this.isClick) {\n              //_this.hide();\n              // _this.isClick = false;\n            } else {\n                _this.isClick = true;\n                if ((_this.options.disableHover || !_this.$element.attr('tabindex')) && !_this.isActive) {\n                  _this.show();\n                }\n              }\n          });\n        } else {\n          this.$element.on('mousedown.zf.tooltip', function (e) {\n            e.stopImmediatePropagation();\n            _this.isClick = true;\n          });\n        }\n\n        if (!this.options.disableForTouch) {\n          this.$element.on('tap.zf.tooltip touchend.zf.tooltip', function (e) {\n            _this.isActive ? _this.hide() : _this.show();\n          });\n        }\n\n        this.$element.on({\n          // 'toggle.zf.trigger': this.toggle.bind(this),\n          // 'close.zf.trigger': this.hide.bind(this)\n          'close.zf.trigger': this.hide.bind(this)\n        });\n\n        this.$element.on('focus.zf.tooltip', function (e) {\n          isFocus = true;\n          if (_this.isClick) {\n            // If we're not showing open on clicks, we need to pretend a click-launched focus isn't\n            // a real focus, otherwise on hover and come back we get bad behavior\n            if (!_this.options.clickOpen) {\n              isFocus = false;\n            }\n            return false;\n          } else {\n            _this.show();\n          }\n        }).on('focusout.zf.tooltip', function (e) {\n          isFocus = false;\n          _this.isClick = false;\n          _this.hide();\n        }).on('resizeme.zf.trigger', function () {\n          if (_this.isActive) {\n            _this._setPosition();\n          }\n        });\n      }\n\n      /**\n       * adds a toggle method, in addition to the static show() & hide() functions\n       * @function\n       */\n\n    }, {\n      key: 'toggle',\n      value: function toggle() {\n        if (this.isActive) {\n          this.hide();\n        } else {\n          this.show();\n        }\n      }\n\n      /**\n       * Destroys an instance of tooltip, removes template element from the view.\n       * @function\n       */\n\n    }, {\n      key: 'destroy',\n      value: function destroy() {\n        this.$element.attr('title', this.template.text()).off('.zf.trigger .zf.tootip')\n        //  .removeClass('has-tip')\n        .removeAttr('aria-describedby').removeAttr('data-yeti-box').removeAttr('data-toggle').removeAttr('data-resize');\n\n        this.template.remove();\n\n        Foundation.unregisterPlugin(this);\n      }\n    }]);\n\n    return Tooltip;\n  }();\n\n  Tooltip.defaults = {\n    disableForTouch: false,\n    /**\n     * Time, in ms, before a tooltip should open on hover.\n     * @option\n     * @example 200\n     */\n    hoverDelay: 200,\n    /**\n     * Time, in ms, a tooltip should take to fade into view.\n     * @option\n     * @example 150\n     */\n    fadeInDuration: 150,\n    /**\n     * Time, in ms, a tooltip should take to fade out of view.\n     * @option\n     * @example 150\n     */\n    fadeOutDuration: 150,\n    /**\n     * Disables hover events from opening the tooltip if set to true\n     * @option\n     * @example false\n     */\n    disableHover: false,\n    /**\n     * Optional addtional classes to apply to the tooltip template on init.\n     * @option\n     * @example 'my-cool-tip-class'\n     */\n    templateClasses: '',\n    /**\n     * Non-optional class added to tooltip templates. Foundation default is 'tooltip'.\n     * @option\n     * @example 'tooltip'\n     */\n    tooltipClass: 'tooltip',\n    /**\n     * Class applied to the tooltip anchor element.\n     * @option\n     * @example 'has-tip'\n     */\n    triggerClass: 'has-tip',\n    /**\n     * Minimum breakpoint size at which to open the tooltip.\n     * @option\n     * @example 'small'\n     */\n    showOn: 'small',\n    /**\n     * Custom template to be used to generate markup for tooltip.\n     * @option\n     * @example '&lt;div class=\"tooltip\"&gt;&lt;/div&gt;'\n     */\n    template: '',\n    /**\n     * Text displayed in the tooltip template on open.\n     * @option\n     * @example 'Some cool space fact here.'\n     */\n    tipText: '',\n    touchCloseText: 'Tap to close.',\n    /**\n     * Allows the tooltip to remain open if triggered with a click or touch event.\n     * @option\n     * @example true\n     */\n    clickOpen: true,\n    /**\n     * Additional positioning classes, set by the JS\n     * @option\n     * @example 'top'\n     */\n    positionClass: '',\n    /**\n     * Distance, in pixels, the template should push away from the anchor on the Y axis.\n     * @option\n     * @example 10\n     */\n    vOffset: 10,\n    /**\n     * Distance, in pixels, the template should push away from the anchor on the X axis, if aligned to a side.\n     * @option\n     * @example 12\n     */\n    hOffset: 12\n  };\n\n  /**\n   * TODO utilize resize event trigger\n   */\n\n  // Window exports\n  Foundation.plugin(Tooltip, 'Tooltip');\n}(jQuery);\n","window.whatInput = (function() {\n\n  'use strict';\n\n  /*\n    ---------------\n    variables\n    ---------------\n  */\n\n  // array of actively pressed keys\n  var activeKeys = [];\n\n  // cache document.body\n  var body;\n\n  // boolean: true if touch buffer timer is running\n  var buffer = false;\n\n  // the last used input type\n  var currentInput = null;\n\n  // `input` types that don't accept text\n  var nonTypingInputs = [\n    'button',\n    'checkbox',\n    'file',\n    'image',\n    'radio',\n    'reset',\n    'submit'\n  ];\n\n  // detect version of mouse wheel event to use\n  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n  var mouseWheel = detectWheel();\n\n  // list of modifier keys commonly used with the mouse and\n  // can be safely ignored to prevent false keyboard detection\n  var ignoreMap = [\n    16, // shift\n    17, // control\n    18, // alt\n    91, // Windows key / left Apple cmd\n    93  // Windows menu / right Apple cmd\n  ];\n\n  // mapping of events to input types\n  var inputMap = {\n    'keydown': 'keyboard',\n    'keyup': 'keyboard',\n    'mousedown': 'mouse',\n    'mousemove': 'mouse',\n    'MSPointerDown': 'pointer',\n    'MSPointerMove': 'pointer',\n    'pointerdown': 'pointer',\n    'pointermove': 'pointer',\n    'touchstart': 'touch'\n  };\n\n  // add correct mouse wheel event mapping to `inputMap`\n  inputMap[detectWheel()] = 'mouse';\n\n  // array of all used input types\n  var inputTypes = [];\n\n  // mapping of key codes to a common name\n  var keyMap = {\n    9: 'tab',\n    13: 'enter',\n    16: 'shift',\n    27: 'esc',\n    32: 'space',\n    37: 'left',\n    38: 'up',\n    39: 'right',\n    40: 'down'\n  };\n\n  // map of IE 10 pointer events\n  var pointerMap = {\n    2: 'touch',\n    3: 'touch', // treat pen like touch\n    4: 'mouse'\n  };\n\n  // touch buffer timer\n  var timer;\n\n\n  /*\n    ---------------\n    functions\n    ---------------\n  */\n\n  // allows events that are also triggered to be filtered out for `touchstart`\n  function eventBuffer() {\n    clearTimer();\n    setInput(event);\n\n    buffer = true;\n    timer = window.setTimeout(function() {\n      buffer = false;\n    }, 650);\n  }\n\n  function bufferedEvent(event) {\n    if (!buffer) setInput(event);\n  }\n\n  function unBufferedEvent(event) {\n    clearTimer();\n    setInput(event);\n  }\n\n  function clearTimer() {\n    window.clearTimeout(timer);\n  }\n\n  function setInput(event) {\n    var eventKey = key(event);\n    var value = inputMap[event.type];\n    if (value === 'pointer') value = pointerType(event);\n\n    // don't do anything if the value matches the input type already set\n    if (currentInput !== value) {\n      var eventTarget = target(event);\n      var eventTargetNode = eventTarget.nodeName.toLowerCase();\n      var eventTargetType = (eventTargetNode === 'input') ? eventTarget.getAttribute('type') : null;\n\n      if (\n        (// only if the user flag to allow typing in form fields isn't set\n        !body.hasAttribute('data-whatinput-formtyping') &&\n\n        // only if currentInput has a value\n        currentInput &&\n\n        // only if the input is `keyboard`\n        value === 'keyboard' &&\n\n        // not if the key is `TAB`\n        keyMap[eventKey] !== 'tab' &&\n\n        // only if the target is a form input that accepts text\n        (\n           eventTargetNode === 'textarea' ||\n           eventTargetNode === 'select' ||\n           (eventTargetNode === 'input' && nonTypingInputs.indexOf(eventTargetType) < 0)\n        )) || (\n          // ignore modifier keys\n          ignoreMap.indexOf(eventKey) > -1\n        )\n      ) {\n        // ignore keyboard typing\n      } else {\n        switchInput(value);\n      }\n    }\n\n    if (value === 'keyboard') logKeys(eventKey);\n  }\n\n  function switchInput(string) {\n    currentInput = string;\n    body.setAttribute('data-whatinput', currentInput);\n\n    if (inputTypes.indexOf(currentInput) === -1) inputTypes.push(currentInput);\n  }\n\n  function key(event) {\n    return (event.keyCode) ? event.keyCode : event.which;\n  }\n\n  function target(event) {\n    return event.target || event.srcElement;\n  }\n\n  function pointerType(event) {\n    if (typeof event.pointerType === 'number') {\n      return pointerMap[event.pointerType];\n    } else {\n      return (event.pointerType === 'pen') ? 'touch' : event.pointerType; // treat pen like touch\n    }\n  }\n\n  // keyboard logging\n  function logKeys(eventKey) {\n    if (activeKeys.indexOf(keyMap[eventKey]) === -1 && keyMap[eventKey]) activeKeys.push(keyMap[eventKey]);\n  }\n\n  function unLogKeys(event) {\n    var eventKey = key(event);\n    var arrayPos = activeKeys.indexOf(keyMap[eventKey]);\n\n    if (arrayPos !== -1) activeKeys.splice(arrayPos, 1);\n  }\n\n  function bindEvents() {\n    body = document.body;\n\n    // pointer events (mouse, pen, touch)\n    if (window.PointerEvent) {\n      body.addEventListener('pointerdown', bufferedEvent);\n      body.addEventListener('pointermove', bufferedEvent);\n    } else if (window.MSPointerEvent) {\n      body.addEventListener('MSPointerDown', bufferedEvent);\n      body.addEventListener('MSPointerMove', bufferedEvent);\n    } else {\n\n      // mouse events\n      body.addEventListener('mousedown', bufferedEvent);\n      body.addEventListener('mousemove', bufferedEvent);\n\n      // touch events\n      if ('ontouchstart' in window) {\n        body.addEventListener('touchstart', eventBuffer);\n      }\n    }\n\n    // mouse wheel\n    body.addEventListener(mouseWheel, bufferedEvent);\n\n    // keyboard events\n    body.addEventListener('keydown', unBufferedEvent);\n    body.addEventListener('keyup', unBufferedEvent);\n    document.addEventListener('keyup', unLogKeys);\n  }\n\n\n  /*\n    ---------------\n    utilities\n    ---------------\n  */\n\n  // detect version of mouse wheel event to use\n  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n  function detectWheel() {\n    return mouseWheel = 'onwheel' in document.createElement('div') ?\n      'wheel' : // Modern browsers support \"wheel\"\n\n      document.onmousewheel !== undefined ?\n        'mousewheel' : // Webkit and IE support at least \"mousewheel\"\n        'DOMMouseScroll'; // let's assume that remaining browsers are older Firefox\n  }\n\n\n  /*\n    ---------------\n    init\n\n    don't start script unless browser cuts the mustard,\n    also passes if polyfills are used\n    ---------------\n  */\n\n  if (\n    'addEventListener' in window &&\n    Array.prototype.indexOf\n  ) {\n\n    // if the dom is already ready already (script was placed at bottom of <body>)\n    if (document.body) {\n      bindEvents();\n\n    // otherwise wait for the dom to load (script was placed in the <head>)\n    } else {\n      document.addEventListener('DOMContentLoaded', bindEvents);\n    }\n  }\n\n\n  /*\n    ---------------\n    api\n    ---------------\n  */\n\n  return {\n\n    // returns string: the current input type\n    ask: function() { return currentInput; },\n\n    // returns array: currently pressed keys\n    keys: function() { return activeKeys; },\n\n    // returns array: all the detected input types\n    types: function() { return inputTypes; },\n\n    // accepts string: manually set the input type\n    set: switchInput\n  };\n\n}());\n"],"sourceRoot":"/source/"}